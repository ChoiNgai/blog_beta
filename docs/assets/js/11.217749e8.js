(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{401:function(a,t,s){"use strict";s.r(t);var n=s(30),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"《java核心技术-卷i》阅读笔记"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#《java核心技术-卷i》阅读笔记"}},[a._v("#")]),a._v(" 《Java核心技术 卷I》阅读笔记")]),a._v(" "),s("h2",{attrs:{id:"第1章-java程序设计概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第1章-java程序设计概述"}},[a._v("#")]),a._v(" 第1章 Java程序设计概述")]),a._v(" "),s("h3",{attrs:{id:"_1-1-java程序设计平台"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-java程序设计平台"}},[a._v("#")]),a._v(" 1.1 Java程序设计平台")]),a._v(" "),s("p",[a._v("Java是一个完整的平台，提供了可移植性、垃圾回收、庞大的库、网络连接以及数据块存取等功能。")]),a._v(" "),s("h3",{attrs:{id:"_1-2-java-白皮书-的关键术语"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-java-白皮书-的关键术语"}},[a._v("#")]),a._v(" 1.2 Java“白皮书”的关键术语")]),a._v(" "),s("p",[a._v("关键术语：")]),a._v(" "),s("p",[a._v("1）简单性")]),a._v(" "),s("p",[a._v("2）面向对象")]),a._v(" "),s("p",[a._v("3）分布式")]),a._v(" "),s("p",[a._v("4）健壮性")]),a._v(" "),s("p",[a._v("5）安全性")]),a._v(" "),s("p",[a._v("6）体系结构中立")]),a._v(" "),s("p",[a._v("7）可移植性")]),a._v(" "),s("p",[a._v("8）解释型")]),a._v(" "),s("p",[a._v("9）高性能")]),a._v(" "),s("p",[a._v("10）多线程")]),a._v(" "),s("p",[a._v("11）动态性")]),a._v(" "),s("h2",{attrs:{id:"第2章-java程序设计环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第2章-java程序设计环境"}},[a._v("#")]),a._v(" 第2章 Java程序设计环境")]),a._v(" "),s("p",[a._v("下载地址：www.oracle.com/technetwork/java/javase/downloads")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211118140650.png",alt:"表2-1 Java术语"}})]),a._v(" "),s("p",[a._v("接下来，Java SE会大量出现，相对于Java EE（Enterprise Edition）和Java ME（Micro Edition），它是Java的标准版。")]),a._v(" "),s("h2",{attrs:{id:"第3章-java的基本程序设计结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第3章-java的基本程序设计结构"}},[a._v("#")]),a._v(" 第3章 Java的基本程序设计结构")]),a._v(" "),s("h3",{attrs:{id:"_3-1-一个简单的java应用程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-一个简单的java应用程序"}},[a._v("#")]),a._v(" 3.1 一个简单的Java应用程序")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("FirstSample")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Hello World"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("关键字"),s("strong",[a._v("public")]),a._v("称为访问修饰符（accessmodifier），这些修饰符用于控制程序的其他部分对这段代码的访问级别。")]),a._v(" "),s("p",[a._v("关键字"),s("strong",[a._v("class")]),a._v("表明Java程序中的全部内容都包含在类中，class后面是类名（文件名跟公共类名必须相同，即这个文件为"),s("code",[a._v("FirstSample.java")]),a._v("），此外"),s("strong",[a._v("Java区分大小写")])]),a._v(" "),s("p",[a._v("static void声明这个主程序的类型（Java的main方法必须是静态的，void也表示没有返回值），Java SE7 及之后的版本"),s("strong",[a._v("每个java程序都必须有一个main方法")])]),a._v(" "),s("h3",{attrs:{id:"_3-2-注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-注释"}},[a._v("#")]),a._v(" 3.2 注释")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 单行注释")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/*\n多行注释\n多行注释\n*/")]),a._v("\n")])])]),s("h3",{attrs:{id:"_3-3-数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-数据类型"}},[a._v("#")]),a._v(" 3.3 数据类型")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("类型")]),a._v(" "),s("th",[a._v("存储占用")]),a._v(" "),s("th",[a._v("取值范围")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("int")]),a._v(" "),s("td",[a._v("4字节")]),a._v(" "),s("td",[a._v("-2147483648 ~ 2147483647")])]),a._v(" "),s("tr",[s("td",[a._v("short")]),a._v(" "),s("td",[a._v("2字节")]),a._v(" "),s("td",[a._v("-32768 ~ 32767")])]),a._v(" "),s("tr",[s("td",[a._v("long")]),a._v(" "),s("td",[a._v("8字节")]),a._v(" "),s("td")]),a._v(" "),s("tr",[s("td",[a._v("byte")]),a._v(" "),s("td",[a._v("1字节")]),a._v(" "),s("td",[a._v("-128 ~ 127")])]),a._v(" "),s("tr",[s("td",[a._v("float")]),a._v(" "),s("td",[a._v("4字节")]),a._v(" "),s("td")]),a._v(" "),s("tr",[s("td",[a._v("double")]),a._v(" "),s("td",[a._v("8字节")]),a._v(" "),s("td")]),a._v(" "),s("tr",[s("td",[a._v("char")]),a._v(" "),s("td"),a._v(" "),s("td",[a._v("false 或 true")])]),a._v(" "),s("tr",[s("td",[a._v("boolean")]),a._v(" "),s("td"),a._v(" "),s("td")])])]),a._v(" "),s("h3",{attrs:{id:"_3-4-变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-变量"}},[a._v("#")]),a._v(" 3.4 变量")]),a._v(" "),s("ul",[s("li",[a._v("变量声明")])]),a._v(" "),s("p",[a._v("变量声明示例：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" salary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//注意：需要以分号结尾")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" vacationDats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//一行声明多个变量（不提倡）")]),a._v("\n")])])]),s("p",[a._v("变量名必须是一个以字母开头并由字母或数字构成的序列")]),a._v(" "),s("ul",[s("li",[a._v("初始化变量")])]),a._v(" "),s("p",[a._v("声明变量之后，需要初始化这个变量，例如：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\ni "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("也可以写成：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("ul",[s("li",[a._v("常量")])]),a._v(" "),s("p",[a._v("关键字final表示这个变量只能被赋值一次（习惯上，常量名使用全大写），例如：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("float")]),a._v(" CM_PER_INCH "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2.54")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h3",{attrs:{id:"_3-5-运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-运算符"}},[a._v("#")]),a._v(" 3.5 运算符")]),a._v(" "),s("p",[s("strong",[a._v("+")]),a._v("   ：加")]),a._v(" "),s("p",[s("strong",[a._v("-")]),a._v("    ：减")]),a._v(" "),s("p",[a._v("*****    ：乘")]),a._v(" "),s("p",[s("strong",[a._v("/")]),a._v("    ：除")]),a._v(" "),s("h4",{attrs:{id:"_3-5-1-数学函数与常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-1-数学函数与常量"}},[a._v("#")]),a._v(" 3.5.1 数学函数与常量")]),a._v(" "),s("p",[a._v("计算平方根：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Math")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sqrt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//输出结果：2.0")]),a._v("\n")])])]),s("p",[a._v("幂运算：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("double y = Math.pow(x,a);\t//x的a次幂\n")])])]),s("p",[a._v("此外Math类还提供了一些其他常用的函数：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Math")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("sin\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Math")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("cos\nmath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("tan\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Math")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("exp\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Math")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("log\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Math")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("log10\n")])])]),s("h4",{attrs:{id:"_3-5-2-数值类型之间的转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-2-数值类型之间的转换"}},[a._v("#")]),a._v(" 3.5.2 数值类型之间的转换")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211118151550.png",alt:"数值类型之间的合法转换"}})]),a._v(" "),s("p",[a._v("实心箭头：表示无信息丢失的转换；")]),a._v(" "),s("p",[a._v("虚箭头：表示可能有精度损失的转换。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211118151836.png",alt:" int型转成 float型会丢失一定精度"}})]),a._v(" "),s("blockquote",[s("p",[a._v("当使用上面两个数值进行二元操作时（例如n + f, n是整数，f是浮点数），先要将两个操作数转换为同一种类型，然后再进行计算。")]),a._v(" "),s("ul",[s("li",[a._v("如果两个操作数中有一个是double类型，另一个操作数就会转换为double类型。")]),a._v(" "),s("li",[a._v("否则，如果其中一个操作数是float类型，另一个操作数将会转换为float类型。")]),a._v(" "),s("li",[a._v("否则，如果其中一个操作数是long类型，另一个操作数将会转换为long类型。")]),a._v(" "),s("li",[a._v("否则，两个操作数都将被转换为int类型。")])])]),a._v(" "),s("h4",{attrs:{id:"_3-5-3-强制类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-3-强制类型转换"}},[a._v("#")]),a._v(" 3.5.3 强制类型转换")]),a._v(" "),s("p",[a._v("int型可能会转换成 double型，但是也可以把double型强制转换为 int型，例如：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9.99")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" nx "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//此时nx变为9")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" nx "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Math")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("round")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//此时nx变为10")]),a._v("\n")])])]),s("h4",{attrs:{id:"_3-5-4-结合赋值和运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-4-结合赋值和运算符"}},[a._v("#")]),a._v(" 3.5.4 结合赋值和运算符")]),a._v(" "),s("p",[a._v("可以在赋值中使用二元运算符来简化写法，例如")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nx "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//上面两行语句是一样的")]),a._v("\n")])])]),s("h4",{attrs:{id:"_3-5-5-自增与自减运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-5-自增与自减运算符"}},[a._v("#")]),a._v(" 3.5.5 自增与自减运算符")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nn"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//n为13")]),a._v("\n")])])]),s("h4",{attrs:{id:"_3-5-6-关系和boolean运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-6-关系和boolean运算符"}},[a._v("#")]),a._v(" 3.5.6 关系和boolean运算符")]),a._v(" "),s("p",[a._v("3 == 7； //false\n3 != 7； //true")]),a._v(" "),s("h4",{attrs:{id:"_3-5-7-位运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-7-位运算符"}},[a._v("#")]),a._v(" 3.5.7 位运算符")]),a._v(" "),s("p",[s("strong",[a._v("&")]),a._v(" ：and")]),a._v(" "),s("p",[s("strong",[a._v("|")]),a._v("   ：or")]),a._v(" "),s("p",[s("strong",[a._v("^")]),a._v("  ：xor")]),a._v(" "),s("p",[s("strong",[a._v("~")]),a._v("  ：not")]),a._v(" "),s("h4",{attrs:{id:"_3-5-8-括号与运算符级别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-8-括号与运算符级别"}},[a._v("#")]),a._v(" 3.5.8 括号与运算符级别")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211118152825.png",alt:"运算符优先级"}})]),a._v(" "),s("h4",{attrs:{id:"_3-5-9-枚举类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-9-枚举类型"}},[a._v("#")]),a._v(" 3.5.9 枚举类型")]),a._v(" "),s("p",[a._v("有时候，变量的取值只在一个有限的集合内（比如衣服只有几种尺寸）。针对这种情况，可以自定义枚举类型。枚举类型包括有限个命名的值。例如：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("enum")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("SMALL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("MEDIUM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("LARGE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("EXTRA_LARGE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("现在，可以声明这种类型的变量：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Size")]),a._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("MEDIUM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("Size类型的变量只能存储这个类型声明中给定的某个枚举值，或者null值，null表示这个变量没有设置任何值。")]),a._v(" "),s("h3",{attrs:{id:"_3-6-字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-字符串"}},[a._v("#")]),a._v(" 3.6 字符串")]),a._v(" "),s("h4",{attrs:{id:"_3-6-1-子串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-1-子串"}},[a._v("#")]),a._v(" 3.6.1 子串")]),a._v(" "),s("p",[a._v("String类的substring方法可以从一个较大的字符串提取出一个子串。例如：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("substring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('//s是"Hel"')]),a._v("\n")])])]),s("p",[s("code",[a._v("s.substring(a, b)")]),a._v("表示字符串 s 取 a到 b，其字符长度为 b - a")]),a._v(" "),s("h4",{attrs:{id:"_3-6-2-拼接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-2-拼接"}},[a._v("#")]),a._v(" 3.6.2 拼接")]),a._v(" "),s("p",[a._v("Java允许使用+号连接（拼接）两个字符串，例如")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Em"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mmm"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h4",{attrs:{id:"_3-6-3-不可变字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-3-不可变字符串"}},[a._v("#")]),a._v(" 3.6.3 不可变字符串")]),a._v(" "),s("p",[a._v('字符串的部分内容不可修改，比如"Hello"不能直接修改为"Help! "，但是可以通过拼接实现，例如：')]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Hello"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("substring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"p!"')]),a._v("\n")])])]),s("h4",{attrs:{id:"_3-6-4-检测字符串是否相等"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-4-检测字符串是否相等"}},[a._v("#")]),a._v(" 3.6.4 检测字符串是否相等")]),a._v(" "),s("p",[a._v("可以使用equals方法检测两个字符串是否相等。对于表达式：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("s "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Hello"')]),a._v("\nt "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"World"')]),a._v("\ns"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("equals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("如果字符串s与字符串t相等，则返回true；否则，返回false。")]),a._v(" "),s("p",[a._v("上述也可以写成：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("equals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"World"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("h4",{attrs:{id:"_3-6-5-空串与null串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-5-空串与null串"}},[a._v("#")]),a._v(" 3.6.5 空串与Null串")]),a._v(" "),s("p",[a._v("空串是长度为0的字符串，检验：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//或")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("equals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("空串是一个Java对象，有自己的串长度（0）和内容（空）。而 "),s("strong",[a._v("null")]),a._v(" 表示目前没有任何对象与该变量关联，用以下语句判断：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("str "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("检查一个字符串既不是null也不为空串：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("（因为显示问题，代码框中的 != 变成了"),s("code",[a._v("!=")]),a._v("，记住实际上是写**!=** ）")]),a._v(" "),s("h4",{attrs:{id:"_3-6-6-码点与代码单元"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-6-码点与代码单元"}},[a._v("#")]),a._v(" 3.6.6 码点与代码单元")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// n = 5")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("char")]),a._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("charAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('// b = "H"')]),a._v("\n")])])]),s("h3",{attrs:{id:"_3-7-输入输出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-输入输出"}},[a._v("#")]),a._v(" 3.7 输入输出")]),a._v(" "),s("h4",{attrs:{id:"_3-7-1-读取输入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-1-读取输入"}},[a._v("#")]),a._v(" 3.7.1 读取输入")]),a._v(" "),s("p",[a._v("要想通过控制台进行输入，首先需要构造一个Scanner对象，并与“标准输入流”System.in关联")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Scanner")]),a._v(" in "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Scanner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("in"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("现在，就可以使用Scanner类的各种方法实现输入操作了。例如，nextLine方法将输入一行")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"What is your name?"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" in"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("nextLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("在这里，使用nextLine方法是因为在输入行中有可能包含空格。要想读取一个单词（以空白符作为分隔符），就调用")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" firstName "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" in"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" in"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("nextInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//读取整数")]),a._v("\n")])])]),s("h4",{attrs:{id:"_3-7-2-格式化输出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-2-格式化输出"}},[a._v("#")]),a._v(" 3.7.2 格式化输出")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10000.00")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//输出3333.3333333333335")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"%8.2f"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//表示8个字符的宽度和小数点后两位，输出3333.33")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"%.2f"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10000.00")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//输出3,333.33")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"%tc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//打印当前日期和时间")]),a._v("\n")])])]),s("h4",{attrs:{id:"_3-7-3-文件输入与输出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-3-文件输入与输出"}},[a._v("#")]),a._v(" 3.7.3 文件输入与输出")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Scanner")]),a._v(" in "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Scanner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Paths")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"myfile.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"UTF-8"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h3",{attrs:{id:"_3-8-控制流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-控制流程"}},[a._v("#")]),a._v(" 3.8 控制流程")]),a._v(" "),s("h4",{attrs:{id:"_3-8-1-块作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-1-块作用域"}},[a._v("#")]),a._v(" 3.8.1 块作用域")]),a._v(" "),s("p",[a._v("块（block）是指由一对大括号括起来的若干条简单的Java语句，块确定了变量的作用域")]),a._v(" "),s("h4",{attrs:{id:"_3-8-2-条件语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-2-条件语句"}},[a._v("#")]),a._v(" 3.8.2 条件语句")]),a._v(" "),s("p",[a._v("条件语句格式：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("condition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" statement\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//或")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("condition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" statement "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v(" statement\n")])])]),s("p",[a._v("例如：")]),a._v(" "),s("ul",[s("li",[a._v("case1")])]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("yourSales "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\tperformance "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Satisfactory"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\tbonus "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("ul",[s("li",[a._v("case2")])]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("yourSales "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\tperformance "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Satisfactory"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\tbonus "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\tperformance "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"UnSatisfactory"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\tbonus "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h4",{attrs:{id:"_3-8-3-while循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-3-while循环"}},[a._v("#")]),a._v(" 3.8.3 while循环")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("condition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" statement\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//或")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v(" statement "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("condition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("例如：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 或")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("h4",{attrs:{id:"_3-8-4-for循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-4-for循环"}},[a._v("#")]),a._v(" 3.8.4 for循环")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v("（"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h4",{attrs:{id:"_3-8-5-多重选择-switch语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-5-多重选择-switch语句"}},[a._v("#")]),a._v(" 3.8.5 多重选择：switch语句")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Scanner")]),a._v(" in "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Scanner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("in"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"select an option (1,2)"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" choice "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" in"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("nextln")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("switch")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("choice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("case")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("case")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("default")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h4",{attrs:{id:"_3-8-6-中断控制流程语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-6-中断控制流程语句"}},[a._v("#")]),a._v(" 3.8.6 中断控制流程语句")]),a._v(" "),s("ul",[s("li",[a._v("break：跳出该层循环（抵消掉整个for/while语句）")]),a._v(" "),s("li",[a._v("continue：跳过这一次循环（抵消掉for/while中的一次执行）")])]),a._v(" "),s("h3",{attrs:{id:"_3-9-大数值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-9-大数值"}},[a._v("#")]),a._v(" 3.9 大数值")]),a._v(" "),s("p",[a._v("如果基本的整数和浮点数精度不能够满足需求，那么可以使用java.math包中的两个很有用的类："),s("strong",[a._v("BigInteger")]),a._v("（任意精度的整数运算）和"),s("strong",[a._v("BigDecimal")]),a._v("（任意精度的浮点数运算）。")]),a._v(" "),s("h3",{attrs:{id:"_3-10-数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-10-数组"}},[a._v("#")]),a._v(" 3.10 数组")]),a._v(" "),s("p",[a._v("声明数组（仅仅声明）：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 也可以写成 int a[]")]),a._v("\n")])])]),s("p",[a._v("（书上说Java程序员喜欢写第一种，我喜欢写成第二种）")]),a._v(" "),s("p",[a._v("声明并初始化数组：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//创建一个可以存储100个整数的数组")]),a._v("\n")])])]),s("h4",{attrs:{id:"_3-10-1-for-each循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-10-1-for-each循环"}},[a._v("#")]),a._v(" 3.10.1 for each循环")]),a._v(" "),s("p",[a._v("例如：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" element"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("这个循环读作“循环a中的每一个元素”（for each element in a），当然也可以用传统的for循环代替：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h4",{attrs:{id:"_3-10-2-数组初始化以及匿名数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-10-2-数组初始化以及匿名数组"}},[a._v("#")]),a._v(" 3.10.2 数组初始化以及匿名数组")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" smallPrimes "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("13")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("这种写法不需要new，甚至还可以初始化一个匿名数组：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("17")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("19")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("23")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("29")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("31")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("37")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("（备注：匿名数组一般用在只用一次的时候）")]),a._v(" "),s("h4",{attrs:{id:"_3-10-3-数组拷贝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-10-3-数组拷贝"}},[a._v("#")]),a._v(" 3.10.3 数组拷贝")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" luckyNumbers "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" smallPrimes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nluckyNumbers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211118181002.png",alt:"拷贝一个数组变量"}})]),a._v(" "),s("p",[a._v("如果希望将一个数组的所有值拷贝到一个新的数组中去，就要使用Arrays类的copyOf方法：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" luckyNumbers2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Arrays")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("copyOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("luckyNumbers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("luckyNumbers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h4",{attrs:{id:"_3-10-5-数组排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-10-5-数组排序"}},[a._v("#")]),a._v(" 3.10.5 数组排序")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Arrays")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("h4",{attrs:{id:"_3-10-6-多维数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-10-6-多维数组"}},[a._v("#")]),a._v(" 3.10.6 多维数组")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("如果知道数组元素，就可以不调用new，而直接使用简化的书写形式对多维数组进行初始化。例如：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" magicSquare "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("13")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("14")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("（可以看出：Java实际上没有多维数组，只有一维数组。多维数组被解释为“数组的数组。）")]),a._v(" "),s("h2",{attrs:{id:"第4章-对象与类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第4章-对象与类"}},[a._v("#")]),a._v(" 第4章 对象与类")]),a._v(" "),s("h3",{attrs:{id:"_4-1-面向对象程序设计概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-面向对象程序设计概述"}},[a._v("#")]),a._v(" 4.1 面向对象程序设计概述")]),a._v(" "),s("ul",[s("li",[a._v("面向过程与面向对象的程序设计对比")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211118191554.png",width:"50%"}})]),a._v(" "),s("h4",{attrs:{id:"_4-1-1-类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-1-类"}},[a._v("#")]),a._v(" 4.1.1 类")]),a._v(" "),s("p",[a._v("由类（class）构造（construct）对象的过程称为创建类的实例（instance）")]),a._v(" "),s("p",[a._v("封装（encapsulation，有时称为数据隐藏）是与对象有关的一个重要概念。从形式上看，封装是将数据和行为组合在一个包中，并对对象的使用者隐藏了数据的实现方式。")]),a._v(" "),s("h4",{attrs:{id:"_4-1-2-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-2-对象"}},[a._v("#")]),a._v(" 4.1.2 对象")]),a._v(" "),s("p",[a._v("要想使用面向对象程序设计（OOP），一定要清楚对象的三个主要特性：")]),a._v(" "),s("ul",[s("li",[a._v("对象的行为（behavior）——可以对对象施加哪些操作，或可以对对象施加哪些方法？")]),a._v(" "),s("li",[a._v("对象的状态（state）——当施加那些方法时，对象如何响应？")]),a._v(" "),s("li",[a._v("对象标识（identity）——如何辨别具有相同行为与状态的不同对象？")])]),a._v(" "),s("h4",{attrs:{id:"_4-1-3-识别类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-3-识别类"}},[a._v("#")]),a._v(" 4.1.3 识别类")]),a._v(" "),s("p",[a._v("识别类的简单规则是在分析问题的过程中寻找名词，而方法对应着动词。例如，在订单处理系统中，有这样一些名词：")]),a._v(" "),s("ul",[s("li",[a._v("商品（Item）")]),a._v(" "),s("li",[a._v("订单（Order）")]),a._v(" "),s("li",[a._v("送货地址（Shipping address）")]),a._v(" "),s("li",[a._v("付款（Payment）")]),a._v(" "),s("li",[a._v("账户（Account）")])]),a._v(" "),s("p",[a._v("这些名词很可能成为类Item、Order等")]),a._v(" "),s("h4",{attrs:{id:"_4-1-4-类之间的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-4-类之间的关系"}},[a._v("#")]),a._v(" 4.1.4 类之间的关系")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211118194943.png",alt:"表达类关系的UML符号"}})]),a._v(" "),s("h3",{attrs:{id:"_4-2-使用预定义类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-使用预定义类"}},[a._v("#")]),a._v(" 4.2 使用预定义类")]),a._v(" "),s("p",[a._v("在Java中，没有类就无法做任何事情")]),a._v(" "),s("p",[a._v("并不是所有的类都具有面些对象特征，例如Math类，在程序中可以使用Math类的方法Math.random")]),a._v(" "),s("h4",{attrs:{id:"_4-2-1-对象与对象变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1-对象与对象变量"}},[a._v("#")]),a._v(" 4.2.1 对象与对象变量")]),a._v(" "),s("p",[a._v("在Java程序设计语言中，使用构造器（constructor）构造新实例。构造器是一种特殊的方法，用来构造并初始化对象。")]),a._v(" "),s("p",[a._v("在标准Java库中包含一个Date类。它的对象将描述一个时间点，例如：“December 31, 1999, 23:59:59GMT”。")]),a._v(" "),s("p",[a._v("构造器的名字应该与类名相同。因此Date类的构造器名为Date。要想构造一个Date对象，需要在构造器前面加上new操作符，如下所示：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("这个表达式构造了一个新对象。这个对象被初始化为当前的日期和时间。")]),a._v(" "),s("p",[a._v("如果需要的话，也可以将这个对象传递给一个方法：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("Date类中有一个toString方法。这个方法将返回日期的字符串描述：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("toString\n")])])]),s("h4",{attrs:{id:"_4-2-2-java类库中的localdate类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-java类库中的localdate类"}},[a._v("#")]),a._v(" 4.2.2 Java类库中的LocalDate类")]),a._v(" "),s("p",[a._v("不要使用构造器来构造LocalDate类的对象。实际上，应当使用静态工厂方法（factory method）代表你调用构造器。下面的表达式：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalDate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("会构造一个新对象，表示构造这个对象时的日期。")]),a._v(" "),s("p",[a._v("可以提供年、月和日来构造对应一个特定日期的对象：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalDate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("of")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1999")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("31")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("h4",{attrs:{id:"_4-2-3-更改器方法与访问器方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-3-更改器方法与访问器方法"}},[a._v("#")]),a._v(" 4.2.3 更改器方法与访问器方法")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalDate")]),a._v(" aThousandDaysLater "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" newYearsEve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("plusDays")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("newYearsEve日期没变化，aThousandDaysLater是newYearsEve的1000天之后")]),a._v(" "),s("h3",{attrs:{id:"_4-3-用户自定义类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-用户自定义类"}},[a._v("#")]),a._v(" 4.3 用户自定义类")]),a._v(" "),s("h4",{attrs:{id:"_4-3-1-employee类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-employee类"}},[a._v("#")]),a._v(" 4.3.1 Employee类")]),a._v(" "),s("p",[a._v("在Java中，最简单的类定义形式为：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("calss "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassName")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    field_1\n    field_2\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n    constructor_1\n    constructor_2\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n    method_1\n    method_2\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("下面看一个非常简单的Employee类（在编写薪金管理系统时可能会用到）：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// instance fields（所有的实例域）")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" salary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalDate")]),a._v(" hireDay"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// constructor（构造器）")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" year"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" month"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" day"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        name "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        salary "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        hireDay "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalDate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("of")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("year"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" month"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" day"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// a method（方法）")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// more methods")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// ...")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h4",{attrs:{id:"_4-3-2-多个源文件的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2-多个源文件的使用"}},[a._v("#")]),a._v(" 4.3.2 多个源文件的使用")]),a._v(" "),s("p",[a._v("如果有多个.java文件，编译其中一个使用了另一个时会自动跨文件查找另一个类")]),a._v(" "),s("h4",{attrs:{id:"_4-3-3-剖析employee类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-3-剖析employee类"}},[a._v("#")]),a._v(" 4.3.3 剖析Employee类")]),a._v(" "),s("p",[a._v("从Employee类开始，通过查看源码会发现这个类包含了1个"),s("strong",[a._v("构造器")]),a._v("和4个"),s("strong",[a._v("方法")]),a._v("：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" year"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" month"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" day"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getSalary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalDate")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getHireDay")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("raiseSalary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" byPercent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("这个类的所有方法都被标记为public，关键字"),s("strong",[a._v("public")]),a._v("意味着任何类的"),s("strong",[a._v("任何方法都可以调用这个方法")]),a._v("（共有4种访问级别）")]),a._v(" "),s("p",[a._v("接下来，需要注意在Employee类的实例中有三个实例域用来存放将要操作的数据：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getSalary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalDate")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getHireDay")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("blockquote",[s("p",[a._v("注释：")]),a._v(" "),s("p",[a._v("可以用public标记实例域，但这是一种极为不提倡的做法。public数据域允许程序中的任何方法对其进行读取和修改。这就完全破坏了封装。任何类的任何方法都可以修改public域，某些代码将使用这种存取权限，这样并不合适。")]),a._v(" "),s("p",[a._v("因此，这里强烈建议将实例域标记为private。最后，请注意，有两个实例域本身就是对象：name域是String类对象，hireDay域是LocalDate类对象。这种情形十分常见：类通常包括类型属于某个类类型的实例域。")]),a._v(" "),s("p",[a._v("最后，请注意，有两个实例域本身就是对象：name域是String类对象，hireDay域是LocalDate类对象。这种情形十分常见：类通常包括类型属于某个类类型的实例域。")])]),a._v(" "),s("h4",{attrs:{id:"_4-3-4-从构造器开始"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-4-从构造器开始"}},[a._v("#")]),a._v(" 4.3.4 从构造器开始")]),a._v(" "),s("p",[a._v("下面来看看Employee类的构造器：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" year"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" month"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" day"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    name "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    salary "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    hireDay "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalDate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("of")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("year"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("month"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("day"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("可以看到，构造器与类同名。在构造Employee类的对象时，构造器会运行，以便将实例域初始化为所希望的状态。")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 例如，当使用下面这条代码创建Employee类实例时：")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"James Bond"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1950")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 将会把实例域设置为：")]),a._v("\nname "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"James Bond"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nsalary "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nhireDay "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalDate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("of")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1950")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// January 1,1950")]),a._v("\n")])])]),s("p",[a._v("构造器与其他的方法有一个重要的不同。构造器总是伴随着new操作符的执行被调用，而不能对一个已经存在的对象调用构造器来达到重新设置实例域的目的。例如以下操作会产生"),s("code",[a._v("编译错误")]),a._v("：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("james"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),a._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"James Bond"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1950")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("（即构造器只能 new一个对象，而不能对已经存在的这个"),s("code",[a._v("james")]),a._v("对象重新设置数据）")]),a._v(" "),s("blockquote",[s("p",[a._v("构造器的特点：")]),a._v(" "),s("ul",[s("li",[a._v("构造器与类同名")]),a._v(" "),s("li",[a._v("每个类可以有一个以上的构造器")]),a._v(" "),s("li",[a._v("构造器可以有0个、1个或多个参数")]),a._v(" "),s("li",[a._v("构造器没有返回值")]),a._v(" "),s("li",[a._v("构造器总是伴随着new操作一起调用")])])]),a._v(" "),s("p",[a._v("警告：请注意，不要在构造器中"),s("strong",[a._v("定义")]),a._v("与实例域重名的局部变量。例如，下面的构造器将无法设置name和salary：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" s "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//Error")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" salary "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//Error")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("注意：上面的name、salary前面不应该写String、double（注意在所有的方法中不要命名与实例域同名的变量）")]),a._v(" "),s("h4",{attrs:{id:"_4-3-5-隐式参数与显式参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-5-隐式参数与显式参数"}},[a._v("#")]),a._v(" 4.3.5 隐式参数与显式参数")]),a._v(" "),s("p",[a._v("方法用于操作对象以及存取它们的实例域。例如，方法：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("raiseSalary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" byPercent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" raise "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" salary "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" byPercent "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    salary "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+=")]),a._v(" raise"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//也可以写成 this.salary += raise;")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("将调用这个方法的对象的salary实例域设置为新值：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("number007"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("raiseSalary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("它的结果将number007.salary域的值增加5%")]),a._v(" "),s("p",[a._v("raiseSalary方法有两个参数。第一个参数称为隐式（implicit）参数，是出现在方法名前的Employee类对象。第二个参数位于方法名后面括号中的数值，这是一个显式（explicit）参数。在raiseSalary方法中，隐式参数是salary，显式参数是byPercent。")]),a._v(" "),s("h4",{attrs:{id:"_4-3-6-封装的优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-6-封装的优点"}},[a._v("#")]),a._v(" 4.3.6 封装的优点")]),a._v(" "),s("p",[a._v("有些时候，需要获得或设置实例域的值。因此，应该提供下面三项内容：")]),a._v(" "),s("ul",[s("li",[a._v("一个私有的数据域；（实例域private）")]),a._v(" "),s("li",[a._v("一个公有的域访问器方法；（方法public）")]),a._v(" "),s("li",[a._v("一个公有的域更改器方法。（构造器）")])]),a._v(" "),s("p",[a._v("这样做要比提供一个简单的公有数据域复杂些，但是却有着下列明显的好处：")]),a._v(" "),s("p",[a._v("首先，可以改变内部实现，除了该类的方法之外，不会影响其他代码。")]),a._v(" "),s("p",[a._v("警告：注意不要编写返回引用可变对象的访问器方法。在Employee类中就违反了这个设计原则，其中的getHireDay方法返回了一个Date类对象：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Date")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getHireDay")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" hireDay"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//bad")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h4",{attrs:{id:"_4-3-7基于类的访问权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-7基于类的访问权限"}},[a._v("#")]),a._v(" 4.3.7基于类的访问权限")]),a._v(" "),s("p",[a._v("方法可以访问所调用对象的私有数据，此外一个方法可以访问所属类的所有对象的私有数据。")]),a._v(" "),s("h4",{attrs:{id:"_4-3-8-私有方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-8-私有方法"}},[a._v("#")]),a._v(" 4.3.8 私有方法")]),a._v(" "),s("p",[a._v("在实现一个类时，由于公有数据非常危险，所以应该将所有的数据域都设置为私有的。")]),a._v(" "),s("p",[a._v("在Java中，为了实现一个私有的方法，只需将关键字public改为private即可。")]),a._v(" "),s("h4",{attrs:{id:"_4-3-9-final实例域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-9-final实例域"}},[a._v("#")]),a._v(" 4.3.9 final实例域")]),a._v(" "),s("p",[a._v("final声明的实例域在被构造器执行之后无法再修改")]),a._v(" "),s("p",[a._v("例如，Employee类中的name域声明为final，因为咋对象构建之后这个值不会再被修改，即没有setName方法：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("calss "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("final修饰符大都应用于基本（primitive）类型域，或不可变（immutable）类的域")]),a._v(" "),s("p",[a._v("（如果类中的每个方法都不会改变其对象，这种类就是不可变的类。例如，String类就是一个不可变的类）")]),a._v(" "),s("h3",{attrs:{id:"_4-4-静态域与静态方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-静态域与静态方法"}},[a._v("#")]),a._v(" 4.4 静态域与静态方法")]),a._v(" "),s("h4",{attrs:{id:"_4-4-1-静态域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-1-静态域"}},[a._v("#")]),a._v(" 4.4.1 静态域")]),a._v(" "),s("p",[a._v("如果将域定义为static，每个类中只有一个这样的域。")]),a._v(" "),s("p",[a._v("例如，假定需要给每一个雇员赋予唯一的标识码。这里给Employee类添加一个实例域id和一个静态域nextId：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" nextId "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("每一个雇员对象都有一个自己的id域（多个id），但这个类的所有实例将共享一个nextId域（一个静态数据域）。")]),a._v(" "),s("p",[a._v("（即使没有一个雇员对象，静态域nextId也存在。它属于类，而不属于任何独立的对象。）")]),a._v(" "),s("h4",{attrs:{id:"_4-4-2-静态常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-2-静态常量"}},[a._v("#")]),a._v(" 4.4.2 静态常量")]),a._v(" "),s("p",[a._v("静态变量使用得比较少，但静态常量却使用得比较多。例如，在Math类中定义了一个静态常量")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" calss "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Math")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" PI "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.14159265358979323846")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h4",{attrs:{id:"_4-4-3-静态方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-3-静态方法"}},[a._v("#")]),a._v(" 4.4.3 静态方法")]),a._v(" "),s("p",[a._v("静态方法是一种不能向对象实施操作的方法。例如，Math类的pow方法就是一个静态方法。表达式")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Math")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("pow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("这里Math类是对象，显然没法对Math类施加操作")]),a._v(" "),s("h4",{attrs:{id:"_4-4-4-工厂方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-4-工厂方法"}},[a._v("#")]),a._v(" 4.4.4 工厂方法")]),a._v(" "),s("p",[a._v("类似"),s("code",[a._v("LocalDate")]),a._v("和"),s("code",[a._v("NumberFormat")]),a._v("的类使用静态工厂方法（factory method）来构造对象。")]),a._v(" "),s("h4",{attrs:{id:"_4-4-5-main方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-5-main方法"}},[a._v("#")]),a._v(" 4.4.5 main方法")]),a._v(" "),s("p",[a._v("不需要使用对象调用静态方法，例如：不需要构造Math类对象就可以调用Math.pow")]),a._v(" "),s("p",[a._v("每一个类都有且只有一个main方法")]),a._v(" "),s("h3",{attrs:{id:"_4-6-对象构造"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-对象构造"}},[a._v("#")]),a._v(" 4.6 对象构造")]),a._v(" "),s("p",[a._v("象构造非常重要，所以Java提供了多种编写构造器的机制。")]),a._v(" "),s("h4",{attrs:{id:"_4-6-1-重载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-1-重载"}},[a._v("#")]),a._v(" 4.6.1 重载")]),a._v(" "),s("p",[a._v("如果多个方法有相同的名字、不同的参数，便产生了重载。")]),a._v(" "),s("blockquote",[s("p",[a._v("Java允许重载任何方法，而不只是构造器方法")])]),a._v(" "),s("h4",{attrs:{id:"_4-6-2-默认域初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-2-默认域初始化"}},[a._v("#")]),a._v(" 4.6.2 默认域初始化")]),a._v(" "),s("p",[a._v("如果在构造器中没有显式地给域赋予初值，那么就会被自动地赋为默认值：数值为0、布尔值为false、对象引用为null。（不提倡这样做，菜鸟才这样写）")]),a._v(" "),s("p",[a._v("比如Employee类，假定没有在构造器中对某些域进行初始化，就会默认地将salary域初始化为0，将name和hireDay域初始化为null。")]),a._v(" "),s("h4",{attrs:{id:"_4-6-3-无参数的构造器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-3-无参数的构造器"}},[a._v("#")]),a._v(" 4.6.3 无参数的构造器")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\tname "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\tsalary "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\thireDay "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalDate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("如果类中提供了至少一个构造器，但是没有提供无参数的构造器，则在构造对象时如果没有提供参数就会被视为不合法。")]),a._v(" "),s("h4",{attrs:{id:"_4-6-4-显式域初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-4-显式域初始化"}},[a._v("#")]),a._v(" 4.6.4 显式域初始化")]),a._v(" "),s("p",[a._v("通过重载类的构造器方法，有很多形式可以设置类的实例域的初始状态。确保不管怎样调用构造器，每个实例域都可以被设置为一个有意义的初值，这是一种很好的设计习惯。")]),a._v(" "),s("p",[a._v("例如，可以在类定义中，直接将一个值赋给任何域：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("calss "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h4",{attrs:{id:"_4-6-5-参数名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-5-参数名"}},[a._v("#")]),a._v(" 4.6.5 参数名")]),a._v(" "),s("p",[a._v("参数名写通俗易懂点，比如可以写成这样：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" aName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" aSalary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//如果这两个参数写成 n和 s别人就看不懂了")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\tname "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" aName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\tsalary "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" aSalary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h4",{attrs:{id:"_4-6-6-调用另一个构造器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-6-调用另一个构造器"}},[a._v("#")]),a._v(" 4.6.6 调用另一个构造器")]),a._v(" "),s("p",[s("code",[a._v("this")]),a._v("除了可以引用方法的隐式参数以外，还能调用同一个类的另一个构造器，例如：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 调用 Employee(String,double)")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Employee #"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" nextId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\tnextId"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("当调用new Employee(60000)时，Employee(double)构造器将调用Employee(String, double)构造器。")]),a._v(" "),s("h4",{attrs:{id:"_4-6-7-初始化块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-7-初始化块"}},[a._v("#")]),a._v(" 4.6.7 初始化块")]),a._v(" "),s("p",[a._v("前面已经讲过两种初始化数据域的方法：")]),a._v(" "),s("ul",[s("li",[a._v("在构造器中设置值")]),a._v(" "),s("li",[a._v("在声明中赋值")])]),a._v(" "),s("p",[a._v("此外，还有第三种机制：初始化块（initialization block）")]),a._v(" "),s("p",[a._v("在一个类的声明中，可以包含多个代码块。只要构造类的对象，这些块就会被执行。例如：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" nextId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" salary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 初始化块")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t\tid "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" nextId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t\tnextId"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\t\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" aName "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" aSalary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t\tname "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" aName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        salary "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" aSalary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        name "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        salary "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//...")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("在这个示例中，无论使用哪个构造器构造对象，id域都在对象初始化块中被初始化。首先运行初始化块，然后才运行构造器的主体部分。（很少用这种，通常会直接将初始化代码放在构造器中）")]),a._v(" "),s("h4",{attrs:{id:"_4-6-8-对象析构与finalize方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-8-对象析构与finalize方法"}},[a._v("#")]),a._v(" 4.6.8 对象析构与finalize方法")]),a._v(" "),s("p",[a._v("C++中每个类都能有一个析构函数，用来回收分配给对象的存储空间。")]),a._v(" "),s("p",[a._v("由于Java有自动的垃圾回收器，不需要人工回收内存，所以Java不支持析构器。")]),a._v(" "),s("p",[a._v("可以为任何一个类添加finalize方法。finalize方法将在垃圾回收器清除对象之前调用。（一般不用，因为很难知道什么时候调用）")]),a._v(" "),s("h3",{attrs:{id:"_4-7-包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-包"}},[a._v("#")]),a._v(" 4.7 包")]),a._v(" "),s("p",[a._v("Java允许使用包（package）将类组织起来。借助于包可以方便地组织自己的代码，并将自己的代码与别人提供的代码库分开管理。使用包的主要原因是"),s("strong",[a._v("确保类名的唯一性")])]),a._v(" "),s("p",[a._v("Sun公司建议将域名以逆序的形式作为包名，比如 horstmann.com 的逆序形式是 com.horstmann，这个包还可以被进一步地划分成子包，如com.horstmann. corejava")]),a._v(" "),s("h4",{attrs:{id:"_4-7-1-类的导入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-1-类的导入"}},[a._v("#")]),a._v(" 4.7.1 类的导入")]),a._v(" "),s("p",[a._v("一个类可以使用所属包中的所有类，以及其他包中的公有类（public class），可以在每个类名前添加完整的包名访问，例如：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),a._v("LocalDate")]),a._v(" today "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),a._v("LocalDate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("写起来太麻烦，所以一般用"),s("code",[a._v("import")]),a._v("的方式导入（之后就不用写完整的包名了），例如：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//导入 java.time 包中所有的类")]),a._v("\n   \n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalDate")]),a._v(" today "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalDate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//调用")]),a._v("\n")])])]),s("h4",{attrs:{id:"_4-7-2-静态导入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-2-静态导入"}},[a._v("#")]),a._v(" 4.7.2 静态导入")]),a._v(" "),s("p",[s("code",[a._v("import")]),a._v("语句不仅可以导入类，还增加了导入静态方法和静态域的功能，例如：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("*\n")])])]),s("p",[a._v("就可以使用System类的静态方法和静态域，而不必加类名前缀：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Goodbye, World!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("h4",{attrs:{id:"_4-7-3-将类放入包中"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-3-将类放入包中"}},[a._v("#")]),a._v(" 4.7.3 将类放入包中")]),a._v(" "),s("p",[a._v("如果没有在源文件中放置package语句，这个源文件中的类就被放置在一个默认包（defaulf package）中，默认包是一个没有名字的包。")]),a._v(" "),s("p",[a._v("下面将类分别放在不同的包中（com. horstmann.corejava和com.mycompany）")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211119203950.png",width:"40%"}})]),a._v(" "),s("p",[a._v("在这种情况下，仍然要从基目录编译和运行类：")]),a._v(" "),s("p",[s("code",[a._v("java com/horstmann/corejava/Employee.java")])]),a._v(" "),s("p",[s("code",[a._v("java com/horstmann/corejava/Employee")])]),a._v(" "),s("h4",{attrs:{id:"_4-7-4-包作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-4-包作用域"}},[a._v("#")]),a._v(" 4.7.4 包作用域")]),a._v(" "),s("p",[a._v("标记为public的部分可以被任意的类使用；标记为private的部分只能被定义它们的类使用")]),a._v(" "),s("p",[a._v("如果没有指定public或private，这个部分（类、方法或变量）可以被同一个包中的所有方法访问。")]),a._v(" "),s("blockquote",[s("p",[a._v("注意：声明和定义变量别忘了在前面加 private")])]),a._v(" "),s("h3",{attrs:{id:"_4-8-类路径"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-类路径"}},[a._v("#")]),a._v(" 4.8 类路径")]),a._v(" "),s("p",[a._v("类路径包括：")]),a._v(" "),s("ul",[s("li",[a._v("基目录/home/user/classdir或c:\\classes；")]),a._v(" "),s("li",[a._v("当前目录(.)；")]),a._v(" "),s("li",[a._v("JAR文件/home/user/archives/archive.jar或c:\\archives\\archive.jar")])]),a._v(" "),s("p",[a._v("例如：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("home"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("user"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("calssdir"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("home"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("user"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("archives"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("archive"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("jar\n")])])]),s("p",[a._v("（在UNIX环境中，类路径中的不同项目之间采用冒号"),s("code",[a._v(":")]),a._v("分隔，window中用分号"),s("code",[a._v(";")]),a._v("分隔）")]),a._v(" "),s("p",[a._v("SE6 开始用"),s("code",[a._v("*")]),a._v("或"),s("code",[a._v("'*'")]),a._v("表示通配符（但是UNIX中禁止使用"),s("code",[a._v("*")]),a._v("以防止shell命令进一步扩展，所以推荐用"),s("code",[a._v("'*'")]),a._v("）")]),a._v(" "),s("h3",{attrs:{id:"_4-9-文档注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-9-文档注释"}},[a._v("#")]),a._v(" 4.9 文档注释")]),a._v(" "),s("p",[a._v("JDK包含一个很有用的工具，叫做javadoc，它可以由源文件生成一个HTML文档。")]),a._v(" "),s("h4",{attrs:{id:"_4-9-1-注释的插入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-9-1-注释的插入"}},[a._v("#")]),a._v(" 4.9.1 注释的插入")]),a._v(" "),s("p",[a._v("这几部分一般要写一下注释：")]),a._v(" "),s("ul",[s("li",[a._v("包")]),a._v(" "),s("li",[a._v("公有类与接口")]),a._v(" "),s("li",[a._v("公有的和受保护的构造器及方法")]),a._v(" "),s("li",[a._v("公有的和受保护的域")])]),a._v(" "),s("h4",{attrs:{id:"_4-9-2-类注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-9-2-类注释"}},[a._v("#")]),a._v(" 4.9.2 类注释")]),a._v(" "),s("p",[a._v("类注释一般放在import语句之后，类定义之前")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/*\n\t这里写类注释\n*/")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h4",{attrs:{id:"_4-9-3-方法注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-9-3-方法注释"}},[a._v("#")]),a._v(" 4.9.3 方法注释")]),a._v(" "),s("p",[a._v("每一个方法注释必须放在所描述的方法之前。除了通用标记之外，还可以使用下面的标记：")]),a._v(" "),s("ul",[s("li",[a._v("@param变量描述这个标记将对当前方法的“param”（参数）部分添加一个条目。这个描述可以占据多行，并可以使用HTML标记。一个方法的所有@param标记必须放在一起。")]),a._v(" "),s("li",[a._v("@return描述这个标记将对当前方法添加“return”（返回）部分。这个描述可以跨越多行，并可以使用HTML标记。")]),a._v(" "),s("li",[a._v("@throws类描述这个标记将添加一个注释，用于表示这个方法有可能抛出异常。")])]),a._v(" "),s("p",[a._v("例如：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/*\n\t员工涨薪\n\t@param byPercent涨薪百分比\n\t@return 涨过后的资薪\n*/")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("raiseSalary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" byPercent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" raise "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" salary "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" byPercent "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("salary "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+=")]),a._v(" raise"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" raise"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h3",{attrs:{id:"_4-10-类设计技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-10-类设计技巧"}},[a._v("#")]),a._v(" 4.10 类设计技巧")]),a._v(" "),s("ol",[s("li",[a._v("一定要保证数据私有")]),a._v(" "),s("li",[a._v("一定要对数据初始化")]),a._v(" "),s("li",[a._v("不要在类中使用过多的实例域")]),a._v(" "),s("li",[a._v("不是所有的域都需要独立的域访问器和域更改器")]),a._v(" "),s("li",[a._v("将职责过多的类进行分解")]),a._v(" "),s("li",[a._v("类名和方法名要能够体现它们的职责")]),a._v(" "),s("li",[a._v("优先使用不可变的类（涉及在多个线程间的安全共享）")])]),a._v(" "),s("h2",{attrs:{id:"第5章-继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第5章-继承"}},[a._v("#")]),a._v(" 第5章 继承")]),a._v(" "),s("p",[a._v("继承（inheritance）就是基于已存在的类构造一个新的类，简单讲就是复用类的方法和实例域")]),a._v(" "),s("h3",{attrs:{id:"_5-1-类、超类和子类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-类、超类和子类"}},[a._v("#")]),a._v(" 5.1 类、超类和子类")]),a._v(" "),s("h4",{attrs:{id:"_5-1-1-定义子类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-1-定义子类"}},[a._v("#")]),a._v(" 5.1.1 定义子类")]),a._v(" "),s("p",[a._v("由继承Employee类来定义Manager类的格式，关键字extends表示继承：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Manager")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 添加实例域和方法")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("ul",[s("li",[a._v("已存在的类称为："),s("strong",[a._v("父类")]),a._v("（parent class）、超类（"),s("code",[a._v("superclass")]),a._v("）或基类（base class）")]),a._v(" "),s("li",[a._v("新类称为"),s("strong",[a._v("子类")]),a._v("（subclass）、派生类（derived class）或孩子类（child class）")])]),a._v(" "),s("p",[a._v("子类一般比它的父类有更丰富的功能")]),a._v(" "),s("h4",{attrs:{id:"_5-1-2-覆盖方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-2-覆盖方法"}},[a._v("#")]),a._v(" 5.1.2 覆盖方法")]),a._v(" "),s("p",[a._v("父类中的有些方法对子类并不一定适用，所以需要提供一个新的方法来**覆盖（override）**父类中的这个方法，具体实现方式为直接在子类里"),s("code",[a._v("重写")]),a._v("这个方法。")]),a._v(" "),s("p",[a._v("注意，子类不能直接访问父类的私有域，此外如果子类和父类有同一个方法名，那么子类会优先调用自己的方法。")]),a._v(" "),s("p",[s("strong",[a._v("调用子类的方法而不是当前类")]),a._v("的方法，可以通过关键字"),s("strong",[a._v("super")]),a._v("实现，例如继承了Employee类的Manager类调用Employee类中的getSalary方法：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Manager")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getSalary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" baseSalary "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getSalary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" baseSalary "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+=")]),a._v(" bonus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("如果只写"),s("code",[a._v("super(a,b,c)")]),a._v("表示调用父类中有(a,b,c)参数的构造器")]),a._v(" "),s("h4",{attrs:{id:"_5-1-3-子类构造器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-3-子类构造器"}},[a._v("#")]),a._v(" 5.1.3 子类构造器")]),a._v(" "),s("p",[a._v("由于子类的构造器不饿能访问子类的私有域，所以必须通过父类的构造器对这部分私有域进行初始化，可以通过"),s("code",[a._v("super")]),a._v("实现对子类构造器的调用。（使用"),s("code",[a._v("super")]),a._v("调用构造器必须是子类构造器的第一条语句）")]),a._v(" "),s("blockquote",[s("ul",[s("li",[s("code",[a._v("this")]),a._v("的用途：\n"),s("ul",[s("li",[a._v("引用隐式参数")]),a._v(" "),s("li",[a._v("调用该类的其他构造器")])])]),a._v(" "),s("li",[s("code",[a._v("super")]),a._v("的用途：\n"),s("ul",[s("li",[a._v("调用父类的方法")]),a._v(" "),s("li",[a._v("调用父类的构造器")])])])])]),a._v(" "),s("h4",{attrs:{id:"_5-1-4-继承层次"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-4-继承层次"}},[a._v("#")]),a._v(" 5.1.4 继承层次")]),a._v(" "),s("p",[a._v("继承了父类的子类还能派生出新的类，由一个共给父类派生出来的所有类的集合称为"),s("strong",[a._v("继承层次")]),a._v("。")]),a._v(" "),s("p",[a._v("从某个特定的类到其祖先的路径被称为该类的继承链，一个祖先类可以拥有多个子孙继承链。")]),a._v(" "),s("h4",{attrs:{id:"_5-1-5-多态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-5-多态"}},[a._v("#")]),a._v(" 5.1.5 多态")]),a._v(" "),s("p",[a._v('如果程序中出现超类对象的任何地方都可以用子类对象置换，那么就应该设计为继承，这是**"is-a"规则**。')]),a._v(" "),s("p",[a._v("在Java中，对象变量是多态的。多态是同一个行为具有多个不同表现形式或形态的能力。多态就是同一个接口，使用不同的实例而执行不同操作，如图所示：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/image-20211121215148079.png",alt:""}})]),a._v(" "),s("ul",[s("li",[a._v("多态存在的三个必要条件：\n"),s("ul",[s("li",[a._v("继承")]),a._v(" "),s("li",[a._v("重写")]),a._v(" "),s("li",[a._v("父类引用指向子类对象："),s("strong",[a._v("Parent p = new Child();")])])])])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/image-20211121215328365.png",width:"60%"}})]),a._v(" "),s("ul",[s("li",[a._v("多态的优点：\n"),s("ul",[s("li",[a._v("消除类型之间的耦合关系")]),a._v(" "),s("li",[a._v("可替换性")]),a._v(" "),s("li",[a._v("可扩充性")]),a._v(" "),s("li",[a._v("接口性")]),a._v(" "),s("li",[a._v("灵活性")]),a._v(" "),s("li",[a._v("简化性")])])])]),a._v(" "),s("h4",{attrs:{id:"_5-1-6-理解方法调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-6-理解方法调用"}},[a._v("#")]),a._v(" 5.1.6 理解方法调用")]),a._v(" "),s("p",[a._v("方式调用过程的详细描述：")]),a._v(" "),s("ol",[s("li",[a._v("编译器查看对象的声明类型和方法名")]),a._v(" "),s("li",[a._v("编译器查看调用方法时提供的参数类型")]),a._v(" "),s("li",[a._v("如果是private方法、static方法、final方法或者构造器，编译器应该知道调用哪个方法")]),a._v(" "),s("li",[a._v("程序运行")])]),a._v(" "),s("h4",{attrs:{id:"_5-1-7-阻止继承-final类和方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-7-阻止继承-final类和方法"}},[a._v("#")]),a._v(" 5.1.7 阻止继承：final类和方法")]),a._v(" "),s("p",[a._v("不允许扩展的类被称为"),s("strong",[a._v("final类")]),a._v("，如果类中的某个方法声明了final，那么它的子类就不能覆盖（重写）这个方法。")]),a._v(" "),s("h4",{attrs:{id:"_5-1-8-强制类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-8-强制类型转换"}},[a._v("#")]),a._v(" 5.1.8 强制类型转换")]),a._v(" "),s("p",[a._v("将某个类的对象引用转换成另外一个类的对象引用，就是对象引用的强制转换。")]),a._v(" "),s("p",[a._v("对象引用的转换语法与数值表达式的类型转换类似，仅需要用一对圆括号将目标类名括起来，并放置在需要转换的对象引用之前就可以了。例如：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Manager")]),a._v(" boss "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Manager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" staff"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//对象引用强制转换")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" nx "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//这是数据类型强制转换")]),a._v("\n")])])]),s("h4",{attrs:{id:"_5-1-9-抽象类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-9-抽象类"}},[a._v("#")]),a._v(" 5.1.9 抽象类")]),a._v(" "),s("p",[a._v("为了提高程序的清晰度，包含一个或多个"),s("strong",[a._v("抽象方法")]),a._v("的类本身必须通过关键字"),s("code",[a._v("abstract")]),a._v("声明为抽象类。例如：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("abstract")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Person")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("abstract")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getDescription")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("blockquote",[s("p",[s("strong",[a._v("抽象方法")]),a._v("：指不确定的方法，即没有明确定义的方法")])]),a._v(" "),s("h4",{attrs:{id:"_5-1-10-受保护访问"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-10-受保护访问"}},[a._v("#")]),a._v(" 5.1.10 受保护访问")]),a._v(" "),s("p",[a._v("众所周知，最好将类中的域标记为private，而方法标记为public。任何声明为private的内容对其他类都是不可见的（包括子类也不能访问父类的私有域）")]),a._v(" "),s("p",[a._v("而如果将实例域或方法声明为"),s("strong",[a._v("protected")]),a._v("，子类就能够访问这个实例域或方法。")]),a._v(" "),s("h3",{attrs:{id:"_5-2-object-所有类的父类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-object-所有类的父类"}},[a._v("#")]),a._v(" 5.2 Object：所有类的父类")]),a._v(" "),s("p",[a._v("Java中所有类都由Object类扩展而来，如果没有明确指出父类，Object就被认为是这个类的父类。")]),a._v(" "),s("p",[a._v("例如可以使用Object类型的变量引用任何类型的对象：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),a._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Harry Hacker"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("35000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("Object类型的变量只能用于作为各种值的通用持有者。要想对其中的内容进行具体的操作，还需要清楚对象的原始类型，并进行相应的类型转换：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),a._v(" e "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("blockquote",[s("p",[a._v("在Java中，只有基本类型（primitive types）不是对象，例如，数值、字符和布尔类型的值都不是对象")])]),a._v(" "),s("h4",{attrs:{id:"_5-2-1-equals方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-1-equals方法"}},[a._v("#")]),a._v(" 5.2.1 equals方法")]),a._v(" "),s("p",[a._v("Object类中的equals方法用于检,测一个对象是否等于另外一个对象（Java中变量也是对象，虽然变量的值不是）")]),a._v(" "),s("h4",{attrs:{id:"_5-2-2-相等测试与继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-2-相等测试与继承"}},[a._v("#")]),a._v(" 5.2.2 相等测试与继承")]),a._v(" "),s("p",[a._v("Java语言规范要求equals方法具有下面的特性：")]),a._v(" "),s("ul",[s("li",[a._v("自反性：对于任何非空引用x,"),s("code",[a._v("x.equals(x)")]),a._v("应该返回true")]),a._v(" "),s("li",[a._v("对称性：对于任何引用x和y，当且仅当"),s("code",[a._v("y.equals(x)")]),a._v("返回true, "),s("code",[a._v("x.equals(y)")]),a._v("也应该返回true")]),a._v(" "),s("li",[a._v("传递性：对于任何引用x、y和z，如果"),s("code",[a._v("x.equals(y)")]),a._v("返回true, "),s("code",[a._v("y.equals(z)")]),a._v("返回true, "),s("code",[a._v("x.equals(z)")]),a._v("也应该返回true")]),a._v(" "),s("li",[a._v("一致性：如果x和y引用的对象没有发生变化，反复调用"),s("code",[a._v("x.equals(y)")]),a._v("应该返回同样的结果。")]),a._v(" "),s("li",[a._v("对于任意非空引用x, "),s("code",[a._v("x.equals(null)")]),a._v("应该返回false。")])]),a._v(" "),s("p",[a._v("（这里涉及一个“如果隐式和显式的参数不属于同一个类，equals方法将如何处理”的问题，解决步骤较长，略...）")]),a._v(" "),s("h4",{attrs:{id:"_5-2-3-hashcode方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-3-hashcode方法"}},[a._v("#")]),a._v(" 5.2.3 hashCode方法")]),a._v(" "),s("p",[a._v("散列码（hash code）是由对象导出的一个整型值。")]),a._v(" "),s("p",[a._v("如果x和y是两个不同的对象，x.hashCode( )与y.hashCode( )基本上不会相同。")]),a._v(" "),s("h4",{attrs:{id:"_5-2-4-tostring方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-4-tostring方法"}},[a._v("#")]),a._v(" 5.2.4 toString方法")]),a._v(" "),s("p",[a._v("Object中的"),s("code",[a._v("toString")]),a._v("方法用于返回表示对象值的字符串，例如Employee类中的toString方法的实现如下：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Employee[name="')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" name "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('",salary="')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" salary "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('",hireDay="')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" hireDay "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"]"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h3",{attrs:{id:"_5-3-泛型数组列表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-泛型数组列表"}},[a._v("#")]),a._v(" 5.3 泛型数组列表")]),a._v(" "),s("p",[a._v("Java中运行时确定数组的大小（而不是在编译时就必须确定），可以通过"),s("code",[a._v("ArrayList")]),a._v("类来实现。")]),a._v(" "),s("p",[a._v("ArrayList是一个采用类型参数（type parameter）的泛型类（generic class）。为了指定数组列表保存的元素对象类型，需要用一对尖括号将类名括起来加在后面，例如："),s("code",[a._v("ArrayList<Employee>")])]),a._v(" "),s("p",[a._v("下面声明和构造一个保存Employee对象的数组列表：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" staff "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("使用add方法可以将元素添加到数组列表中。例如，下面展示了如何将Employee对象添加到数组列表中：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("staff"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Harry Hacker"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("如果知道要存储多少个元素，可以通过"),s("code",[a._v("ensureCapacity")]),a._v("方法分配空间（然后还是要add）：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("staff"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ensureCapacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("通过"),s("code",[a._v("size")]),a._v("方法查看数组列表的实际元素数目：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("staff"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("使用"),s("strong",[a._v("get")]),a._v("和"),s("strong",[a._v("set")]),a._v("方法实现访问或改变数组元素的操作（而不常见的"),s("code",[a._v("变量[ ]")]),a._v("语法格式）")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),a._v(" e "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" staff"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 获取数组列表的元素,类似: Employee e = a[i]")]),a._v("\nstaff"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("harry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 设置第i个元素的值,类似: staff[i] = harry")]),a._v("\n")])])]),s("h3",{attrs:{id:"_5-4-对象包装器与自动装箱"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-对象包装器与自动装箱"}},[a._v("#")]),a._v(" 5.4 对象包装器与自动装箱")]),a._v(" "),s("p",[a._v("Java中int这样的基本类型也可以转换为对象。所有的基本类型都有一个与之对应的类。例如，Integer类对应基本类型int。通常，这些类称为包装器（wrapper）。包装器类拥有的关键字：Integer、Long、Float、Double、Short、Byte、Character、Void和Boolean。")]),a._v(" "),s("blockquote",[s("p",[a._v("对象包装器类是不可变的，即一旦构造了包装器，就不允许更改包装在其中的值。同时，对象包装器类还是final，因此不能定义它们的子类")])]),a._v(" "),s("p",[a._v("比如声明一个整型数组列表（尖括号参数不能是基本类型，即不能写成 ArrayList< int >），通过Integer对象包装器来声明：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" list "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("元素添加还是和ArrayList操作一样，例如：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t\t\t "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 自动装箱：自动转为成 list.add(Integer.valueOf(3))")]),a._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 自动拆箱：自动转换成 list.get(i).intValue()")]),a._v("\n")])])]),s("h3",{attrs:{id:"_5-5-参数数量可变的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-参数数量可变的方法"}},[a._v("#")]),a._v(" 5.5 参数数量可变的方法")]),a._v(" "),s("p",[a._v("Java SE 5.0之后的版本提供了可以用可变的参数数量调用的方法，例如下面这段代码接受任意个double类型的参数，从中寻找其中的最大值并在控制台输出：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Main")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" largest"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Double")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("MIN_VALUE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" v"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("v"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("largest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t\t\t\tlargest"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" largest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\t\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" m"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("56.7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("345.45")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h3",{attrs:{id:"_5-6-枚举类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-枚举类"}},[a._v("#")]),a._v(" 5.6 枚举类")]),a._v(" "),s("p",[a._v("所有的枚举类型都是Enum类的子类，最常用的方法是"),s("code",[a._v("toString")]),a._v("（所有的枚举类型都是Enum类的子类）")]),a._v(" "),s("p",[a._v("toString的逆方法是静态方法"),s("code",[a._v("valueOf")])]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("SMALL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('//返回字符串"SMALL"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Size")]),a._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Enum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("valueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("calss"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"SMALL"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//将s设置成Size.SMALL")]),a._v("\n")])])]),s("p",[a._v("每个枚举类型都有一个静态的values方法，它将返回一个包含全部枚举值的数组")]),a._v(" "),s("h3",{attrs:{id:"_5-7-反射"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-反射"}},[a._v("#")]),a._v(" 5.7 反射")]),a._v(" "),s("p",[a._v("能够分析类能力的程序称为"),s("strong",[a._v("反射（reflective）")]),a._v("，有个反射库用以编写能够动态操纵Java代码的程序。")]),a._v(" "),s("p",[a._v("反射机制可以用来：")]),a._v(" "),s("ul",[s("li",[a._v("在运行时分析类的能力")]),a._v(" "),s("li",[a._v("在运行时查看对象（例如编写一个toString方法供所有类使用）")]),a._v(" "),s("li",[a._v("实现通用的数组操作代码")]),a._v(" "),s("li",[a._v("利用方法对象（这个对象很像C++中的函数指针）")])]),a._v(" "),s("h4",{attrs:{id:"_5-7-1-class类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-1-class类"}},[a._v("#")]),a._v(" 5.7.1 Class类")]),a._v(" "),s("p",[a._v("Java会为所有对象维护一个被称为"),s("strong",[a._v("运行时")]),a._v("的类型标识，这个信息跟踪着每个对象所属的类，保存这些信息的类被称为"),s("strong",[a._v("Class")]),a._v("。（最常用的Class方法是getName，例如"),s("code",[a._v("a.getClass( ).getName( )")]),a._v("，"),s("code",[a._v("b.getName( )")]),a._v("）")]),a._v(" "),s("h4",{attrs:{id:"_5-7-2-捕获异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-2-捕获异常"}},[a._v("#")]),a._v(" 5.7.2 捕获异常")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("try")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 写入可能会报错的代码")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("catch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Exception")]),a._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 针对异常进行处理的代码")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[s("code",[a._v("Exception")]),a._v("是一个类")]),a._v(" "),s("p",[a._v("（反射还有很多内容，略）")]),a._v(" "),s("h3",{attrs:{id:"_5-8-继承的设计技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-8-继承的设计技巧"}},[a._v("#")]),a._v(" 5.8 继承的设计技巧")]),a._v(" "),s("ol",[s("li",[a._v("将公共操作和实例域放在父类")]),a._v(" "),s("li",[a._v("不要使用受保护的域")]),a._v(" "),s("li",[a._v('使用继承实现"is-a"关系')]),a._v(" "),s("li",[a._v("除非所有继承的方法都有意义，否则不要使用继承")]),a._v(" "),s("li",[a._v("覆盖方法时，不要改变预期的行为")]),a._v(" "),s("li",[a._v("使用多态，而非类型信息")]),a._v(" "),s("li",[a._v("不要过多得使用反射")])]),a._v(" "),s("h2",{attrs:{id:"第6章-接口、lambda表达式与内部类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第6章-接口、lambda表达式与内部类"}},[a._v("#")]),a._v(" 第6章 接口、lambda表达式与内部类")]),a._v(" "),s("h3",{attrs:{id:"_6-1-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-接口"}},[a._v("#")]),a._v(" 6.1 接口")]),a._v(" "),s("h4",{attrs:{id:"_6-1-1-接口概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-1-接口概念"}},[a._v("#")]),a._v(" 6.1.1 接口概念")]),a._v(" "),s("p",[a._v("在Java程序设计语言中，"),s("strong",[a._v("接口（interface）不是类")]),a._v("，而是对类的一组需求描述（类是对编写者的角度来看的，而接口是使用者的角度，对于使用者来说并不需要关注接口的具体实现 ~ 简单说接口就是一堆打包好了的方法）")]),a._v(" "),s("p",[a._v("接口通过关键字"),s("code",[a._v("interface")]),a._v("实现，比如Comparable接口：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("interface")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Comparable")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("compareTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),a._v(" other"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[s("strong",[a._v("对象所属的类必须实现了接口的方法")]),a._v("，即在上面的例子中，任何实现Comparable接口的类都需要包含compareTo方法，并且这个方法的参数必须是一个Object对象，返回一个整型数值。")]),a._v(" "),s("h4",{attrs:{id:"_6-1-2-接口的特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-2-接口的特性"}},[a._v("#")]),a._v(" 6.1.2 接口的特性")]),a._v(" "),s("p",[a._v("接口的特性：")]),a._v(" "),s("ul",[s("li",[a._v("接口不是类，不能new")]),a._v(" "),s("li",[a._v("虽然不能构造接口的对象，但能声明接口的变量")]),a._v(" "),s("li",[a._v("接口变量必须引用实现了接口的类对象")])]),a._v(" "),s("h4",{attrs:{id:"_6-1-3-接口与抽象类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-3-接口与抽象类"}},[a._v("#")]),a._v(" 6.1.3 接口与抽象类")]),a._v(" "),s("p",[a._v("抽象类很难")]),a._v(" "),s("p",[a._v("抽象类有个问题：每个类只能继承自一个类（Java的类不允许多重继承）")]),a._v(" "),s("p",[a._v("而接口可以提供多重继承的大多数好处，又能避免多重继承的复杂性和低效性。")]),a._v(" "),s("h4",{attrs:{id:"_6-1-4-静态方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-4-静态方法"}},[a._v("#")]),a._v(" 6.1.4 静态方法")]),a._v(" "),s("p",[a._v("静态方法是一种不能向对象实施操作的方法。例如，Math类的pow方法就是一个静态方法。")]),a._v(" "),s("p",[a._v("静态方法通常放在类里面，而不是放在接口里。")]),a._v(" "),s("h4",{attrs:{id:"_6-1-5-默认方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-5-默认方法"}},[a._v("#")]),a._v(" 6.1.5 默认方法")]),a._v(" "),s("p",[s("code",[a._v("default")]),a._v("可以为接口方法提供一个默认实现：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("interface")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Comparable")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("default")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("compareTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),a._v(" other"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("一般没啥用，因为这个接口的每个实际实现都要覆盖这个方法")]),a._v(" "),s("h4",{attrs:{id:"_6-1-6-解决默认方法冲突"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-6-解决默认方法冲突"}},[a._v("#")]),a._v(" 6.1.6 解决默认方法冲突")]),a._v(" "),s("p",[a._v("如果先在一个接口中将一个方法定义为默认方法，然后又在父类或另一个接口中定义了同样的方法，那么会这样：")]),a._v(" "),s("ol",[s("li",[a._v("父类优先。如果父类提供了一个具体方法，同名而且有相同参数类型的默认方法会被忽略。")]),a._v(" "),s("li",[a._v("接口重复。如果一个超接口（接口的父？）提供了一个默认方法，另一个接口提供论一个同盟而且参数类型相同的方法，那么必须覆盖这个方法来解决冲突。")])]),a._v(" "),s("h3",{attrs:{id:"_6-2-接口示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-接口示例"}},[a._v("#")]),a._v(" 6.2 接口示例")]),a._v(" "),s("h4",{attrs:{id:"_6-2-1-接口与回调"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-1-接口与回调"}},[a._v("#")]),a._v(" 6.2.1 接口与回调")]),a._v(" "),s("p",[a._v("**回调（callback）**是一种常见的程序设计模式，可以指定事件发生时采取的动作（比如点击某个按钮就弹出页面）")]),a._v(" "),s("h4",{attrs:{id:"_6-2-2-comparator接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-2-comparator接口"}},[a._v("#")]),a._v(" 6.2.2 Comparator接口")]),a._v(" "),s("p",[a._v("略")]),a._v(" "),s("h4",{attrs:{id:"_6-2-3-对象克隆"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-3-对象克隆"}},[a._v("#")]),a._v(" 6.2.3 对象克隆")]),a._v(" "),s("p",[a._v("Cloneable接口（略）")]),a._v(" "),s("h3",{attrs:{id:"_6-3-lambda表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-lambda表达式"}},[a._v("#")]),a._v(" 6.3 lambda表达式")]),a._v(" "),s("h4",{attrs:{id:"_6-3-1-为什么引入lambda表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-1-为什么引入lambda表达式"}},[a._v("#")]),a._v(" 6.3.1 为什么引入lambda表达式")]),a._v(" "),s("p",[a._v("如果要将代码块作为参数传递到某个对象，还是比较麻烦的（因为只有String类型比较符合，所以处理起来麻烦）")]),a._v(" "),s("h4",{attrs:{id:"_6-3-2-lambda表达式的语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-2-lambda表达式的语法"}},[a._v("#")]),a._v(" 6.3.2 lambda表达式的语法")]),a._v(" "),s("p",[a._v("lambda表达式就是一个代码块，以及写上代码的变量规范")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" first"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" second"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" first"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" second"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("lambda表达式形式："),s("kbd",[a._v("参数,箭头(->),表达式")]),a._v("，即使没有参数也要提供空括号")]),a._v(" "),s("h4",{attrs:{id:"_6-3-3-函数式接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-3-函数式接口"}},[a._v("#")]),a._v(" 6.3.3 函数式接口")]),a._v(" "),s("p",[a._v("对于只有一个抽象方法的接口，需要这种接口的对象时，就可以提供一个lambda表达式。这种接口称为函数式接口（functional interface）。")]),a._v(" "),s("h4",{attrs:{id:"_6-3-4-方法引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-4-方法引用"}},[a._v("#")]),a._v(" 6.3.4 方法引用")]),a._v(" "),s("p",[a._v("利用方法引用可以实现现成的方法可以完成你想要传递到其他代码的某个动作")]),a._v(" "),s("p",[a._v("例如希望出现定时器事件就打印这个事件对象，可以调用：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Timer")]),a._v(" t "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Timer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" event "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("上面这个例子本来参数是(1000,event)的，加上了lambda表达式就调用完这个方法后打印一遍event")]),a._v(" "),s("p",[a._v("通过方法引用，可以直接把println方法传递到Timer构造器这样就更方便了，具体实现：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Timer")]),a._v(" t "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Timer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("表达式"),s("code",[a._v("System.out::println")]),a._v("是一个方法引用（method reference），它等价于lambda表达式"),s("code",[a._v("x -> System.out.println(x)")])]),a._v(" "),s("h4",{attrs:{id:"_6-3-5-构造器引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-5-构造器引用"}},[a._v("#")]),a._v(" 6.3.5 构造器引用")]),a._v(" "),s("p",[a._v("构造器引用与方法引用很类似，只不过方法名为new")]),a._v(" "),s("h4",{attrs:{id:"_6-3-6-变量作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-6-变量作用域"}},[a._v("#")]),a._v(" 6.3.6 变量作用域")]),a._v(" "),s("p",[a._v("略")]),a._v(" "),s("h4",{attrs:{id:"_6-3-7-处理lambda表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-7-处理lambda表达式"}},[a._v("#")]),a._v(" 6.3.7 处理lambda表达式")]),a._v(" "),s("p",[a._v("略")]),a._v(" "),s("h4",{attrs:{id:"_6-3-7-处理lambda表达式-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-7-处理lambda表达式-2"}},[a._v("#")]),a._v(" 6.3.7 处理lambda表达式")]),a._v(" "),s("h2",{attrs:{id:"_6-4-内部类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-内部类"}},[a._v("#")]),a._v(" 6.4 内部类")]),a._v(" "),s("p",[a._v("**内部类（inner class）**是定义在另一个类中的类，使用内部类的主要原因有三点：")]),a._v(" "),s("ul",[s("li",[a._v("内部类方法可以访问该类定义所在的作用域中的数据，包括私有的数据")]),a._v(" "),s("li",[a._v("内部类可以对同一个包中的其他类隐藏起来")]),a._v(" "),s("li",[a._v("当想要定义一个回调函数且不想编写大量代码时，使用匿名（anonymous）内部类比较便捷。")])]),a._v(" "),s("h4",{attrs:{id:"_6-4-6-匿名内部类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-6-匿名内部类"}},[a._v("#")]),a._v(" 6.4.6 匿名内部类")]),a._v(" "),s("p",[a._v("将局部内部类的使用再深入一步。假如只创建这个类的一个对象，就不必命名了。这种类被称为"),s("strong",[a._v("匿名内部类（anonymous inner class）")])]),a._v(" "),s("h4",{attrs:{id:"_6-4-7-静态内部类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-7-静态内部类"}},[a._v("#")]),a._v(" 6.4.7 静态内部类")]),a._v(" "),s("p",[a._v("使用内部类只是为了把一个类隐藏在另外一个类的内部，并不需要内部类引用外围类对象。为此，可以将内部类声明为static，以便取消产生的引用。")]),a._v(" "),s("h3",{attrs:{id:"_6-5-代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-代理"}},[a._v("#")]),a._v(" 6.5 代理")]),a._v(" "),s("p",[a._v("利用**代理（proxy）**可以在运行时创建一个实现了一组给定接口的新类")]),a._v(" "),s("p",[a._v("（用得很少，因为这种功能只有在编译时无法确定需要实现哪个接口时才有必要使用）")]),a._v(" "),s("hr"),a._v(" "),s("p",[s("strong",[a._v("完结撒花"),s("em",[a._v("★,°")]),a._v(":.☆(￣▽￣)/$:"),s("em",[a._v(".°★")]),a._v(" 。")])]),a._v(" "),s("blockquote",[s("p",[a._v("这里只是基础部分，后面还有Java并发比较重要，不过我觉得Java并发还是单独一篇来写吧，另外，这本书的案例相对来说还是没那么贴合没有开发经验的小白。个人建议没有做过后端开发的读者可以看完《Java核心技术 卷I》后看看 https://how2j.cn，这个网站以游戏作为案例通俗易懂地讲解了Java的各个部分。如果《Java核心技术 卷I》里有什么看不懂的，去这里看看也许会恍然大悟。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);
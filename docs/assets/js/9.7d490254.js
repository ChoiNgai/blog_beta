(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{402:function(t,s,a){"use strict";a.r(s);var n=a(30),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"elasticsearch入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch入门"}},[t._v("#")]),t._v(" ElasticSearch入门")]),t._v(" "),a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("        之前一直想花点时间写一篇 "),a("code",[t._v("elasticsearch")]),t._v(" 的保姆级教程，于是，趁着年假的几天时间加上周末的一些时间，我产出了自认为算是非常详细的，基于目前最新版本的"),a("code",[t._v("elasticsearch7.11")]),t._v("教程。不管是新手上路，还是秋名山老司机，都建议收藏一下，希望看完对您有所帮助！如果可以，记得"),a("strong",[t._v("一键三连")]),t._v("！\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210213183253576.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"elasticsearch概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch概述"}},[t._v("#")]),t._v(" ElasticSearch概述")]),t._v(" "),a("p",[t._v("        Elaticsearch，简称为es， "),a("font",{attrs:{color:"tomato"}},[t._v("es是一个开源的高扩展的分布式全文检索引擎，它可以近乎实时的存储、检索数据；本身扩展性很好，可以扩展到上百台服务器，处理PB级别的数据")]),t._v("。es也使用Java开发并使用 "),a("code",[t._v("Lucene")]),t._v(" 作为其核心来实现所有索引和搜索的功能，但是它的目的是通过简单的 "),a("strong",[t._v("RESTful API")]),t._v(" 来隐藏 Lucene 的复杂性，从而让全文搜索变得简单。")],1),t._v(" "),a("p",[t._v("        据国际权威的数据库产品评测机构 DB Engines 的统计，在2016年1月，ElasticSearch已超过Solr等，成为排名第一的搜索引擎类应用。")]),t._v(" "),a("p",[t._v("        为了增加学习的趣味性，我们来聊一聊 elasticsearch 的历史")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("历史")])])]),t._v(" "),a("p",[t._v("        多年前，一个叫做Shay Banon的刚结婚不久的失业开发者，由于妻子要去伦敦学习厨师，他便跟着也去了。在他找工作的过程中，为了给妻子构建一个食谱的搜索引擎，他开始构建一个早期版本的Lucene。")]),t._v(" "),a("p",[t._v("        直接基于Lucene工作会比较困难，所以Shay开始抽象Lucene代码以便Java程序员可以在应用中添加搜索功能。他发布了他的第一个开源项目，叫做“Compass”。")]),t._v(" "),a("p",[t._v("        后来Shay找到一份工作，这份工作处在高性能和内存数据网格的分布式环境中，因此高性能的、实时的、分布式的搜索引擎也是理所当然需要的。然后他决定重写Compass库使其成为一个独立的服务叫做Elasticsearch。")]),t._v(" "),a("p",[t._v("        第一个公开版本出现在2010年2月，在那之后Elasticsearch已经成为Github上最受欢迎的项目之一，代码贡献者超过300人。一家主营Elasticsearch的公司就此成立，他们一边提供商业支持一边开发新功能，不过 Elasticsearch 将永远开源且对所有人可用。")]),t._v(" "),a("p",[t._v("        Shay的妻子依旧等待着她的食谱搜索……")]),t._v(" "),a("h2",{attrs:{id:"es-和-solr-的差别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es-和-solr-的差别"}},[t._v("#")]),t._v(" ES 和 solr 的差别")]),t._v(" "),a("p",[t._v("        学习 ES，我们免不了需要跟 solr 进行对比学习！下面我们分别来看看，它们之间具体的差别在哪里：")]),t._v(" "),a("h3",{attrs:{id:"elasticsearch-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch-简介"}},[t._v("#")]),t._v(" Elasticsearch 简介")]),t._v(" "),a("p",[a("strong",[a("font",{attrs:{color:"tomato"}},[t._v("Elasticsearch 是一个实时分布式搜索和分析引擎")])],1),t._v("。它让你以前所未有的速度处理大数据成为可能。")]),t._v(" "),a("p",[t._v("        它用于"),a("strong",[t._v("全文搜索、结构化搜索、分析以及将这三者混合使用")]),t._v("：")]),t._v(" "),a("p",[t._v("        维基百科使用Elasticsearch提供全文搜索并高亮关键字，以及输入 实时搜索(search-asyou-type)和 搜索纠错(did-you-mean)等搜索建议功能。")]),t._v(" "),a("p",[t._v("        英国卫报使用Elasticsearch结合用户日志和社交网络数据提供给他们的编辑以实时的反馈，以便及时了解公众对新发表的文章的回应。")]),t._v(" "),a("p",[t._v("        StackOverflow结合全文搜索与地理位置查询，以及more-like-this功能来找到相关的问题和答案。")]),t._v(" "),a("p",[t._v("        Github使用Elasticsearch检索1300亿行的代码。")]),t._v(" "),a("p",[t._v("        但是 Elasticsearch 不仅用于大型企业，它还让像DataDog 以及 Klout 这样的创业公司将最初的想法变成可扩展的解决方案。")]),t._v(" "),a("p",[a("strong",[t._v("Elasticsearch可以在你的笔记本上运行，也可以在数以百计的服务器上处理PB级别的数据")]),t._v(" 。")]),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[t._v("Elasticsearch 是一个基于 Apache Lucene(TM) 的开源搜索引擎。无论在开源还是专有领域，Lucene可以被认为是迄今为止最先进、性能最好的、功能最全的搜索引擎库")])],1),t._v(" "),a("p",[t._v("        但是，"),a("strong",[t._v("Lucene只是一个库。想要使用它，你必须使用Java来作为开发语言并将其直接集成到你的应用中")]),t._v("，更糟糕的是，Lucene非常复杂，"),a("strong",[t._v("你需要深入了解检索的相关知识来理解它是如何工作的")])]),t._v(" "),a("p",[a("font",{attrs:{color:"RoyalBlue"}},[t._v("Elasticsearch也使用Java开发并使用 Lucene 作为其核心来实现所有索引和搜索的功能，但是它的目的是通过简单的 RESTful API 来隐藏 Lucene 的复杂性，从而让全文搜索变得简单")])],1),t._v(" "),a("h3",{attrs:{id:"solr-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#solr-简介"}},[t._v("#")]),t._v(" Solr 简介")]),t._v(" "),a("p",[t._v("        Solr 是 Apache 下的一个顶级开源项目，采用Java开发，它是基于 Lucene 的全文搜索服务器。Solr提供了比 Lucene 更为丰富的查询语言，同时实现了可配置、可扩展，并对索引、搜索性能进行了优化。")]),t._v(" "),a("p",[t._v("        Solr可以独立运行，运行在Jetty、Tomcat 等这些Servlet容器中，Solr 索引的实现方法很简单，用 POST 方法向 Solr 服务器发送一个描述 Field 及其内容的 XML 文档，Solr根据 xml 文档添加、删除、更新索引。Solr 搜索只需要发送 HTTP GET 请求，然后对 Solr 返回Xml、json等格式的查询结果进行解析，组织页面布局。Solr不提供构建UI的功能，Solr提供了一个管理界面，通过管理界面可以查询Solr的配置和运\n行情况。")]),t._v(" "),a("p",[t._v("        Solr是基于 lucene 开发企业级搜索服务器，实际上就是封装了lucene。")]),t._v(" "),a("p",[t._v("        Solr是一个独立的企业级搜索应用服务器，它对外提供类似于Web-service的API接口。用户可以通过http请求，向搜索引擎服务器提交一定格式的文件，生成索引；也可以通过提出查找请求，并得到返回结果。")]),t._v(" "),a("h3",{attrs:{id:"lucene简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lucene简介"}},[t._v("#")]),t._v(" Lucene简介")]),t._v(" "),a("p",[a("strong",[t._v("Lucene是apache软件基金会4 jakarta项目组的一个子项目，是一个开放源代码的全文检索引擎工具包，但它不是一个完整的全文检索引擎，而是一个全文检索引擎的架构")]),t._v("，提供了完整的查询引擎和索引引擎，部分文本分析引擎（英文与德文两种西方语言）。")]),t._v(" "),a("p",[t._v("        Lucene的目的是为软件开发人员提供一个简单易用的工具包，以方便的在目标系统中实现全文检索的功能，或者是以此为基础建立起完整的全文检索引擎。")]),t._v(" "),a("p",[a("strong",[t._v("Lucene是一套用于全文检索和搜寻的开源程式库，由Apache软件基金会支持和提供")]),t._v("。Lucene提供了一个简单却强大的应用程式接口，能够做全文索引和搜寻。在Java开发环境里Lucene是一个成熟的免费开源工具。就其本身而言，Lucene是当前以及最近几年最受欢迎的免费Java信息检索程序库。人们经常提到信息检索程序库，虽然与搜索引擎有关，但不应该将信息检索程序库与搜索引擎相混淆。")]),t._v(" "),a("p",[t._v("        Lucene是一个全文检索引擎的架构。那什么是全文搜索引擎？")]),t._v(" "),a("p",[t._v("        全文搜索引擎是名副其实的搜索引擎，国外具代表性的有Google、Fast/AllTheWeb、AltaVista、Inktomi、Teoma、WiseNut等，国内著名的有百度（Baidu）。它们都是通过从互联网上提取的各个网站的信息（以网页文字为主）而建立的数据库中，检索与用户查询条件匹配的相关记录，然后按一定的排列顺序将结果返回给用户，因此他们是真正的搜索引擎。")]),t._v(" "),a("p",[t._v("        从搜索结果来源的角度，全文搜索引擎又可细分为两种，一种是拥有自己的检索程序（Indexer），俗称“蜘蛛”（Spider）程序或“机器人”（Robot）程序，并自建网页数据库，搜索结果直接从自身的数据库中调用，如上面提到的7家引擎；另一种则是租用其他引擎的数据库，并按自定的格式排列搜索结果，如 Lycos 引擎。")]),t._v(" "),a("h3",{attrs:{id:"elasticsearch和solr比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch和solr比较"}},[t._v("#")]),t._v(" Elasticsearch和Solr比较")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201019221356322.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70#pic_center",alt:""}}),t._v(" "),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201019221405300.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70#pic_center",alt:""}}),t._v(" "),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201019221417703.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70#pic_center",alt:""}}),t._v(" "),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/2021021616225312.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70#pic_center",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"elasticsearch-vs-solr-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch-vs-solr-总结"}},[t._v("#")]),t._v(" ElasticSearch vs Solr 总结")]),t._v(" "),a("p",[t._v("        1、"),a("strong",[t._v("es基本是开箱即用，非常简单")]),t._v("。Solr安装略微复杂一丢丢！")]),t._v(" "),a("p",[t._v("        2、Solr 利用 Zookeeper 进行分布式管理，而 "),a("strong",[t._v("Elasticsearch 自身带有分布式协调管理功能")]),t._v("。")]),t._v(" "),a("p",[t._v("        3、Solr 支持更多格式的数据，比如JSON、XML、CSV，而 "),a("strong",[t._v("Elasticsearch 仅支持json文件格式")])]),t._v(" "),a("p",[t._v("        4、Solr 官方提供的功能更多，而 "),a("strong",[t._v("Elasticsearch 本身更注重于核心功能，高级功能多有第三方插件提供")]),t._v("，例如图形化界面需要kibana友好支撑")]),t._v(" "),a("p",[t._v("        5、Solr 查询快，但更新索引时慢（即插入删除慢），用于电商等查询多的应用；")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("ES建立索引快（即查询慢），即实时性查询快，用于facebook新浪等搜索")]),t._v("。")]),t._v(" "),a("li",[t._v("Solr 是传统搜索应用的有力解决方案，但 "),a("strong",[t._v("Elasticsearch 更适用于新兴的实时搜索应用")]),t._v("。")])]),t._v(" "),a("p",[t._v("        6、Solr 比较成熟，有一个更大，更成熟的用户、开发和贡献者社区，而 "),a("strong",[t._v("Elasticsearch 相对开发维护者较少，更新太快，学习使用成本较高")]),t._v("。")]),t._v(" "),a("p",[t._v("        所以如果我们在做技术选型的时候，具体选择哪一项技术，还需要根据不同的场景来进行结合选择。")]),t._v(" "),a("p",[t._v("        哈哈哈，好像跑题了，下面我们就正式进入到 elasticsearch 的学习中！")]),t._v(" "),a("h2",{attrs:{id:"安装elasticsearch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装elasticsearch"}},[t._v("#")]),t._v(" 安装elasticsearch")]),t._v(" "),a("p",[t._v("        我们首先来到 es 的官网，根据自己不同的操作系统，点击即可下载最新版本的产品，目前最新版本是"),a("code",[t._v("Elasticsearch 7.11")])]),t._v(" "),a("blockquote",[a("p",[t._v("官网地址：https://www.elastic.co/cn/start")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210213150514125.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        Kibana 是一个免费且开放的用户平台，能够让我们对 Elasticsearch 数据进行可视化，这里我们也一并将其下载到本地\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210213151014587.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"上传安装包到linux并解压"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#上传安装包到linux并解压"}},[t._v("#")]),t._v(" 上传安装包到linux并解压")]),t._v(" "),a("p",[t._v("        我的习惯是将所有的软件包放到"),a("code",[t._v("/export/software")]),t._v("目录下，解压后的目录是"),a("code",[t._v("/export/servers")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node01 software"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# tar -zxvf elasticsearch-7.11.0-linux-x86_64.tar.gz -C ../servers/")]),t._v("\n")])])]),a("h3",{attrs:{id:"目录结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录结构"}},[t._v("#")]),t._v(" 目录结构")]),t._v(" "),a("p",[t._v("        解压完毕之后，我们先来熟悉es的目录结构")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node01 elasticsearch-7.11.0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ll /export/servers/elasticsearch-7.11.0")]),t._v("\n总用量 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("556")]),t._v("\ndrwxr-xr-x.  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" esuser esuser   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("月   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" 06:48 bin\ndrwxr-xr-x.  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" esuser esuser    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("199")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("月  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(":44 config\ndrwxr-xr-x.  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" esuser esuser     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("月  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(":15 data\ndrwxr-xr-x.  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" esuser esuser    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("107")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("月   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" 06:48 jdk\ndrwxr-xr-x.  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" esuser esuser   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("月   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" 06:48 lib\n-rw-r--r--.  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" esuser esuser   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3860")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("月   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" 06:41 LICENSE.txt\ndrwxr-xr-x.  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" esuser esuser      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("月  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(":47 logs\ndrwxr-xr-x. "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("57")]),t._v(" esuser esuser   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("月   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" 06:49 modules\n-rw-r--r--.  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" esuser esuser "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("544318")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("月   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" 06:46 NOTICE.txt\ndrwxr-xr-x.  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" esuser esuser      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("月   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" 06:45 plugins\n-rw-r--r--.  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" esuser esuser   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7263")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("月   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" 06:41 README.asciidoc\n")])])]),a("p",[t._v("        其中我们常用的目录有：")]),t._v(" "),a("ul",[a("li",[t._v("bin：可执行文件在里面，运行es的命令就在这个里面，包含了一些脚本文件等")]),t._v(" "),a("li",[t._v("config：配置文件目录")]),t._v(" "),a("li",[t._v("JDK：java环境")]),t._v(" "),a("li",[t._v("lib：依赖的jar，类库")]),t._v(" "),a("li",[t._v("logs：日志文件")]),t._v(" "),a("li",[t._v("modules：es相关的模块")]),t._v(" "),a("li",[t._v("plugins：可以自己开发的插件")]),t._v(" "),a("li",[t._v("data：这个目录没有，自己新建一下，后面要用 -> mkdir data，这个作为"),a("strong",[t._v("索引目录")])])]),t._v(" "),a("h3",{attrs:{id:"修改配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改配置文件"}},[t._v("#")]),t._v(" 修改配置文件")]),t._v(" "),a("p",[t._v("        熟悉完es的目录，在启动es前，我们还需要修改一些配置文件")]),t._v(" "),a("h4",{attrs:{id:"核心配置文件-elasticearch-yml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#核心配置文件-elasticearch-yml"}},[t._v("#")]),t._v(" 核心配置文件 elasticearch.yml")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node01 elasticsearch-7.11.0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim config/elasticsearch.yml")]),t._v("\n")])])]),a("ol",[a("li",[t._v("修改集群名称")]),t._v(" "),a("li",[t._v("修改当前的 es 节点名称")]),t._v(" "),a("li",[t._v("修改data数据保存地址和日志数据保存地址")]),t._v(" "),a("li",[t._v("绑定 es 网络 ip")]),t._v(" "),a("li",[t._v("集群节点修改为之前的节点名称")])]),t._v(" "),a("p",[t._v("        具体位置如下图所示：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210213152952418.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"修改-jvm-参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改-jvm-参数"}},[t._v("#")]),t._v(" 修改 jvm 参数")]),t._v(" "),a("p",[t._v("        因为 Elasticsearch 是用 "),a("strong",[t._v("Java")]),t._v(" 语言开发的，所以我们在配置环节一定少不了修改 jvm 的参数")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node01 elasticsearch-7.11.0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim config/jvm.options")]),t._v("\n")])])]),a("p",[t._v("        根据自己当前操作系统的不同配置，设置不同的大小即可\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210213153409473.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"添加用户"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加用户"}},[t._v("#")]),t._v(" 添加用户")]),t._v(" "),a("p",[t._v("        比较有意思的一点是，"),a("font",{attrs:{color:"red"}},[t._v("es不允许使用 root 来操作 es")]),t._v("，需要我们添加用户，具体的命令如下：")],1),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1. 创建elsearch用户组及elsearch用户：")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("groupadd")]),t._v(" elsearch\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useradd")]),t._v(" elsearch -g elsearch\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("passwd")]),t._v(" elsearch"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 接下来会输入两次密码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# new password")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# retype passwd")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2. 切换到elsearch用户再启动")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("su")]),t._v(" elsearch\n")])])]),a("h3",{attrs:{id:"启动es"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动es"}},[t._v("#")]),t._v(" 启动es")]),t._v(" "),a("p",[t._v("        修改完上面2个配置文件，我们切换到"),a("code",[t._v("bin")]),t._v("目录下，通过"),a("code",[t._v("./elasticsearch")]),t._v("启动es")]),t._v(" "),a("p",[t._v("        不出意外，应该会报如下错误：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("ERROR: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" bootstrap checks failed\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": max "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" descriptors "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" elasticsearch process is too low, increase to at least "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("65535")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": max number of threads "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3795")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" user "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("esuser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" is too low, increase to at least "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("        我们只需要将最大的线程数设置大一些即可")]),t._v(" "),a("p",[t._v("        我们切换回到"),a("code",[t._v("root")]),t._v("目录")]),t._v(" "),a("ul",[a("li",[t._v("修改"),a("code",[t._v("/etc/security/limits.conf")]),t._v("文件")])]),t._v(" "),a("p",[t._v("        添加以下内容")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("* soft nofile "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("65536")]),t._v("\n* hard nofile "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("131072")]),t._v("\n* soft nproc "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2048")]),t._v("\n* hard nproc "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v("\n")])])]),a("p",[t._v("        如下图所示：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210213154649785.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("ul",[a("li",[t._v("修改 /etc/sysctl.conf 增加 "),a("code",[t._v("vm.max_map_count=262145")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210213154835371.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        修改完成之后，使用"),a("code",[t._v("sysctl -p")]),t._v("命令刷新一下，再次切换到 "),a("code",[t._v("esuser")]),t._v("进行启动即可。")]),t._v(" "),a("blockquote",[a("p",[t._v("记得将防火墙关闭或者将9200端口打开，否则就会出现启动成功，页面无法访问的情况")])]),t._v(" "),a("h3",{attrs:{id:"启动与暂停"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动与暂停"}},[t._v("#")]),t._v(" 启动与暂停")]),t._v(" "),a("p",[t._v("        启动与暂停这里也分成2种形式")]),t._v(" "),a("h4",{attrs:{id:"启动方式1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动方式1"}},[t._v("#")]),t._v(" 启动方式1")]),t._v(" "),a("p",[t._v("        我们在"),a("code",[t._v("bin")]),t._v("目录下直接"),a("code",[t._v("./elasticsearch")]),t._v("，可以看到运行结果")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/2021021315541653.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        然后根据自己的 "),a("code",[t._v("ip:9200")]),t._v("进行访问，可以在界面上看到如下返回的结果\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210213155543898.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        当前启动方式是"),a("strong",[t._v("前端")]),t._v("启动。停止服务的话直接"),a("strong",[t._v("ctrl+c")]),t._v(" 就好了")]),t._v(" "),a("h4",{attrs:{id:"启动方式2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动方式2"}},[t._v("#")]),t._v(" 启动方式2")]),t._v(" "),a("p",[t._v("        同时，我们也可以后端启动")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("esuser@node01 bin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ ./elasticsearch -d\n")])])]),a("p",[t._v("        稍等片刻，再次访问地址，还是相同结果")]),t._v(" "),a("p",[t._v("        此时，如果想关闭服务")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("esuser@node01 bin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -ef"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" elasticsearch\nesuser     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2931")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2178")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(":58 pts/0    00:00:00 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" --color"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("auto elasticsearch\n")])])]),a("p",[t._v("        然后将对应的进程id kill掉即可！\n        ")]),t._v(" "),a("p",[t._v("        接下来我们需要安装ES的图形化界面插件，也就是"),a("code",[t._v("elasticsearch-head")]),t._v("，这里介绍2种方法，"),a("font",{attrs:{color:"blue"}},[t._v("方法1比较麻烦，想省事的同学可以直接划到下方的方法2，利用谷歌插件进行安装，简单高效")]),t._v("！")],1),t._v(" "),a("h2",{attrs:{id:"安装elasticsearch-head-方法1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装elasticsearch-head-方法1"}},[t._v("#")]),t._v(" 安装elasticsearch-head(方法1)")]),t._v(" "),a("p",[t._v("        elasticsearch-head是一款开源软件，被托管在"),a("strong",[t._v("github")]),t._v("上面，所以如果我们要使用它，必须先安装git，通过git获取"),a("code",[t._v("elasticsearch-head")])]),t._v(" "),a("p",[t._v("        给大家看下这个项目，已经斩获 7.3K 的start，说明还是非常受大众欢迎\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210213182440480.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        我们很容易的通过 git 将其clone到本地，然后上传到 linux 服务器上，然后解压。")]),t._v(" "),a("p",[t._v("        需要注意的是， 运行"),a("code",[t._v("elasticsearch-head")]),t._v("会用到 grunt，而 grunt 需要 npm 包管理器，所以"),a("font",{attrs:{color:"red"}},[t._v(" nodejs 是必须要安装的")])],1),t._v(" "),a("h3",{attrs:{id:"安装npm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装npm"}},[t._v("#")]),t._v(" 安装npm")]),t._v(" "),a("p",[t._v("        当然如果你的环境里已经安装好了npm，那则可以跳过这一步。")]),t._v(" "),a("h4",{attrs:{id:"_1-安装gcc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装gcc"}},[t._v("#")]),t._v(" (1) 安装gcc")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("yum "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" gcc gcc-c++\n")])])]),a("h4",{attrs:{id:"_2-下载node国内镜像-推荐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-下载node国内镜像-推荐"}},[t._v("#")]),t._v(" (2) 下载node国内镜像（推荐）")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://npm.taobao.org/mirrors/node/v10.14.1/node-v10.14.1-linux-x64.tar.gz\n")])])]),a("h4",{attrs:{id:"_3-解压并重命名文件夹"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-解压并重命名文件夹"}},[t._v("#")]),t._v(" (3) 解压并重命名文件夹")]),t._v(" "),a("p",[t._v("        解压")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -xvf  node-v10.14.1-linux-x64.tar.gz\n")])])]),a("p",[t._v("        然后重命名文件夹")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" node-v10.14.1-linux-x64 node\n")])])]),a("h4",{attrs:{id:"_4-添加环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-添加环境变量"}},[t._v("#")]),t._v(" (4)  添加环境变量")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/profile\n")])])]),a("p",[t._v("        在文件最后添加以下配置：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("NODE_HOME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/export/servers/node  \n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$NODE_HOME")]),t._v("/bin:"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PATH")]),t._v("\n")])])]),a("h4",{attrs:{id:"_5-刷新配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-刷新配置"}},[t._v("#")]),t._v(" (5) 刷新配置")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" /etc/profile\n")])])]),a("h4",{attrs:{id:"_6-验证结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-验证结果"}},[t._v("#")]),t._v(" (6) 验证结果")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("node -v\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" -v\n")])])]),a("p",[t._v("        能够正确显示版本号即说明 nodejs 环境安装成功\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210213184336423.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"安装cnpm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装cnpm"}},[t._v("#")]),t._v(" 安装cnpm")]),t._v(" "),a("p",[t._v("        我们上面谈到的 npm 命令是 "),a("code",[t._v("node.js")]),t._v(" 的 npm 插件管理器，也就是下载插件安装插件的管理器。但我们在使用的时候，下载的都是国外服务器很慢会掉线，所以这一步，我们需要安装淘宝的 "),a("strong",[t._v("npm")]),t._v(" 镜像"),a("strong",[t._v("cnpm")]),t._v("。")]),t._v(" "),a("p",[t._v("        也非常简单，执行如下命令即可")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g cnpm --registry"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://registry.npm.taobao.org\n")])])]),a("blockquote",[a("p",[a("strong",[t._v("排雷")]),t._v("：如果遇到"),a("code",[t._v("this is a problem related to network connectivity, behind a proxy")]),t._v("的异常，执行"),a("code",[t._v("npm config set proxy null")]),t._v("将代理设置为空即可再重试上面的命令即可。")])]),t._v(" "),a("p",[t._v("        cnpm 正常安装完成之后呢，效果图如下：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210213224603252.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"下载依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下载依赖"}},[t._v("#")]),t._v(" 下载依赖")]),t._v(" "),a("p",[t._v("        现在环境都准备好了，那我们该做些什么呢？其实 GitHub 上都已经写明白了\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210213224818456.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        有多种方式运行 elasticsearch-head ，我们这里需要用的就是如上所示的内置服务器的方式。")]),t._v(" "),a("p",[t._v("        我们进入到"),a("code",[t._v("elasticsearch-head")]),t._v("的目录下，执行命令，下载相关的依赖")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node01 elasticsearch-head"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cnpm install")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/2021021322531659.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        命令执行完毕之后，我们可以在目录下看到多出了"),a("code",[t._v("node_modules")]),t._v("目录，这就是我们下载好的依赖。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210213225406430.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        然后在该目录下执行"),a("code",[t._v("npm run start")]),t._v("命令，启动 elasticsearch-head")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node01 elasticsearch-head"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# npm run start")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" elasticsearch-head@0.0.0 start /export/servers/elasticsearch-head\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" grunt server\n\nRunning "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"connect:server"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("connect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" task\nWaiting forever"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nStarted connect web server on http://localhost:9100\n")])])]),a("p",[t._v("        然后我们就可以在浏览器上通过 "),a("code",[t._v("ip:9100")]),t._v(" 访问到如下页面，但是当我们点击连接，在控制台又会出现 "),a("code",[t._v("Error")]),t._v(" 信息，这是为什么呢？\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210213230254924.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v(" "),a("strong",[t._v("真相")]),t._v("：由于ES进程和客户端进程端口号不同，存在跨域问题，所以我们要在ES的配置文件中添加如下配置下：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node01 elasticsearch-7.11.0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim config/elasticsearch.yml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 跨域配置")]),t._v("\nhttp.cors.enabled: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\nhttp.cors.allow-origin: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),t._v("\n")])])]),a("p",[t._v("        配置完毕，我们重启ES，重新连接，就能正常看到正常的页面了")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210214002407924.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"安装elasticsearch-head-方法2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装elasticsearch-head-方法2"}},[t._v("#")]),t._v(" 安装elasticsearch-head(方法2)")]),t._v(" "),a("p",[t._v("        不知道大家有没有对于操作到这一步，在想着有没有更简单的方式安装 "),a("strong",[t._v("elasticsearch-head")]),t._v(" 呢？")]),t._v(" "),a("p",[t._v("        当然有，我们在 readme 文件中，发现也可以通过在谷歌浏览器上使用插件的形式来进行安装 "),a("strong",[t._v("elasticsearch-head")]),t._v(" "),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210214002733426.png",alt:""}}),t._v("\n        我们在谷歌应用商店搜索“elasticsearch-head”插件，然后将其安装，自动添加至谷歌浏览器")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210214003014957.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        然后使用的时候，直接单击这个插件，就可以看见与我们按照上面那么繁杂的步骤所展示一致的界面。\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/2021021400320353.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        嗯，果然还是这种方法香！")]),t._v(" "),a("p",[t._v("        如果是初学的小伙伴，就算成功看到这个页面可能还有点懵，因为现在这个网站上还没有什么东西")]),t._v(" "),a("blockquote",[a("p",[t._v("我们初学，就把 es 当做一个数据库，可以建立索引（库），文档（库中的数据！）")])]),t._v(" "),a("p",[t._v("        现在还没有索引，我这里就先创建了一个"),a("code",[t._v("alice")]),t._v("索引\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210214105636493.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        然后就可以在"),a("code",[t._v("概览")]),t._v("栏看见分片信息，"),a("code",[t._v("索引")]),t._v("栏看见自己创建的索引，"),a("code",[t._v("数据浏览栏")]),t._v("看到索引里的所有数据！")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210214110231217.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        另外，"),a("code",[t._v("elasticsearch-head")]),t._v("上也提供了"),a("code",[t._v("基本查询")]),t._v("和"),a("code",[t._v("复合查询")]),t._v("的方式，其中复合查询是以 "),a("code",[t._v("restful")]),t._v("风格发起的请求，并且提交的参数都是格式化后的JSON类型。\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210214110720812.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        当然，大家也可能都看到了，这样的工具我们使用起来也不是很方便，这个"),a("font",{attrs:{color:"Tomato"}},[t._v(" elasticsearch-head 我们一般就把它当做"),a("strong",[t._v("数据展示")]),t._v("的工具，不建议利用它来进行数据的查询，我们所有的查询，基本都放在  "),a("strong",[t._v("Kibana")]),t._v(" 中完成")])],1),t._v(" "),a("h2",{attrs:{id:"安装kibana"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装kibana"}},[t._v("#")]),t._v(" 安装Kibana")]),t._v(" "),a("h3",{attrs:{id:"了解elk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#了解elk"}},[t._v("#")]),t._v(" 了解ELK")]),t._v(" "),a("blockquote",[a("p",[t._v("ELK是"),a("code",[t._v("Elasticsearch")]),t._v("、"),a("code",[t._v("Logstash")]),t._v("、"),a("code",[t._v("Kibana")]),t._v("三大开源框架首字母大写简称。市面上也被成为 ElasticStack 。其中 Elasticsearch 是一个基于 Lucene、分布式、通过 Restful 方式进行交互的"),a("strong",[t._v("近实时搜索平台框架")]),t._v("。像类似百度、谷歌这种大数据全文搜索引擎的场景都可以使用 Elasticsearch 作为底层支持框架，可见 Elasticsearch 提供的搜索能力确实强大，市面上很多时候我们简称Elasticsearch为es。Logstash是 ELK 的"),a("strong",[t._v("中央数据流引擎")]),t._v("，用于从不同目标（文件/数据存储/MQ）收集的不同格式数据，经过过滤后支持输出到不同目的地（文件/MQ/redis/elasticsearch/kafka等）。Kibana可以将 elasticsearch 的数据"),a("strong",[t._v("通过友好的页面展示出来，提供实时分析的功能")]),t._v("。")])]),t._v(" "),a("p",[t._v("        看了上面的描述，我们大概心里就已经清楚，ELK 的流程大致就是 "),a("strong",[t._v("收集清理数据 -> 搜索，存储 -> Kibana")]),t._v("，如下所示：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/2021021413493944.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("p",[t._v("        市面上很多开发只要提到 ELK 能够一致说出它是一个"),a("strong",[t._v("日志分析架构技术栈")]),t._v(" 总称，但"),a("font",{attrs:{color:"\tRoyalBlue"}},[a("strong",[t._v("实际上 ELK 不仅仅适用于日志分析，它还可以支持其它任何数据分析和收集的场景，日志分析和收集只是更具有代表性，并非唯一性")])]),t._v("。")],1),t._v(" "),a("h3",{attrs:{id:"kibana的安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kibana的安装"}},[t._v("#")]),t._v(" Kibana的安装")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("Kibana")]),t._v("是一个针对 "),a("code",[t._v("Elasticsearch")]),t._v(" 的开源分析及可视化平台，用来搜索、查看交互存储在 Elasticsearch 索引中的数据。使用 Kibana ，可以通过各种图表进行高级数据分析及展示。Kibana 让海量数据更容易理解。它"),a("strong",[t._v("操作简单，基于浏览器的用户界面可以快速创建仪表板（dashboard）实时显示Elasticsearch 查询动态")]),t._v("。设置Kibana非常简单。无需编码或者额外的基础架构，几分钟内就可以完成  Kibana 安装并启动 Elasticsearch 索引监测。")])]),t._v(" "),a("p",[t._v("        官网地址：https://www.elastic.co/cn/kibana")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210214135820861.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        然后选择对应操作系统的版本，默认安装的就是最新版本的 kibana。注意：kibana 版本 要和 es 的版本一致！\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210214135842373.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        下载完毕后，同样上传到Linux服务器，解压")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node01 software"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# tar -zxvf kibana-7.11.0-linux-x86_64.tar.gz -C ../servers/")]),t._v("\n")])])]),a("p",[t._v("        修改conf目录下的"),a("code",[t._v("kibana.yml")]),t._v("文件，添加上如下的几行配置\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/2021021423444595.png",alt:""}}),t._v("\n        然后切回到 bin 目录下，直接 "),a("code",[t._v("./kibana")]),t._v(" 启动即可，此时通过"),a("code",[t._v("ip：5601")]),t._v(" 即可正常访问到页面")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210214234705300.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        英文不好的同学是不是感觉看着有些吃力。其实，kibana 有自带的中文包，就在kibana 的 "),a("code",[t._v("x-pack/plugins/translations/translations")]),t._v(" 目录下的 "),a("code",[t._v("zh-CN.json")]),t._v(" "),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210215000411140.png",alt:""}}),t._v("\n        我们想要使用，直接打开conf目录下的"),a("code",[t._v("kibana.yml")]),t._v("文件\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210215000719134.png",alt:""}}),t._v("\n        我们可以看到 kibana 默认的语言是 英文，我们只需要添加使用中文插件即可")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("i18n.locale: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zh-CN"')]),t._v("\n")])])]),a("p",[t._v("        然后重新启动 kibana ，即可看到效果\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210215001050383.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"踩坑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#踩坑"}},[t._v("#")]),t._v(" 踩坑")]),t._v(" "),a("p",[t._v("         kibana 启动，可能会遇到这个 bug：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v(" Error: Unable to "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),t._v(" Kibana UUID file, please check the uuid.server configuration value "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" kibana.yml and ensure Kibana has sufficient permissions to "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" / "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),t._v(" to this file. Error was: EACCES\n")])])]),a("p",[a("strong",[t._v("解决方案")]),t._v(" 就是：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在root下为 为kibana赋权")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" -R elsearch:elsearch /export/servers/kibana-7.6.1-linux-x86_64/\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改kibana所在文件夹的权限")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("770")]),t._v(" /export/servers/kibana-7.6.1-linux-x86_64\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换回用户组 elsearch")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("su")]),t._v(" elsearch\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动")]),t._v("\n./kibana\n")])])]),a("h2",{attrs:{id:"es的核心概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es的核心概念"}},[t._v("#")]),t._v(" ES的核心概念")]),t._v(" "),a("h3",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),a("p",[t._v("        在前面的学习中，我们已经掌握了 es 是什么，同时也把 es 的服务已经安装启动，那么 es 是如何去存储数据，数据结构是什么，又是如何实现搜索的呢？我们先来聊聊"),a("font",{attrs:{color:"red"}},[t._v(" ElasticSearch的相关概念 ")]),t._v("吧")],1),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[t._v("集群，节点，索引，类型，文档，分片，映射是什么？")])],1),t._v(" "),a("h3",{attrs:{id:"对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对比"}},[t._v("#")]),t._v(" 对比")]),t._v(" "),a("blockquote",[a("p",[t._v("ElasticSearch 是面向文档的"),a("strong",[t._v("非关系型数据库")]),t._v("，下面让我们来看看它与"),a("strong",[t._v("关系型数据库")]),t._v("的客观对比！")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Relational DB")]),t._v(" "),a("th",[t._v("Elasticsearch")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("数据库(database)")]),t._v(" "),a("td",[t._v("索引(indices)")])]),t._v(" "),a("tr",[a("td",[t._v("表(tables)")]),t._v(" "),a("td",[t._v("types")])]),t._v(" "),a("tr",[a("td",[t._v("行(rows)")]),t._v(" "),a("td",[t._v("documents")])]),t._v(" "),a("tr",[a("td",[t._v("字段(columns)")]),t._v(" "),a("td",[t._v("fields")])])])]),t._v(" "),a("p",[a("font",{attrs:{color:"Tomato"}},[t._v("elasticsearch(集群)中可以包含多个索引(数据库)，每个索引中可以包含多个类型(表)，每个类型下又包含多个文档(行)，每个文档中又包含多个字段(列)")])],1),t._v(" "),a("p",[a("strong",[t._v("物理设计：")])]),t._v(" "),a("p",[t._v("        elasticsearch 在后台把每个索引划分成多个分片，每份分片可以在集群中的不同服务器间迁移")]),t._v(" "),a("p",[a("strong",[t._v("逻辑设计：")])]),t._v(" "),a("p",[a("font",{attrs:{color:"blue"}},[t._v("一个索引类型中，包含多个文档")]),t._v("，比如说文档1，文档2。 当我们索引一篇文档时，可以通过这样的一个顺序找到 它: 索引 ▷ 类型 ▷ 文档ID ，通过这个组合我们就能索引到某个具体的文档。 注意 : "),a("font",{attrs:{color:"blue"}},[t._v("ID不必是整数，实际上它是个字符串")]),t._v("。")],1),t._v(" "),a("h3",{attrs:{id:"文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文档"}},[t._v("#")]),t._v(" 文档")]),t._v(" "),a("p",[t._v("        之前说 elasticsearch 是面向文档的，那么就意味着"),a("font",{attrs:{color:"red"}},[t._v("索引和搜索数据的最小单位是文档")]),t._v("，elasticsearch 中，文档有几个 "),a("strong",[t._v("重要属性")]),t._v(" :")],1),t._v(" "),a("ul",[a("li",[t._v("自我包含，一篇文档同时包含字段和对应的值，也就是同时包含 key:value！")]),t._v(" "),a("li",[t._v("可以是层次型的，一个文档中包含自文档，复杂的逻辑实体就是这么来的！"),a("font",{attrs:{color:"blue"}},[t._v("其实就是个JSON对象")])],1),t._v(" "),a("li",[t._v("灵活的结构，文档不依赖预先定义的模式，我们知道关系型数据库中，要提前定义字段才能使用，在 elasticsearch 中，对于字段是非常灵活的，有时候，我们可以忽略该字段，或者动态的添加一个新的字段。")])]),t._v(" "),a("p",[t._v("        尽管我们可以随意的新增或者忽略某个字段，但是，每个字段的类型非常重要，比如一个年龄字段类型，可以是字符串也可以是整形。因为 elasticsearch 会保存字段和类型之间的映射及其他的设置。这种映射具体到每个映射的每种类型，这也是为什么在 elasticsearch 中，类型有时候也称为"),a("strong",[t._v("映射类型")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型"}},[t._v("#")]),t._v(" 类型")]),t._v(" "),a("p",[t._v("        类型是文档的逻辑容器，就像关系型数据库一样，表格是行的容器。 "),a("font",{attrs:{color:"red"}},[t._v("类型中对于字段的定义称为映射")]),t._v("，比如 name 映 射为字符串类型。 我们说文档是无模式的，它们不需要拥有映射中所定义的所有字段，比如新增一个字段，那么 elasticsearch 是怎么做的呢?elasticsearch会自动的将新字段加入映射，但是这个字段的不确定它是什么类型，elasticsearch就开始猜，如果这个值是18，那么elasticsearch会认为它是整形。 但是elasticsearch也可能猜不对， 所以最安全的方式就是提前定义好所需要的映射，这点跟关系型数据库殊途同归了，先定义好字段，然后再使用。\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210215113958205.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}})],1),t._v(" "),a("h3",{attrs:{id:"索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[t._v("#")]),t._v(" 索引")]),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[t._v("索引是映射类型的容器，elasticsearch 中的索引是一个非常大的文档集合")]),t._v("。索引存储了映射类型的字段和其他设置。 然后它们被存储到了各个分片上了。 我们来研究下分片是如何工作的。")],1),t._v(" "),a("p",[a("strong",[t._v("物理设计 ：节点和分片如何工作")])]),t._v(" "),a("p",[t._v("        一个集群至少有一个节点，而一个节点就是一个 elasricsearch 进程，节点可以有多个索引默认的，如果你创建索引，那么索引将会有个5个分片 ( primary shard ,又称主分片 ) 构成的，每一个主分片会有一个副本 ( replica shard ,又称复制分片 )")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210215115331868.png",alt:""}}),t._v("\n        下图是一个有3个节点的集群，可以看到"),a("font",{attrs:{color:"blue"}},[t._v("主分片和对应的复制分片都不会在同一个节点内，这样有利于某个节点挂掉 了，数据也不至于丢失")]),t._v("。\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210215115531671.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        实际上，一个分片是一个 "),a("code",[t._v("Lucene")]),t._v(" 索引，一个包含倒排索引的文件目录，倒排索引的结构使得"),a("code",[t._v("elasticsearch")]),t._v("在不扫描全部文档的情况下，就能告诉你哪些文档包含特定的关键字。 不过，等等，"),a("font",{attrs:{color:"purple"}},[t._v("倒排索引是什么鬼?")])],1),t._v(" "),a("h3",{attrs:{id:"倒排索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#倒排索引"}},[t._v("#")]),t._v(" 倒排索引")]),t._v(" "),a("p",[t._v("        elasticsearch 使用的是一种称为"),a("code",[t._v("倒排索引")]),t._v("的结构，采用"),a("code",[t._v("Lucene")]),t._v("倒排索引作为底层。这种结构适用于"),a("font",{attrs:{color:"tomato"}},[t._v("快速的全文搜索")]),t._v("， "),a("font",{attrs:{color:"tomato"}},[t._v("一个索引由文档中所有不重复的列表构成，对于每一个词，都有一个包含它的文档列表")]),t._v("。 例如，现在有两个文档， 每个文档包含如下内容：")],1),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Study every day, good good up to forever "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 文档1包含的内容")]),t._v("\nTo forever, study every day, good good up "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 文档2包含的内容")]),t._v("\n")])])]),a("p",[t._v("        为了创建倒排索引，我们首先要将每个文档拆分成独立的词(或称为词条或者tokens)，然后创建一个包含所有不重复的词条的排序列表，然后列出每个词条出现在哪个文档 :\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210215122533396.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        现在，我们试图搜索 "),a("code",[t._v("to forever")]),t._v("，只需要查看包含每个词条的文档\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210215122555432.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        两个文档都匹配，但是"),a("strong",[t._v("第一个文档比第二个匹配程度更高")]),t._v("。如果没有别的条件，现在，这两个包含关键字的文档都将返回。")]),t._v(" "),a("p",[t._v("        再来看一个示例，比如我们通过博客标签来搜索博客文章。那么倒排索引列表就是这样的一个结构 :\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210215122715367.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        如果要搜索含有 python 标签的文章，那相对于查找所有原始数据而言，查找倒排索引后的数据将会快的多。只需要 查看标签这一栏，然后获取相关的文章ID即可。"),a("font",{attrs:{color:"red"}},[t._v("完全过滤掉无关的所有数据，提高效率！")])],1),t._v(" "),a("p",[t._v("        在 elasticsearch 中， 索引这个词被频繁使用，这就是术语的使用。在 elasticsearch 中，索引被分为多个分片，每份分片是一个 Lucene 的索引。所以 "),a("font",{attrs:{color:"blue"}},[t._v("一个 elasticsearch 索引是由多个Lucene索引组成的")]),t._v("。别问为什么，谁让elasticsearch使用Lucene作为底层呢! "),a("strong",[t._v("如无特指，说起索引都是指elasticsearch的索引")]),t._v("。")],1),t._v(" "),a("h2",{attrs:{id:"es基础操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es基础操作"}},[t._v("#")]),t._v(" ES基础操作")]),t._v(" "),a("h3",{attrs:{id:"ik-分词器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ik-分词器"}},[t._v("#")]),t._v(" IK 分词器")]),t._v(" "),a("blockquote",[a("p",[t._v("什么是IK分词器？")])]),t._v(" "),a("p",[a("strong",[t._v("分词")]),t._v("："),a("strong",[t._v("即把一段中文或者别的内容划分成一个个的关键字，我们在搜索时候会把自己的信息进行分词，是因为数据库中或者索引库中的数据也会进行分词，然后进行一个匹配操作")]),t._v("，"),a("font",{attrs:{color:"RoyalBlue"}},[t._v('默认的中文分词是将每个字看成一个词，比如 “我爱大数据” 会被分为"我"，"爱"，"大", "数"，"据"，这显然是不符合要求的，所以我们需要安装中文分词器 ik 来解决这个问题')]),t._v("。")],1),t._v(" "),a("p",[t._v("        提前说一嘴，IK提供了两个分词算法：ik_smart 和  ik_max_word ，其中 "),a("code",[t._v("ik_smart")]),t._v(" 为最少切分，"),a("code",[t._v("ik_max_word")]),t._v(" 为 最细粒度划分！这个我们后面会来进行测试。")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("安装步骤")])])]),t._v(" "),a("p",[t._v("        1、下载ik分词器的包，Github地址："),a("code",[t._v("https://github.com/medcl/elasticsearch-analysis-ik/")]),t._v(" （版本要对\n应）。但目前我们es的版本是7.11，而现在发布的最新 ik 分词器的版本也才 7.10.2，那我们就先下载最新的版本\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/2021021516253859.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        2. 然后直接在软件包的存储目录下，直接执行命令：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node01 software"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# wget https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.10.2/elasticsearch-analysis-ik-7.10.2.zip")]),t._v("\n")])])]),a("p",[t._v("        3. 解压下载好的压缩包，注意，解压路径必须放在 es 的 plugins 目录下")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node01 software"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# unzip elasticsearch-analysis-ik-7.10.2.zip -d ../servers/elasticsearch-7.11.0/plugins/ik")]),t._v("\n")])])]),a("p",[t._v("        4. 给文件夹权限")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node01 plugins"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# chmod 777 ik")]),t._v("\n")])])]),a("p",[t._v("        5. 正常情况下我们重启 Elasticsearch 即可看到插件加载的日志，但是很遗憾，终究因为版本不同的问题，导致 es 无法重启成功\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210215173818541.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        所以关于分词器的部分就先停更，等到 ik 分词器出到 7.11 版本，再做更新？？？这是不可能的，所以我先用其他服务器上的一个 6.5.4 版本的 es 来做测试。")]),t._v(" "),a("p",[t._v("        然后我们打开  6.5.4 版本的 kibana 界面，可以发现跟我们最新下载的7.11 版本的 kibana 界面还是区别还是挺大的！")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210227141356911.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        但这并不影响我们接下来的操作，进入"),a("code",[t._v("Dev Tools")]),t._v("工具栏界面，先尝试用过 "),a("code",[t._v("ik_smart")]),t._v(" 最少切分，发起一个 GET 请求")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("GET _analyze\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"analyzer"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ik_smart"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"梦想家"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        返回的结果如下：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210227142522736.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        那我们再用相同的文字测试一次"),a("code",[t._v("ik_max_word")]),t._v(" 最细粒度划分：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("GET _analyze\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"analyzer"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ik_max_word"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"梦想家"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        此时返回的结果：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/2021022714275082.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        此时，相信已经有聪明的小伙伴能得出下面的结论：")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("ik_max_word")]),t._v(" 是"),a("strong",[t._v("细粒度分词")]),t._v("，会穷尽一个语句中所有分词可能\n"),a("code",[t._v("ik_smart")]),t._v(" 是"),a("strong",[t._v("粗粒度分词")]),t._v("，优先匹配最长词，不会有重复的数据")])]),t._v(" "),a("p",[t._v('        那大家有没有想过细粒度分词穷尽词库的可能，那词库是哪里的？一定是存在有类似"字典"这样的东西，不相信的话， 我们再用细粒度分词'),a("code",[t._v("ik_max_word")]),t._v("来做个测试")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("GET _analyze\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"analyzer"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ik_smart"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"超级喜欢狂神说"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        此时返回的结果：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210227144331264.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("p",[t._v("        可以发现此时"),a("code",[t._v("狂神说")]),t._v("几个字被拆开了，那如果我们想让系统识别“狂神说”是一个词，就需要我们编辑自定义词库。")]),t._v(" "),a("p",[t._v("        步骤同样非常简单：\n        （1） 进入"),a("code",[t._v("elasticsearch/plugins/ik/config")]),t._v("目录")]),t._v(" "),a("p",[t._v("        （2） 新建一个"),a("code",[t._v("my.dic")]),t._v("文件，编辑内容：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("狂神说\n")])])]),a("p",[t._v("        （3） 修改IKAnalyzer.cfg.xml（在 ik/config 目录下）")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("properties")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("comment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("IK Analyzer 扩展配置"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("comment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 用户可以在这里配置自己的扩展字典 --\x3e")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("entry")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("ext_dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("my.dic"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("entry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 用户可以在这里配置自己的扩展停止词字典 --\x3e")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("entry")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("ext_stopwords"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("entry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("properties")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("        修改完配置重新启动 elasticsearch，再次测试！\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210227145418782.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        此时可以发现，狂神说已经变成了一个词了~")]),t._v(" "),a("p",[t._v("        到了这里，我们就明白了分词器的基本规则和使用了！实际上搜索引擎做的最重要的一件事，就是分词！它需要将我们搜索的内容进行关键字的拆分，然后展示对应的信息。那这些被拆分出来的词是如何划分权重的呢？不用担心，马上我们就来开始学习 es 基本的增删改查！")]),t._v(" "),a("h3",{attrs:{id:"rest风格说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rest风格说明"}},[t._v("#")]),t._v(" Rest风格说明")]),t._v(" "),a("p",[t._v("        什么是 Rest 风格呢?")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("一种软件架构风格，而不是标准，只是提供了一组设计原则和约束条件。它主要用于客户端和服务器交互类的软件。基于这个风格设计的软件可以更简洁，更有层次，更易于实现缓存等机制")]),t._v("。")])]),t._v(" "),a("p",[t._v("        其中 基本 的 Rest 命令说明：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("method")]),t._v(" "),a("th",[t._v("url地址")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("PUT")]),t._v(" "),a("td",[t._v("localhost:9200/索引名称/类型名称/文档id")]),t._v(" "),a("td",[t._v("创建文档（指定文档 id ）")])]),t._v(" "),a("tr",[a("td",[t._v("POST")]),t._v(" "),a("td",[t._v("localhost:9200/索引名称/类型名称")]),t._v(" "),a("td",[t._v("创建文档（随机文档 id ）")])]),t._v(" "),a("tr",[a("td",[t._v("POST")]),t._v(" "),a("td",[t._v("localhost:9200/索引名称/类型名称/文档id/_update")]),t._v(" "),a("td",[t._v("修改文档")])]),t._v(" "),a("tr",[a("td",[t._v("DELETE")]),t._v(" "),a("td",[t._v("localhost:9200/索引名称/类型名称/文档id")]),t._v(" "),a("td",[t._v("删除文档")])]),t._v(" "),a("tr",[a("td",[t._v("GET")]),t._v(" "),a("td",[t._v("localhost:9200/索引名称/类型名称/文档id")]),t._v(" "),a("td",[t._v("通过文档id查询文档")])]),t._v(" "),a("tr",[a("td",[t._v("POST")]),t._v(" "),a("td",[t._v("localhost:9200/索引名称/类型名称/_search")]),t._v(" "),a("td",[t._v("查询所有数据")])])])]),t._v(" "),a("p",[t._v("        那接下来我们就用之前已经安装好的 "),a("code",[t._v("kibana")]),t._v(" 进行一个基础测试")]),t._v(" "),a("h3",{attrs:{id:"关于索引的基本操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于索引的基本操作"}},[t._v("#")]),t._v(" 关于索引的基本操作")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("基础测试")])])]),t._v(" "),a("ol",[a("li",[t._v("创建一个索引")])]),t._v(" "),a("blockquote",[a("p",[t._v("PUT /索引名/类型名/文档id\n{请求id}")])]),t._v(" "),a("p",[t._v("        根据网址:"),a("code",[t._v("ip:5601")]),t._v("打开我们的 kibana 的页面，进入到开发工具栏，在 Console 中输入 :")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("// 命令解释 \n// PUT 创建命令 test1 索引 type1 类型 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v("\nPUT /test1/type1/1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"大数据梦想家"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')]),t._v(":21\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        如下图所示：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210215231041249.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        返回结果 （是以REST ful 风格返回的 ）：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/2021021523145996.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        然后我们在"),a("code",[t._v("elasticsearch-head")]),t._v("中的数据浏览模块，就可以看见我们完成了自动创建索引，数据也成功添加进来了，所以建议初学时，可以将 es 当做是一个数据库来学习。\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210216003047548.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        那么 name 这个字段用不用指定类型呢。毕竟我们关系型数据库 是需要指定类型的啊")]),t._v(" "),a("h4",{attrs:{id:"字段类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字段类型"}},[t._v("#")]),t._v(" 字段类型")]),t._v(" "),a("p",[t._v("        elasticsearch 常见的字段类型如下：")]),t._v(" "),a("ul",[a("li",[t._v("字符串类型")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/text.html#text",target:"_blank",rel:"noopener noreferrer"}},[t._v("text"),a("OutboundLink")],1),t._v(" 、 "),a("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/keyword.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("keyword"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("数值类型")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/number.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("long, integer, short, byte, double, float, half_float, scaled_float"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("日期类型")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/date.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("date"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("布尔值类型")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/boolean.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("二进制类型")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/binary.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("binary"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("等等")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("PUT新增")])])]),t._v(" "),a("p",[t._v("        现在我们在"),a("code",[t._v("kibana")]),t._v("面板上新建一个索引并指定字段类型")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("PUT /test2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mappings"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"properties"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"long"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"birthday"')]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"date"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        输出如下，说明创建成功了")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"acknowledged"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" true,\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"shards_acknowledged"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" true,\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test2"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        在"),a("code",[t._v("elasticsearch-head")]),t._v("上可以查看到我们目前还未添加任何数据\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210216112031889.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("GET 查看")])])]),t._v(" "),a("p",[t._v("        现在我们来尝试使用一下 "),a("code",[t._v("GET")]),t._v(" 命令，请求具体的信息！")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210216112707533.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        可以发现通过"),a("code",[t._v("GET")]),t._v("请求，我们能够详细获取到该索引下具体的信息，其中包含字段类型。那上面示例中字段类型是我自己定义的，那么我们不定义类型会是什么情况呢？")]),t._v(" "),a("p",[t._v("        我们首先发起一个"),a("code",[t._v("PUT")]),t._v("请求，创建一个新的索引 test3，并添加一条数据")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("PUT /test3/_doc/1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"大数据梦想家"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')]),t._v(":21,\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"birthday"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2000-02-06"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        然后通过"),a("code",[t._v("GET")]),t._v("请求，可以发现非常的智能。但是如果我们的文档字段类型没有指定，那么es就会给我们默认配置的字段类型！\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210216113929829.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("UPDATE修改")])])]),t._v(" "),a("p",[t._v("        那如果我们想要修改文档里的字段信息呢？我们可以选择 "),a("code",[t._v("UPDATE")]),t._v(" 也可以 选择 "),a("code",[t._v("PUT")]),t._v("进行覆盖")]),t._v(" "),a("p",[t._v("        例如我可以像下图中的例子，将之前"),a("code",[t._v("test3")]),t._v("索引中的1号文档中的 name 字段修改后，重复提交，发现更新成功，但是注意 "),a("code",[t._v("version")]),t._v(" 版本号已经变成了2\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210216120908599.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        但是注意这种方法有弊端，如果我们在"),a("code",[t._v("PUT")]),t._v("的过程中，遗漏了字段，那么数据就会被新数据覆盖！所以，"),a("font",{attrs:{color:"red"}},[t._v("修改数据不建议使用PUT覆盖的方式！")])],1),t._v(" "),a("p",[t._v("        我们使用 POST 命令，在 id 后面跟 "),a("code",[t._v("_update")]),t._v(" ，要修改的内容放到 "),a("code",[t._v("doc")]),t._v(" 文档(属性)中即可。\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210216121916905.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        可以发现此时更新之后的"),a("code",[t._v("version")]),t._v("变成了3。所以，一旦索引被创建了之后，所有的修改都可以通过版本号看到变化。")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("DELETE删除")])])]),t._v(" "),a("p",[t._v("        那么怎么删除一条索引呢(库)呢?我们需要使用到"),a("code",[t._v("DELETE")]),t._v("命令\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210216124136158.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        执行完成之后，到"),a("code",[t._v("elasticsearch-head")]),t._v("中查看索引，可以发现已经被删除了\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210216124352598.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        结论： 通过 DELETE 命令实现删除，根据请求判断是删除索引还是删除文档记录！因此，"),a("font",{attrs:{color:"blue"}},[t._v("使用 RESTFUL 风格是我们学习ES值得推荐使用的")])],1),t._v(" "),a("h4",{attrs:{id:"其他命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他命令"}},[t._v("#")]),t._v(" 其他命令")]),t._v(" "),a("p",[t._v("        我们可以通过"),a("code",[t._v("GET _cat/health")]),t._v("来获取集群的一个健康状态\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210216115343406.png",alt:""}}),t._v("\n        同时观察"),a("code",[t._v("elasticsearch-head")]),t._v("，可以得出该界面实际上是在不断的像 elasticsearch 发起 GET 请求，然后将结果可视化展示在页面上！\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210216115510399.png",alt:""}}),t._v("\n        除了看集群的健康信息，我们还可以看什么呢？")]),t._v(" "),a("p",[t._v("        通过命令"),a("code",[t._v("GET _cat/indices?v")]),t._v("，我们可以获取到当前索引的很多信息，返回值包括所有索引的状态健康情况，分片，数据储存大小等等\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210216115957162.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"关于文档的基本操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于文档的基本操作"}},[t._v("#")]),t._v(" 关于文档的基本操作")]),t._v(" "),a("p",[t._v("        接下来我们学习关于文档的基本操作，首先先重新创建一个新的索引，并添加一些数据")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("PUT /alice/user/1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"爱丽丝"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')]),t._v(":21,\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"desc"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"在最美的年华，做最好的自己！"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tags"')]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"技术宅"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"温暖"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"思维活跃"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nPUT /alice/user/2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张三"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')]),t._v(":23,\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"desc"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"法外狂徒"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tags"')]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"渣男"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"交友"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nPUT /alice/user/3\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"路人甲"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')]),t._v(":24,\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"desc"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"不可描述"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tags"')]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"靓仔"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"网游"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        打开"),a("code",[t._v("elasticsearch-head")]),t._v("界面，确保我们的数据成功添加到了 es\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210216211002925.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        接下来就可以进行文档的基本操作了！")]),t._v(" "),a("h4",{attrs:{id:"简单查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单查询"}},[t._v("#")]),t._v(" 简单查询")]),t._v(" "),a("p",[t._v("        通过 "),a("code",[t._v("GET")]),t._v(" 命令，我们可以搜索到指定 id 的文档信息")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("GET alice/user/1\n")])])]),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210216211530259.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        当然这是简单的搜索，下面我们来看一下 es 如何做条件查询")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("条件查询_search?q"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n")])])]),a("p",[t._v("        我们可以通过如下命令，来进行条件查询")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("GET alice/user/_search?q"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("name:张三\n")])])]),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210227153321761.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("p",[t._v("        我们看一下结果 返回并不是 数据本身，是给我们了一个 "),a("code",[t._v("hits")]),t._v(" ，还有 "),a("code",[t._v("_score")]),t._v("得分，就是根据算法算出和查询条件匹配度高的分就越高。")]),t._v(" "),a("p",[t._v("        我们在以某度为例的搜索引擎上进行搜索也是一样的道理，权重越高网站的位置就越靠前！")]),t._v(" "),a("p",[t._v("        但我们一般使用"),a("strong",[t._v("不会直接加条件去查询")]),t._v("，更多的会用到下面要介绍到的"),a("strong",[t._v("复杂操作搜索")]),t._v("。")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("复杂操作搜索 select（ 排序，分页，高亮，模糊查询，精准查询！）")])])]),t._v(" "),a("p",[t._v("        为了方便测试，我又执行下面的命令，往Alice索引下添加了2个文档")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("PUT /alice/user/"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"爱丽丝学Java"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"age"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"desc"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"技术成就自我！"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tags"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"思维敏捷"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"喜欢学习"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nPUT /alice/user/"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"爱丽丝学Python"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"age"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"desc"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"人生苦短，我用Python！"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tags"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"好学"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"勤奋刻苦"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        刷新，查看到现在已经有了5条数据：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210227154210965.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        现在我们来构建一个查询：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("GET alice/user/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"match"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"爱丽丝"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210227155911688.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        默认的话，es会查询出文档的所有字段，如果我们"),a("strong",[t._v("只想要部分的字段")]),t._v("，就可以像下面所展示的demo进行查询：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("GET alice/user/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"match"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"爱丽丝"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_source"')]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"desc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        如上例所示，在查询中，通过 "),a("code",[t._v("_source")]),t._v(" 来控制仅返回 name 和 desc 属性。页面返回的查询结果如下：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210227160306357.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v(" "),a("font",{attrs:{color:"red"}},[t._v("一般的，我们推荐使用构建查询，以后在与程序交互时的查询等也是使用构建查询方式处理查询条件，因为该方式可以构建更加复杂的查询条件，也更加一目了然。")])],1),t._v(" "),a("h4",{attrs:{id:"排序查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#排序查询"}},[t._v("#")]),t._v(" 排序查询")]),t._v(" "),a("p",[t._v("        我们说到排序，有人就会想到：正序或倒序。那么我们先来根据"),a("code",[t._v("age")]),t._v("字段倒序查询：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("GET alice/user/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"match"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"爱丽丝"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sort"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"age"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"order"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"desc"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        查询返回的结果如下：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210227171530711.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        同理，如果我们想要正序查询，只需要将"),a("code",[t._v("desc")]),t._v("换成了"),a("code",[t._v("asc")]),t._v("即可。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("GET alice/user/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"match"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"爱丽丝"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sort"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"age"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"order"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"asc"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"from"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        查询结果如下：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210227172335795.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("注意:在排序的过程中，只能使用可排序的属性进行排序。那么可以排序的属性有哪些呢?")])]),t._v(" "),a("ul",[a("li",[t._v("数字")]),t._v(" "),a("li",[t._v("日期")]),t._v(" "),a("li",[t._v("ID")])]),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[t._v("其他都不行！")])],1),t._v(" "),a("h4",{attrs:{id:"分页查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分页查询"}},[t._v("#")]),t._v(" 分页查询")]),t._v(" "),a("p",[t._v("        学到这里，我们也可以看到，我们的查询条件越来越多，开始仅是"),a("strong",[t._v("简单查询")]),t._v("，慢慢增加"),a("strong",[t._v("条件查询")]),t._v("，增加排序，对返回结果进行限制。所以，我们可以说，对 于 elasticsearch 来说，所有的查询条件都是"),a("strong",[t._v("可插拔")]),t._v("的。比如说，我们在查询中，仅对返回结果进行限制:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("GET alice/user/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"match_all"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"from"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  # 从第n条开始\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("   # 返回n条数据\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        分页查询类似于我们SQL中的 limit 语句。在 es 中我们想要实现这样的效果只需要用 "),a("code",[t._v("from")]),t._v(" 指定 从第几条数据开始，"),a("code",[t._v("size")]),t._v("指定返回多少条数据即可。\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210227172604832.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"布尔查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布尔查询"}},[t._v("#")]),t._v(" 布尔查询")]),t._v(" "),a("p",[a("strong",[t._v("must (and)")])]),t._v(" "),a("p",[t._v("        我们上面已经讲过了通过"),a("strong",[t._v("构建查询")]),t._v("的方法去做"),a("strong",[t._v("模糊查询")]),t._v("，那我们如果想多条件查询，例如查询name为"),a("code",[t._v("alice")]),t._v("，并且"),a("code",[t._v("age")]),t._v("是25岁，那该如何查询呢？")]),t._v(" "),a("p",[t._v("        我们通过在 "),a("code",[t._v("bool")]),t._v("属性内使用 "),a("code",[t._v("must")]),t._v(" 来作为查询条件！看结果，是不是 有点像"),a("code",[t._v("and")]),t._v("的感觉，里面的条件需要都满足！")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("GET alice/user/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"bool"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"must"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"match"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"爱丽丝"')]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"match"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"age"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        查询结果如下\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210227233546235.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v(" "),a("strong",[t._v("should (or)")])]),t._v(" "),a("p",[t._v("        那么我要查询"),a("code",[t._v("name")]),t._v("为爱丽丝或 "),a("code",[t._v("age")]),t._v(" 为 25 的呢？")]),t._v(" "),a("p",[t._v("        我们只需要将"),a("code",[t._v("boolean")]),t._v("属性内的"),a("code",[t._v("must")]),t._v("值换成"),a("code",[t._v("should")]),t._v(" 即可，这就有点相当于 "),a("code",[t._v("or")]),t._v(" 的感觉")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("GET alice/user/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"bool"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"should"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"match"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"爱丽丝"')]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"match"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"age"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        查询结果如下")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210227233930974.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v(" "),a("strong",[t._v("must_not (not)")])]),t._v(" "),a("p",[t._v("        那现在我想要查询年龄不是 25  的 数据，只需要将"),a("code",[t._v("boolean")]),t._v("的属性值换成"),a("code",[t._v("must_not")]),t._v("即可")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("GET alice/user/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"bool"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"must_not"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"match"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"age"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        查询结果如下：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210227234637757.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v(" "),a("strong",[t._v("Fitter")])]),t._v(" "),a("p",[t._v("        那如果查询 "),a("code",[t._v("name")]),t._v(" 为爱丽丝，"),a("code",[t._v("age")]),t._v(" 大于 24 的数据，需要使用到"),a("code",[t._v("filter")]),t._v("进行过滤。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("GET alice/user/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"bool"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"must"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"match"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"爱丽丝"')]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"filter"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"range"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"age"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"gt"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        查询结果如下，可以发现只有"),a("code",[t._v("age")]),t._v("为25 和 26的两条数据\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210227235013589.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        这里就用到了 filter 条件过滤查询，过滤条件的范围用 range 表示，其余操作如下 :")]),t._v(" "),a("ul",[a("li",[t._v("gt 表示大于")]),t._v(" "),a("li",[t._v("gte 表示大于等于")]),t._v(" "),a("li",[t._v("lt 表示小于")]),t._v(" "),a("li",[t._v("lte 表示小于等于")])]),t._v(" "),a("p",[t._v("        那现在要查询，例如 age 在24到26之间的数据该如何查询？")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("GET alice/user/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"bool"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"filter"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"range"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"age"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"gte"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lte"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        查询结果：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210227235833857.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"短语检索"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#短语检索"}},[t._v("#")]),t._v(" 短语检索")]),t._v(" "),a("p",[t._v("        为了方便测试，我们再加入几条文档数据：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("PUT /alice/user/"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"大数据老K"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"age"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"desc"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"技术成就自我！"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tags"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"男"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"学习"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"技术"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nPUT /alice/user/"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Python女侠"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"age"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"desc"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"人生苦短，我用Python！"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tags"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"靓女"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"勤奋学习"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"善于交际"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        例如现在需要查询"),a("code",[t._v("tags")]),t._v("中包含“男”的数据")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("GET alice/user/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"match"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tags"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"男"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        查询结果如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210228002257853.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v(" "),a("strong",[t._v("匹配多个标签")])]),t._v(" "),a("p",[t._v("        既然按照标签检索，那么，能不能写多个标签呢?")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("GET alice/user/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"match"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tags"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"男 学习"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        此时我们可以观察返回的结果，可以发现"),a("strong",[t._v("只要满足一个标签")]),t._v("就能返回这个数据了")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210228002712643.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"精确查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#精确查询"}},[t._v("#")]),t._v(" 精确查询")]),t._v(" "),a("p",[a("code",[t._v("term")]),t._v("查询是直接通过倒排索引指定的词条进程精确查找的！")]),t._v(" "),a("p",[a("strong",[t._v("关于分词：")])]),t._v(" "),a("ul",[a("li",[t._v("term ，不经过分词，直接查询精确的值")]),t._v(" "),a("li",[t._v("match，会使用分词器解析！（先分析文档，然后再通过分析的文档进行查询！）")])]),t._v(" "),a("p",[t._v("        说到分词器解析，就不得不提到两种数据类型："),a("code",[t._v("text")]),t._v("和"),a("code",[t._v("keyword")]),t._v("。下面我们就来做个测试：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个索引，并指定类型")]),t._v("\nPUT testdb\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"mappings"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"properties"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"desc"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keyword"')]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插入数据")]),t._v("\nPUT testdb/_doc/"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"爱丽丝学大数据name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"desc"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"爱丽丝学大数据desc"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nPUT testdb/_doc/"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"爱丽丝学大数据name2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"desc"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"爱丽丝学大数据desc2"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        上述中"),a("code",[t._v("testdb")]),t._v("索引中,字段"),a("code",[t._v("name")]),t._v("在被查询时会被分析器进行分析后匹配查询。而属于"),a("code",[t._v("keyword")]),t._v("类型不会被分析器处理。")]),t._v(" "),a("p",[t._v("        我们来验证一下：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("GET _analyze\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"analyzer"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keyword"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"爱丽丝学大数据 name"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        查询结果：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/2021022823502372.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        是不是没有被分析~就是简单的一个字符串啊。再测试一下：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("GET _analyze\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"analyzer"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"standard"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"爱丽丝学大数据 name"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        查询结果：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210228235121821.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        然后我们可以得出结论："),a("strong",[t._v("keyword 字段类型不会被分析器分析")]),t._v("！")]),t._v(" "),a("p",[t._v("        下面我们用前面添加的2条数据做过测试：")]),t._v(" "),a("p",[t._v("        先精准查询"),a("code",[t._v("text")]),t._v("类型的字段")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("GET testdb/_search         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// text 会被分析器分析 查询")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"term"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"爱"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        查询结果，2条数据都能匹配到\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210301002149700.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        然后用"),a("code",[t._v("standard")]),t._v("类型做精准测试")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("GET testdb/_search          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// keyword 不会被分析所以直接查询 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"term"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"desc"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"爱丽丝学大数据desc"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("        查询结果，只有1条数据能匹配到\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210301002226780.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"查找多个精确值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查找多个精确值"}},[t._v("#")]),t._v(" 查找多个精确值")]),t._v(" "),a("p",[t._v("        为了方便测试，我们再添加如下数据：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("PUT testdb/_doc/"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"t1"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"22"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"t2"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2021-03-01"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nPUT testdb/_doc/"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"t1"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"33"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"t2"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2021-03-01"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        然后进行查询")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("GET testdb/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"bool"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"should"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"term"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"t1"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"22"')]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"term"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"t1"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"33"')]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        查询结果：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210301004017561.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        可以发现2条数据也都能查到，证明就算是"),a("code",[t._v("term")]),t._v("精确查询，也能够查询多个值。")]),t._v(" "),a("p",[t._v("        当然，除了 bool 查询之外，下面这种方式也同样是可以的。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("GET testdb/_doc/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"terms"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"t1"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"22"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"33"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        下面要介绍的功能，就是经常被搜索引擎用到的“"),a("strong",[t._v("高亮显示")]),t._v("”！")]),t._v(" "),a("h4",{attrs:{id:"高亮显示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高亮显示"}},[t._v("#")]),t._v(" 高亮显示")]),t._v(" "),a("p",[t._v("        我们可以通过"),a("code",[t._v("highlight")]),t._v("属性，来对我们查询的结果的指定字段做高亮显示！")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("GET alice/user/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"match"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"爱丽丝"')]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"highlight"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"fields"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        观察返回的结果，我们可以发现搜索相关的结果，被加上了高亮标签"),a("code",[t._v("<em>")]),t._v(" "),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210301005856809.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        现在效果看到了，那我们有没有办法"),a("strong",[t._v("自定义样式")]),t._v("呢？")]),t._v(" "),a("p",[t._v("        答案当然是可以的，我们需要在"),a("code",[t._v("pre_tags")]),t._v("中定义标签的前缀，"),a("code",[t._v("post_tags")]),t._v("中定义后缀！")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("GET alice/user/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"match"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"爱丽丝"')]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"highlight"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pre_tags"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"<b class='key' style='color:red'>\"")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"post_tags"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"</b>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"fields"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("        查询结果：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210301010425831.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:""}}),t._v("\n        好了，学到这里，关于elasticsearch 文档的基本操作基本就演示完了。我们来回顾下:")]),t._v(" "),a("ul",[a("li",[t._v("简单匹配")]),t._v(" "),a("li",[t._v("条件匹配")]),t._v(" "),a("li",[t._v("精确匹配")]),t._v(" "),a("li",[t._v("区间范围匹配")]),t._v(" "),a("li",[t._v("匹配字段过滤")]),t._v(" "),a("li",[t._v("多条件查询")]),t._v(" "),a("li",[t._v("高亮查询")])]),t._v(" "),a("p",[t._v("        值得一提的是，"),a("strong",[t._v("这些MySQL也都能做，只是效率较低")]),t._v("！")]),t._v(" "),a("h2",{attrs:{id:"ref"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ref"}},[t._v("#")]),t._v(" Ref")]),t._v(" "),a("blockquote",[a("ol",[a("li",[t._v("https://www.cnblogs.com/jizhong/p/12102100.html")]),t._v(" "),a("li",[t._v("https://www.cnblogs.com/subendong/p/7667558.html")]),t._v(" "),a("li",[t._v("https://blog.csdn.net/Bobdragery/article/details/106842984")]),t._v(" "),a("li",[t._v("https://blog.csdn.net/u014475245/article/details/107184892/")]),t._v(" "),a("li",[t._v("https://www.bilibili.com/video/BV17a4y1x7zq?p=7&spm_id_from=pageDriver")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);
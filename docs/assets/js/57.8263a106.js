(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{449:function(t,s,a){"use strict";a.r(s);var e=a(30),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"即席查询框架presto入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#即席查询框架presto入门"}},[t._v("#")]),t._v(" 即席查询框架Presto入门")]),t._v(" "),a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[a("strong",[t._v("Presto")]),t._v(" 作为现在在企业中流行使用的"),a("strong",[t._v("即席查询")]),t._v("框架，已经在不同的领域得到了越来越多的应用。本期内容，我会从一个初学者的角度，带着大家从 0 到 1 学习 "),a("strong",[t._v("Presto")]),t._v("，希望大家能够有所收获！\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210303224919638.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}}),t._v("\n@[TOC]")]),t._v(" "),a("h2",{attrs:{id:"_1-presto简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-presto简介"}},[t._v("#")]),t._v(" 1. Presto简介")]),t._v(" "),a("h3",{attrs:{id:"_1-1-presto概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-presto概念"}},[t._v("#")]),t._v(" 1. 1 Presto概念")]),t._v(" "),a("p",[a("font",{attrs:{color:"Tomato"}},[t._v("Presto是  Facebook  推出的一个开源的分布式SQL查询引擎，数据规模可以支持GB到PB级，主要应用于处理"),a("strong",[t._v("秒级查询")]),t._v("的场景。")]),t._v("Presto 的设计和编写完全是为了解决像 Facebook 这样规模的商业数据仓库的"),a("strong",[t._v("交互式分析和处理速度")]),t._v("的问题。")],1),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("注意：")]),t._v(" "),a("font",{attrs:{color:"RoyalBlue"}},[a("strong",[t._v("虽然 Presto 可以解析 SQL，但它不是一个标准的数据库。不是 MySQL、Oracle 的代替品，也不能用来处理在线事务（OLTP）")])]),t._v("。")],1)]),t._v(" "),a("h3",{attrs:{id:"_1-2-presto-应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-presto-应用场景"}},[t._v("#")]),t._v(" 1.2 Presto 应用场景")]),t._v(" "),a("p",[t._v("        Presto 支持"),a("strong",[t._v("在线数据查询")]),t._v("，包括 Hive，关系数据库（MySQL、Oracle）以及专有数据存储。一条 Presto 查询可以将"),a("strong",[t._v("多个数据源的数据进行合并，可以跨越整个组织进行分析")]),t._v("。")]),t._v(" "),a("p",[t._v("        Presto 主要用来处理"),a("font",{attrs:{color:"red"}},[t._v(" 响应时间小于 1 秒到几分钟的场景 ")]),t._v("。")],1),t._v(" "),a("h3",{attrs:{id:"_1-3-presto架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-presto架构"}},[t._v("#")]),t._v(" 1.3 Presto架构")]),t._v(" "),a("p",[t._v("        Presto 是一个运行在多台服务器上的分布式系统。完整安装包括一个 "),a("code",[t._v("Coordinator")]),t._v(" 和多 个 "),a("code",[t._v("Worker")]),t._v("。由"),a("strong",[t._v("客户端")]),t._v("提交查询，从 Presto 命令行 CLI 提交到 Coordinator。Coordinator 进行 解析，分析并执行查询计划，然后分发处理队列到 Worker 。\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210303231449284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}}),t._v("\n        Presto 有两类服务器："),a("strong",[t._v("Coordinator")]),t._v(" 和 "),a("strong",[t._v("Worker")])]),t._v(" "),a("p",[t._v("        1) "),a("code",[t._v("Coordinator")])]),t._v(" "),a("p",[a("font",{attrs:{color:"RoyalBlue"}},[a("strong",[t._v("Coordinator 服务器是用来解析语句，执行计划分析和管理 Presto 的 Worker 节点")])]),t._v("。"),a("strong",[t._v("Presto 安装必须有一个 Coordinator 和多个 Worker")]),t._v("。如果用于开发环境和测试，则一个 Presto 实例 可以同时担任这两个角色。")],1),t._v(" "),a("p",[a("font",{attrs:{color:"RoyalBlue"}},[a("strong",[t._v("Coordinator 跟踪每个 Work 的活动情况并协调查询语句的执行")])]),t._v("。"),a("strong",[t._v("Coordinator 为每个查询建立模型")]),t._v("，模型包含多个Stage，每个Stage再转为Task 分发到不同的 Worker 上执行。")],1),t._v(" "),a("p",[t._v("        Coordinator 与 Worker、Client 通信是通过 "),a("strong",[t._v("REST API")]),t._v("。")]),t._v(" "),a("p",[t._v("        2）"),a("code",[t._v("Worker")])]),t._v(" "),a("p",[a("font",{attrs:{color:"\tDarkOrchid"}},[a("strong",[t._v("Worker 是负责执行任务和处理数据")])]),t._v("。Worker 从 Connector 获取数据。Worker 之间会交换中间数据。Coordinator 是负责从 Worker 获取结果并返回最终结果给 Client。")],1),t._v(" "),a("p",[a("font",{attrs:{color:"DarkOrchid"}},[a("strong",[t._v("当 Worker 启动时，会广播自己去发现 Coordinator，并告知 Coordinator 它是可用，随 时可以接受 Task")])]),t._v("。")],1),t._v(" "),a("p",[t._v("        Worker 与 Coordinator、Worker 通信是通过 "),a("strong",[t._v("REST API")]),t._v("。")]),t._v(" "),a("p",[t._v("        3）数据源")]),t._v(" "),a("p",[t._v("        贯穿下文，你会看到一些术语："),a("strong",[t._v("Connector")]),t._v("、"),a("strong",[t._v("Catelog")]),t._v("、"),a("strong",[t._v("Schema")]),t._v(" 和 "),a("strong",[t._v("Table")]),t._v("。这些是 Presto 特定的"),a("strong",[t._v("数据源")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Connector")])])]),t._v(" "),a("p",[a("font",{attrs:{color:"\tTomato"}},[a("strong",[t._v("Connector 是适配器，用于 Presto 和数据源（如 Hive、RDBMS）的连接")])]),t._v("。你可以认为 类似 "),a("code",[t._v("JDBC")]),t._v(" 那样，但却是 Presto 的 SPI 的实现，使用标准的 API 来与不同的数据源交互。")],1),t._v(" "),a("p",[t._v("        Presto 有几个内建 Connector：JMX 的 Connector、System Connector（用于访问内建的 System table）、Hive 的 Connector、TPCH（用于 TPC-H 基准数据）。还有很多第三方的 Connector，所以 "),a("strong",[t._v("Presto 可以访问不同数据源的数据")]),t._v("。")]),t._v(" "),a("p",[a("font",{attrs:{color:"\tTomato"}},[a("strong",[t._v("每个 Catalog 都有一个特定的 Connecto")]),t._v("r")]),t._v("。如果你使用 catelog 配置文件，你会发现每个 文件都必须包含 connector.name 属性，用于指定 catelog 管理器（创建特定的 Connector 使用）。 一个或多个 catelog 用同样的 connector 是访问同样的数据库。例如，你有两个 Hive 集群。 你可以在一个 Presto 集群上配置两个 catelog，两个 catelog 都是用 Hive Connector，从而达 到可以查询两个 Hive 集群。")],1),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Catelog")])])]),t._v(" "),a("p",[a("font",{attrs:{color:"DarkCyan"}},[a("strong",[t._v("一个 Catelog 包含 Schema 和 Connector")])]),t._v(" 。例如，你配置JMX 的 catelog，通过JXM Connector 访问 JXM 信息。当你"),a("strong",[t._v("执行一条 SQL 语句时，可以同时运行在多个 catelog")]),t._v("。")],1),t._v(" "),a("p",[t._v("        Presto 处理 table 时，是通过表的"),a("strong",[t._v("完全限定（fully-qualified）名")]),t._v("来找到 catelog。例如， 一个表的权限定名是 "),a("code",[t._v("hive.test_data.test")]),t._v("，则 "),a("strong",[t._v("test")]),t._v(" 是表名，"),a("strong",[t._v("test_data")]),t._v(" 是 schema，"),a("strong",[t._v("hive")]),t._v(" 是 catelog。")]),t._v(" "),a("p",[t._v("        Catelog 的定义文件是在 Presto 的配置目录中。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Schema")])])]),t._v(" "),a("p",[a("font",{attrs:{color:"\tMediumSeaGreen"}},[a("strong",[t._v("Schema 是用于组织 table")])]),t._v("。把 catelog 和 schema 结合在一起来包含一组的表。当通过Presto 访问 hive 或 Mysq 时，一个 schema 会同时转为 hive 和 mysql 的同等概念。")],1),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Table")])])]),t._v(" "),a("p",[t._v("        Table 跟关系型的表定义一样，但数据和表的映射是交给 Connector。")]),t._v(" "),a("h3",{attrs:{id:"_1-4-presto-数据模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-presto-数据模型"}},[t._v("#")]),t._v(" 1.4 Presto 数据模型")]),t._v(" "),a("p",[t._v("        1）"),a("strong",[t._v("Presto")]),t._v(" 采取三层表结构：")]),t._v(" "),a("p",[a("code",[t._v("Catalog")]),t._v("：对应某一类数据源，例如 Hive 的数据，或 MySql 的数据")]),t._v(" "),a("p",[a("code",[t._v("Schema")]),t._v("：对应 MySql 中的数据库")]),t._v(" "),a("p",[a("code",[t._v("Table")]),t._v("：对应 MySql 中的表")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210303234447546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("&nbsp")]),t._v(" "),a("p",[t._v("       2）"),a("strong",[t._v("Presto")]),t._v(" 的存储单元包括：")]),t._v(" "),a("p",[a("code",[t._v("Page")]),t._v("：多行数据的集合，包含多个列的数据，内部仅提供逻辑行，实际以列式存储。")]),t._v(" "),a("p",[a("code",[t._v("Block")]),t._v("：一列数据，根据不同类型的数据，通常采取不同的编码方式，了解这些编码方式，有助于自己的存储系统对接 presto。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210303234614255.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70#pic_center",alt:"在这里插入图片描述"}}),t._v("\n        3）不同类型的 Block：")]),t._v(" "),a("p",[t._v("        \n        （1）"),a("font",{attrs:{color:"Tomato"}},[a("strong",[t._v("Array 类型 Block，应用于固定宽度的类型")])]),t._v("，例如 int，long，double。block 由两部分组成：")],1),t._v(" "),a("ul",[a("li",[a("code",[t._v("boolean valueIsNull[]")]),t._v(" "),a("strong",[t._v("表示每一行是否有值")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("T values[]")]),t._v(" "),a("strong",[t._v("每一行的具体值")])])]),t._v(" "),a("p",[t._v("        （2）"),a("font",{attrs:{color:"Tomato"}},[a("strong",[t._v("可变宽度的 Block，应用于 String 类数据")])]),t._v("，由三部分信息组成")],1),t._v(" "),a("ul",[a("li",[a("code",[t._v("Slice")]),t._v("：所有行的数据拼接起来的字符串")]),t._v(" "),a("li",[a("code",[t._v("int offsets[]")]),t._v("：每一行数据的起始偏移位置。每一行的长度等于下一行的起始偏移减去当 前行的起始偏移。")]),t._v(" "),a("li",[a("code",[t._v("boolean valueIsNull[]")]),t._v(": 表示某一行是否有值。如果有某一行无值，那么这一行的偏移量 等于上一行的偏移量。")])]),t._v(" "),a("p",[t._v("        （3）"),a("font",{attrs:{color:"Tomato"}},[a("strong",[t._v("固定宽度的 String 类型的 block，所有行的数据拼接成一长串 Slice，每一行的长度固定")])]),t._v("。")],1),t._v(" "),a("p",[t._v("        （4）"),a("font",{attrs:{color:"Tomato"}},[a("strong",[t._v("字典 block：对于某些列，distinct 值较少，适合使用字典保存")])]),t._v("。主要有两部分组成：")],1),t._v(" "),a("p",[a("code",[t._v("字典")]),t._v("，可以是任意一种类型的 block(甚至可以嵌套一个字典 block)，block 中的每一行按照顺序排序编号。")]),t._v(" "),a("p",[a("code",[t._v("int ids[]")]),t._v("表示每一行数据对应的 value 在字典中的编号。在查找时，首先找到某一行的 id， 然后到字典中获取真实的值。")]),t._v(" "),a("h3",{attrs:{id:"_1-5-presto-优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-presto-优缺点"}},[t._v("#")]),t._v(" 1.5 Presto 优缺点")]),t._v(" "),a("p",[t._v("        学习一个新的框架，免不了来探讨一下它的优缺点：")]),t._v(" "),a("p",[t._v("        通过下面一张图，我们来看看 Presto 中 SQL 运行过程："),a("strong",[t._v("MapReduce vs Presto")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210304000146319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70#pic_center",alt:"在这里插入图片描述"}}),t._v("\n        我们可以很明显地感受到，"),a("strong",[a("font",{attrs:{color:"tomato"}},[t._v("Presto 使用内存计算，减少与硬盘交互")])],1)]),t._v(" "),a("h4",{attrs:{id:"_1-5-1-优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-1-优点"}},[t._v("#")]),t._v(" 1.5.1 优点")]),t._v(" "),a("p",[t._v("        1）"),a("font",{attrs:{color:"RoyalBlue"}},[a("strong",[t._v("Presto 与 Hive 对比，都能够处理 PB 级别的海量数据分析，但 Presto 是基于内存运算，减少没必要的硬盘 IO，所以更快")])]),t._v("。")],1),t._v(" "),a("p",[t._v("        2）"),a("font",{attrs:{color:"RoyalBlue"}},[a("strong",[t._v("能够连接多个数据源，跨数据源连表查，如从 Hive 查询大量网站访问记录，然后从 Mysql 中匹配出设备信息")])]),t._v("。")],1),t._v(" "),a("p",[t._v("        3）"),a("font",{attrs:{color:"RoyalBlue"}},[a("strong",[t._v("部署也比 Hive 简单，因为 Hive 是基于 HDFS 的，需要先部署 HDFS")])]),t._v("。")],1),t._v(" "),a("p",[t._v("        找了张对比图，大家感受下：\n        \n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210304000652730.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70#pic_center",alt:"在这里插入图片描述"}})]),t._v(" "),a("h4",{attrs:{id:"_1-5-2-缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-2-缺点"}},[t._v("#")]),t._v(" 1.5.2 缺点")]),t._v(" "),a("p",[t._v("        1）"),a("font",{attrs:{color:"red"}},[a("strong",[t._v("虽然能够处理 PB 级别的海量数据分析，但不是代表 Presto 把 PB 级别都放在内存中计算的")])]),t._v("。而是根据场景，如 "),a("strong",[t._v("count，avg")]),t._v(" 等聚合运算，是"),a("strong",[t._v("边读数据边计算，再清内存，再读数据再计算，这种耗的内存并不高")]),t._v("。但是"),a("strong",[t._v("连表查，就可能产生大量的临时数据，因此速度会变慢，反而 Hive此时会更擅长")]),t._v("。")],1),t._v(" "),a("p",[t._v("        2）为了达到实时查询，可能会想到用它直连 MySql 来操作查询，这效率并不会提升， 瓶颈依然在 MySql，此时还引入网络瓶颈，所以会比原本直接操作数据库要慢。")]),t._v(" "),a("h3",{attrs:{id:"_1-6-presto、impala性能比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-presto、impala性能比较"}},[t._v("#")]),t._v(" 1.6  Presto、Impala性能比较")]),t._v(" "),a("p",[t._v("        Presto 和 Impala这两种典型的"),a("strong",[t._v("内存数据库")]),t._v("之间具体的性能测试比较就不详细展开叙述，感兴趣可以去看这篇链接："),a("a",{attrs:{href:"https://blog.csdn.net/u012551524/article/details/79124532",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.csdn.net/u012551524/article/details/79124532"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("        我就说下总结的结论：")]),t._v(" "),a("blockquote",[a("p",[t._v("他们的共同点就是吃内存，当然在内存充足的情况下，并且有规模适当的集群，性能应该会更可观。并且从几次性能的比较查询来看，"),a("strong",[t._v("Impala性能稍领先于presto，但是presto在数据源支持上非常丰富")]),t._v("，包括hive、图数据库、传统关系型数据库、Redis等")])]),t._v(" "),a("p",[t._v("        大家也可以根据上面的链接，自己也尝试去做下对比测试。")]),t._v(" "),a("h3",{attrs:{id:"_1-7-官网地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-官网地址"}},[t._v("#")]),t._v(" 1.7 官网地址")]),t._v(" "),a("p",[t._v("        就在 2020 年 12 月 27 日，prestosql 与 facebook 正式分裂,并改名为"),a("code",[t._v("trino")]),t._v("。分裂之前和之后的官网分别是："),a("a",{attrs:{href:"https://prestosql.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://prestosql.io/ "),a("OutboundLink")],1),t._v("和 "),a("a",{attrs:{href:"https://trino.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://trino.io"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210308230927511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:"最新的官网"}})]),t._v(" "),a("h3",{attrs:{id:"_1-8-prestodb-vs-prestosql-trino"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-8-prestodb-vs-prestosql-trino"}},[t._v("#")]),t._v(" 1.8 Prestodb VS Prestosql(trino)")]),t._v(" "),a("p",[t._v("        根据目前社区活跃度和使用广泛度,更加推荐 prestosql。具体的区别详见：")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://armsword.com/2020/05/02/the-difference-between-prestodb-and-prestosql/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://armsword.com/2020/05/02/the-difference-between-prestodb-and-prestosql/"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"_2-presto安装部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-presto安装部署"}},[t._v("#")]),t._v(" 2. Presto安装部署")]),t._v(" "),a("h3",{attrs:{id:"_2-1-prestosql-版本的选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-prestosql-版本的选择"}},[t._v("#")]),t._v(" 2.1 prestosql 版本的选择")]),t._v(" "),a("p",[t._v("        在 presto330 版本里已经提到，jdk8 只支持到 2020-03 月发行的版本.详情参考:\n"),a("a",{attrs:{href:"https://prestosql.io/docs/current/release/release-330.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://prestosql.io/docs/current/release/release-330.html"),a("OutboundLink")],1),t._v("。在 2020 年 4 月 8 号 presto 社区发布的 332 版本开始，需要 jdk11 的版本.由于现在基本都使 用的是 jdk8，所以我们选择 presto315 版本的,此版本在 jdk8 的环境下是可用的。如果我们生产环境是 jdk8，但是又想使用新版的 presto，可以为 presto 单独指定 jdk11 也可使用。")]),t._v(" "),a("h3",{attrs:{id:"_2-2-集群安装规划"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-集群安装规划"}},[t._v("#")]),t._v(" 2.2 集群安装规划")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("host")]),t._v(" "),a("th",[t._v("coordinator")]),t._v(" "),a("th",[t._v("worker")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("node01")]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("×")])]),t._v(" "),a("tr",[a("td",[t._v("node02")]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[t._v("node03")]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])])])]),t._v(" "),a("h3",{attrs:{id:"_2-3-presto-server-的安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-presto-server-的安装"}},[t._v("#")]),t._v(" 2.3 Presto Server 的安装")]),t._v(" "),a("p",[t._v("        1、安装包下载地址：")]),t._v(" "),a("blockquote",[a("p",[t._v("https://repo1.maven.org/maven2/io/prestosql/presto-server/315/presto-server-315.tar.gz")])]),t._v(" "),a("p",[t._v("        2、将 "),a("code",[t._v("presto-server-315.tar.gz")]),t._v(" 上传到服务器上,这里导入到 node01 服务器上的 "),a("code",[t._v("/export/software/")]),t._v("目录下，并解压至 "),a("code",[t._v("/export/servers/")]),t._v("目录下：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node01 software"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# tar -zvxf presto-server-315.tar.gz -C /export/servers/")]),t._v("\n")])])]),a("p",[t._v("        3、创建 presto 的数据目录 ( "),a("strong",[t._v("presto 集群的每台机器都要创建")]),t._v(")，用来存储日志这些")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node01 presto-server-315"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mkdir -p /file/data/presto")]),t._v("\n")])])]),a("p",[t._v("        4、在安装目录 /export/servers/presto-server-315 下创建 etc 目录,用来存放各种配置文件")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("node01@node01 presto-server-315"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mkdir etc")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-4-node-properties-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-node-properties-配置"}},[t._v("#")]),t._v(" 2.4 Node Properties 配置")]),t._v(" "),a("p",[t._v("        在 "),a("code",[t._v("/export/servers/presto-server-315/etc")]),t._v(" 路径下,配置 node 属性(注意："),a("strong",[t._v("集群中每台 presto 的 node.id 必须不一样")]),t._v(",后面需要修改集群中其它节点的 node.id 值)")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node01 etc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim node.properties")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#环境名称,自己任取.集群中的所有 Presto 节点必须具有相同的环境名称.")]),t._v("\nnode.environment"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("develop\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#支持字母,数字.对于每个节点,这必须是唯一的.这个标识符应该在重新启动或升级 Presto 时保持一致")]),t._v("\nnode.id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定 presto 的日志和其它数据的存储目录,自己创建前面创建好的数据目录")]),t._v("\nnode.data-dir"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/file/data/presto\n")])])]),a("h3",{attrs:{id:"_2-5-jvm-config-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-jvm-config-配置"}},[t._v("#")]),t._v(" 2.5 JVM Config 配置")]),t._v(" "),a("p",[t._v("        在"),a("code",[t._v("/exports/servers/presto-server-315/etc")]),t._v(" 目录下添加 "),a("strong",[t._v("jvm.config")]),t._v(" 配置文件,并填入如下内容")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#参考官方给的配置,根据自身机器实际内存进行配置")]),t._v("\n-server\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#最大 jvm 内存")]),t._v("\n-Xmx16G\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定 GC 的策略")]),t._v("\n-XX:+UseG1GC\n-XX:G1HeapRegionSize"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("32M\n-XX:+UseGCOverheadLimit\n-XX:+ExplicitGCInvokesConcurrent\n-XX:+HeapDumpOnOutOfMemoryError\n-XX:+ExitOnOutOfMemoryError\n-XX:ReservedCodeCacheSize"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("256M\n")])])]),a("h3",{attrs:{id:"_2-6-config-properties-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-config-properties-配置"}},[t._v("#")]),t._v(" 2.6 Config Properties 配置")]),t._v(" "),a("p",[t._v("        Presto 是由一个 "),a("code",[t._v("coordinator")]),t._v(" 节点和多个 "),a("code",[t._v("worker")]),t._v(" 节点组成。由于在单独一台服务器上配置 coordinator ，有利于提高性能，所以在 node01上配置成 coordinator，在 node02,node03 上配 置为 worker(如果实际机器数量不多的话可以将在协调器上部署 worker.)在 "),a("code",[t._v("/export/servers/presto-server-315/etc")]),t._v("目录下添加 "),a("strong",[t._v("config.properties")]),t._v(" 配置文件")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 该节点是否作为 coordinator,如果是 true 就允许该 Presto 实例充当协调器")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("coordinator")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 允许在协调器上调度工作(即配置 worker 节点).为 false 就是不允许.对于较大的集群,协调器上的处理工作可能会影响查询性能,因为机器的资源无法用于调度,管理和监视查询执行的关键任务")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果需要在协调器所在节点配置 worker 节点改为 true 即可")]),t._v("\nnode-scheduler.include-coordinator"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定 HTTP 服务器的端口.Presto 使用 HTTP 进行所有内部和外部通信")]),t._v("\nhttp-server.http.port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每个查询可以使用的最大分布式内存量")]),t._v("\nquery.max-memory"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("50GB\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询可在任何一台计算机上使用的最大用户内存量")]),t._v("\nquery.max-memory-per-node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1GB\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查询可在任何一台计算机上使用的最大用户和系统内存量，其中系统内存是读取器，写入器和网络缓冲区等在执行期间使用的内存")]),t._v("\nquery.max-total-memory-per-node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("2GB\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# discover-server 是 coordinator 内置的服务,负责监听 worker")]),t._v("\ndiscovery-server.enabled"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 发现服务器的 URI.因为已经在 Presto 协调器中启用了 discovery,所以这应该是 Presto 协调器的 URI")]),t._v("\ndiscovery.uri"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http://node01:8080\n")])])]),a("h3",{attrs:{id:"_2-7-log-properties-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-log-properties-配置"}},[t._v("#")]),t._v(" 2.7 Log Properties 配置")]),t._v(" "),a("p",[t._v("        日志配置文件："),a("code",[t._v("etc/log.properties")]),t._v("。类似Java的日志级别，包括 "),a("code",[t._v("INFO")]),t._v("、"),a("code",[t._v("DEBUG")]),t._v("、"),a("code",[t._v("ERROR")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("com.facebook.presto"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("INFO\n")])])]),a("h3",{attrs:{id:"_2-8-catalog-properties-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-catalog-properties-配置"}},[t._v("#")]),t._v(" 2.8 Catalog Properties 配置")]),t._v(" "),a("p",[t._v("        Presto 可以支持多个数据源，在 Presto 里面叫 catalog，这里以配置支持 Hive 的数据源为例，配置一个 Hive 的 catalog ：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在 etc 目录下创建 catalog 目录 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node01 etc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mkdir catalog")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Hive 的 catalog:")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node01 catalog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim hive.properties")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#代表 hadoop2 代版本,并不是单单指 hadoop2.x 的版本,而是 hadoop 第二代.固定写法")]),t._v("\nconnector.name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("node02\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定 hive 的 metastore 的地址(hive 必须启用 metastore)")]),t._v("\nhive.metastore.uri"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("thrift://node01:9083\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果 hdfs 是高可用必须增加这个配置.如果不是高可用,可省略.如果 Presto 所在的节点>没 有安装 Hadoop,需要从其它 hadoop 节点复制这些文件到 Presto 的节点")]),t._v("\nhive.config.resources"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/export/servers/hadoop-2.6.0-cdh5.14.0/etc/hadoop/core-site.xml, /export/servers/hadoop-2.6.0-cdh5.14.0/etc/hadoop/hdfs-site.xml\nhive.allow-drop-table"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\nhive.storage-format"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ORC\nhive.metastore-cache-ttl"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1s\nhive.metastore-refresh-interval"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1s\nhive.metastore-timeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("35m\nhive.max-partitions-per-writers"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-9-分发安装目录到集群中其它节点上"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-9-分发安装目录到集群中其它节点上"}},[t._v("#")]),t._v(" 2.9 分发安装目录到集群中其它节点上")]),t._v(" "),a("p",[t._v("        将 node01 上配置好的 presto 安装包分发到集群中的其它节点(这里使用的是自己写的分发脚本)")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node01 servers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# xsync script /export/servers/presto-server-315/")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-10-修改-node-id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-10-修改-node-id"}},[t._v("#")]),t._v(" 2.10 修改 node.id")]),t._v(" "),a("p",[t._v("        修改 node02 和 node03 机器上 "),a("strong",[t._v("node.properties")]),t._v(" 配置文件中的 "),a("strong",[t._v("node.id")]),t._v(" (因为每台机器 node.id 必须要不一样)")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node02 etc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim node.properties ")]),t._v("\nnode.id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node03 etc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim node.properties ")]),t._v("\nnode.id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-11-修改-work-节点的配置信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-11-修改-work-节点的配置信息"}},[t._v("#")]),t._v(" 2.11 修改 work 节点的配置信息")]),t._v(" "),a("p",[t._v("        修改 worker 节点(即 linux122 和 linux123 机器)上的 "),a("strong",[t._v("config.properties")]),t._v(" 配置文件里面的配置内容与 "),a("strong",[t._v("coordinator")]),t._v(" 所在的节点是不一样的")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#该节点是否作为 coordinator,因为是 worker 节点,这里是 false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("coordinator")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#访问端口,可以自己指定")]),t._v("\nhttp-server.http.port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#每个查询可以使用的最大分布式内存量")]),t._v("\nquery.max-memory"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("50GB\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询可在任何一台计算机上使用的最大用户内存量")]),t._v("\nquery.max-memory-per-node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1GB\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询可在任何一台计算机上使用的最大用户和系统内存量，其中系统内存是读取器，写 入器和网络缓冲区等在执行期间使用的内存")]),t._v("\nquery.max-total-memory-per-node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("2GB\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定 discovery-server 的地址,这样 worker 才能找到它.与上面的端口须一致")]),t._v("\ndiscovery.uri"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http://node01:8080\n")])])]),a("h3",{attrs:{id:"_2-12-启动服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-12-启动服务"}},[t._v("#")]),t._v(" 2.12 启动服务")]),t._v(" "),a("p",[t._v("        启动脚本在安装目录的"),a("code",[t._v("bin/launcher")]),t._v("目录下，我们可以使用如下命令作为一个后台进程启动：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("bin/launcher start\n")])])]),a("p",[t._v("        另外，也可以用在前台启动的方式运行，日志和目录输出将会写入到 "),a("code",[t._v("stdout/stderr")]),t._v("（可以使用类似"),a("code",[t._v("daemontools")]),t._v("的工具捕捉这两个数据流）")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("bin/launcher run\n")])])]),a("p",[t._v("        启动完之后，日志将会写在"),a("code",[t._v("var/log")]),t._v("目录下，该目录下有如下文件：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("launcher.log")]),t._v("：这个日志文件由 "),a("strong",[t._v("launcher")]),t._v(" 创建，并且server的stdout和stderr都被重定向到了这个日志文件中。这份日志文件中只会有很少的信息，包括：")])]),t._v(" "),a("p",[t._v("        在server日志系统初始化的时候产生的日志和JVM产生的诊断和测试信息。")]),t._v(" "),a("p",[a("code",[t._v("server.log")]),t._v("：这个是 Presto 使用的主要日志文件。一般情况下，该文件中将会包括"),a("strong",[t._v("server初始化失败时产生的相关信息")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("http-request.log")]),t._v("： 这是"),a("strong",[t._v("HTTP请求的日志文件")]),t._v("，包括server收到的每个HTTP请求信息。")]),t._v(" "),a("p",[t._v("        启动成功之后，我们可以通过"),a("code",[t._v("jps")]),t._v("查看到多了一个 PrestoServer 的进程。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node01 etc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# jps")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6051")]),t._v(" PrestoServer\n")])])]),a("p",[t._v("        此时我们就可以通过"),a("code",[t._v("ip:端口")]),t._v("的方式访问到 presto 的 "),a("strong",[t._v("webui")]),t._v(" 界面。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210308234248293.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}}),t._v("\n        关于 "),a("code",[t._v("webui")]),t._v(" 中"),a("strong",[t._v("各项指标的含义")]),t._v("，我整理了2张图，大家可以借鉴一下")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210312160025787.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210312161811830.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}}),t._v("\n        另外，关于 Stage，Task 阶段的各参数指标含义，就不细讲了，更多内容详情见官网....")]),t._v(" "),a("h2",{attrs:{id:"_3、presto-命令行-client-的安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、presto-命令行-client-的安装"}},[t._v("#")]),t._v(" 3、Presto 命令行 Client 的安装")]),t._v(" "),a("p",[t._v("        Presto 的 命令行 Client 下载步骤也很简单：")]),t._v(" "),a("p",[t._v("        1、下载 Presto 的客户端（下载 presto 对应的版本）👉"),a("a",{attrs:{href:"https://repo1.maven.org/maven2/io/prestosql/presto-cli/315/presto-cli-315-executable.jar",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://repo1.maven.org/maven2/io/prestosql/presto-cli/315/presto-cli-315-executable.jar"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("        2、将 "),a("code",[t._v("presto-cli-315-executable.jar")]),t._v(" 上传至服务器,放在 node01 的 "),a("code",[t._v("/export/servers/presto-server- 315/bin")]),t._v(" 目录下")]),t._v(" "),a("p",[t._v("        3、为方便使用，修改 jar 包名称为 presto")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node01 bin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" presto-cli-315-executable.jar presto\n")])])]),a("p",[t._v("        4. 给文件增加执行权限")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node01 bin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# chmod +x presto")]),t._v("\n")])])]),a("h2",{attrs:{id:"_4、presto-的基本使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、presto-的基本使用"}},[t._v("#")]),t._v(" 4、Presto 的基本使用")]),t._v(" "),a("p",[t._v("        1、 启动 presto 客户端并选择连接的数据源(这里以 hive 为例)")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node01 bin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ ./presto "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" \n--server node01:8080 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" \n--catalog hive "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("可选"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n--schema "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("可选"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n--user xiaobai "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("可选"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("说明")]),t._v(":\n--  server 指定的是 "),a("code",[t._v("coordinator")]),t._v(" 的地址\n-- catalog 指定的是"),a("strong",[t._v("连接的数据源")]),t._v(".(跟配置文件里面的名称一致)\n-- schema 指定的是"),a("strong",[t._v("连接哪个数据库")]),t._v(",这里是 test 数据库\n-- user 指定的是"),a("strong",[t._v("连接使用哪个用户")]),t._v(",这里是xiaobai")]),t._v(" "),a("p",[t._v("        2、Presto 命令行操作")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看所有的数据库 ")]),t._v("\npresto:test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" show schemas"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看某个库下的所有表 ")]),t._v("\npresto:test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" show tables"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看一条 sql 查询(6 亿多条数据比 hive 快很多) ")]),t._v("\npresto:test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" from test.test_hive"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n_col0 \n----------- \n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("620756992")]),t._v("\n")])])]),a("h2",{attrs:{id:"_5、presto可视化客户端的安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、presto可视化客户端的安装"}},[t._v("#")]),t._v(" 5、Presto可视化客户端的安装")]),t._v(" "),a("p",[t._v("        Presto 可视化客户端有多种，这里我们选择使用 "),a("code",[t._v("yanagishima-20.0")]),t._v(" 版本")]),t._v(" "),a("blockquote",[a("p",[t._v("本篇文章中谈到的"),a("strong",[t._v("所有")]),t._v("安装包资源，在公众号【大数据梦想家】后台回复 “presto”即可获得！")])]),t._v(" "),a("ul",[a("li",[t._v("1、将 yanagishima-20.0.zip 安装包上传至 linux121 服务器上")]),t._v(" "),a("li",[t._v("2、解压 yanagishima-20.0.zip 安装包")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node01 software"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# unzip yanagishima-20.0.zip -d /export/servers/")]),t._v("\n")])])]),a("ul",[a("li",[t._v("3、.进入到 "),a("code",[t._v("/opt/servers/yanagishima-20.0/conf/")]),t._v("目录下,修改 "),a("strong",[t._v("yanagishima.properties")]),t._v(" 配置文件")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定 jetty 的端口,类似 tomcat 的 web 容器的一个组件")]),t._v("\njetty.port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7788")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定数据源")]),t._v("\npresto.datasources"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("presto_test\npresto.coordinator.server.presto_test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http://node01:8080\ncatalog.presto_test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("hive\nschema.presto_test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ods\nsql.query.engines"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("presto\n")])])]),a("ul",[a("li",[t._v("4、启动 yanagishima")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node01 yanagishima-20.0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# nohup bin/yanagishima-start.sh 1>/dev/null 2>&1 &")]),t._v("\n")])])]),a("ul",[a("li",[t._v("5、webUI访问界面")])]),t._v(" "),a("p",[t._v("        通过"),a("code",[t._v("http://node01:7788/")]),t._v("，即可查询到相关信息")]),t._v(" "),a("ul",[a("li",[t._v("6、查看 Presto 表结构，如下图所示：")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210313222843492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("        在“Treeview”页面下可以查看所有表的结构，包括"),a("code",[t._v("Schema")]),t._v("，"),a("code",[t._v("Table")]),t._v("，"),a("code",[t._v("Column")]),t._v("等。")]),t._v(" "),a("p",[t._v("        比如，执行"),a("code",[t._v('SELECT * FROM hive.company."action" LIMIT 100')])]),t._v(" "),a("p",[t._v("        每张表后面都有一个复制图标，单击此图标可以复制完整的表名，然后在上面的文本框中输入 SQL 语句 即可，如图所示：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210313222946672.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}}),t._v("\n        还可以查询列表中其他的表格，比如，想要执行现在已经写好了的SQL语句，"),a("code",[t._v('SELECT * FROM hive.company."demo01" LIMIT 100')]),t._v("，按"),a("code",[t._v("Ctrl + Enter")]),t._v("组合键显示"),a("strong",[t._v("查询结果")]),t._v("，如图所示：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210313223146337.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}}),t._v("\n        当然，我们也可以通过"),a("code",[t._v("Query List")]),t._v("模块查询我们执行过的SQL详细信息，包括"),a("code",[t._v("State")]),t._v("，"),a("code",[t._v("query ID")]),t._v("，"),a("code",[t._v("Elapsed")]),t._v("，"),a("code",[t._v("Query")]),t._v("，"),a("code",[t._v("Source")]),t._v("，"),a("code",[t._v("User")]),t._v("....")]),t._v(" "),a("p",[t._v("        更多使用，就不一一剧透介绍，小伙伴们可以自行去研究~")]),t._v(" "),a("h2",{attrs:{id:"_6、presto的优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、presto的优化"}},[t._v("#")]),t._v(" 6、Presto的优化")]),t._v(" "),a("p",[t._v("        Presto 的优化是一个非常有水平的问题，大致总结下，分如下几个类别：")]),t._v(" "),a("h3",{attrs:{id:"_6-1-数据存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-数据存储"}},[t._v("#")]),t._v(" 6.1 数据存储")]),t._v(" "),a("p",[t._v("        想要使用 Presto 更高效地查询数据，需要在数据存储方面利用一些优化手段。")]),t._v(" "),a("h4",{attrs:{id:"_6-1-1-合理设置分区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-1-合理设置分区"}},[t._v("#")]),t._v(" 6.1.1 合理设置分区")]),t._v(" "),a("p",[t._v("        与 Hive 类似，Presto 会根据元数据信息读取分区数据，"),a("strong",[t._v("合理地设置分区")]),t._v("能减少 Presto 数据读取量，提升查询性能。")]),t._v(" "),a("h4",{attrs:{id:"_6-1-2-使用-orc-格式存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-2-使用-orc-格式存储"}},[t._v("#")]),t._v(" 6.1.2 使用 ORC 格式存储")]),t._v(" "),a("p",[t._v("        Presto 对 ORC文件 读取进行了特定优化，因此，"),a("strong",[t._v("在 Hive 中创建 Presto 使用的表时，建议采用 ORC 格式存储")]),t._v("。相对于 Parquet 格式，Presto 对 ORC 格式支持得更好。")]),t._v(" "),a("h4",{attrs:{id:"_6-1-3-使用压缩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-3-使用压缩"}},[t._v("#")]),t._v(" 6.1.3 使用压缩")]),t._v(" "),a("p",[a("strong",[t._v("数据压缩可以减少节点间数据传输对 IO 带宽的压力")]),t._v("，对于即席查询需要快速解压，建议采用 "),a("code",[t._v("Snappy")]),t._v("压缩。")]),t._v(" "),a("h4",{attrs:{id:"_6-1-4-预先排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-4-预先排序"}},[t._v("#")]),t._v(" 6.1.4 预先排序")]),t._v(" "),a("p",[t._v("        对于已经排序的数据，在查询的数据过滤阶段，ORC格式支持跳过读取不必要的数据。比如对于经常需要过滤的字段可以预先排序。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" nation_orc "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("partition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" nation SORT "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" n_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("        如果需要过滤 n_name 字段，则性能将提升。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" nation_orc "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" n_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("’AUSTRALIA’"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_6-2-sql查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-sql查询"}},[t._v("#")]),t._v(" 6.2 SQL查询")]),t._v(" "),a("p",[t._v("        想要使用 "),a("code",[t._v("Presto")]),t._v("更高效地查询数据，需要在编写查询SQL语句方面利用一些优化手段。")]),t._v(" "),a("h4",{attrs:{id:"_6-2-1-只选择需要的字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-1-只选择需要的字段"}},[t._v("#")]),t._v(" 6.2.1 只选择需要的字段")]),t._v(" "),a("p",[t._v("        由于采用列式存储，所以"),a("strong",[t._v("只选择需要的字段可加快字段的读取速度，减少数据量")]),t._v("。避免采用 * 读取所有字段。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("GOOD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": SELECT time,user,host FROM tbl\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("BAD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":  SELECT * FROM tbl\n")])])]),a("h4",{attrs:{id:"_6-2-2-过滤条件必须加上分区字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-2-过滤条件必须加上分区字段"}},[t._v("#")]),t._v(" 6.2.2 过滤条件必须加上分区字段")]),t._v(" "),a("p",[a("strong",[t._v("对于有分区的表，where语句中优先使用分区字段进行过滤")]),t._v("。acct_day 是分区字段，visit_time 是具体访问时间。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("GOOD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("host "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" tbl "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" acct_day"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20171101")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("BAD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" tbl "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" visit_time"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20171101")]),t._v("\n")])])]),a("h4",{attrs:{id:"_6-2-3-group-by语句优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-3-group-by语句优化"}},[t._v("#")]),t._v(" 6.2.3 Group By语句优化")]),t._v(" "),a("p",[t._v("        合理安排 "),a("code",[t._v("Group by")]),t._v("语句中"),a("strong",[t._v("字段顺序对性能有一定提升")]),t._v("。将 Group By 语句中字段按照每个字段 distinct 数据多少进行降序排列。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("GOOD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" uid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gender\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("BAD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" gender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uid\n")])])]),a("h4",{attrs:{id:"_6-2-4-order-by时使用limit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-4-order-by时使用limit"}},[t._v("#")]),t._v(" 6.2.4 Order by时使用Limit")]),t._v(" "),a("p",[t._v("        Order by 需要扫描数据到单个 worker 节点进行排序，导致单个worker需要大量内存。"),a("strong",[t._v("如果是查询 Top N 或者 Bottom N，使用 limit 可减少排序计算和内存压力")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("GOOD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" tbl "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("time")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LIMIT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("BAD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" tbl "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("time")]),t._v("\n")])])]),a("h4",{attrs:{id:"_6-2-5-使用近似聚合函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-5-使用近似聚合函数"}},[t._v("#")]),t._v(" 6.2.5 使用近似聚合函数")]),t._v(" "),a("p",[t._v("        Presto有一些近似聚合函数，对于"),a("strong",[t._v("允许有少量误差")]),t._v("的查询场景，使用这些函数"),a("strong",[t._v("对查询性能有大幅提升")]),t._v("。比如使用"),a("code",[t._v("approx_distinct()")]),t._v("函数比"),a("code",[t._v("Count(distinct x)")]),t._v("有大概2.3%的误差。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" approx_distinct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" access\n")])])]),a("h4",{attrs:{id:"_6-2-6-用regexp-like代替多个like语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-6-用regexp-like代替多个like语句"}},[t._v("#")]),t._v(" 6.2.6 用regexp_like代替多个like语句")]),t._v(" "),a("p",[t._v("        Presto查询优化器没有对多个 "),a("code",[t._v("like")]),t._v(" 语句进行优化，使用"),a("code",[t._v("regexp_like")]),t._v("对性能有较大提升。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("GOOD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("\n  access\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("\n  regexp_like"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET|POST|PUT|DELETE'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("BAD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("\n  access\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("\n  method "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%GET%'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("OR")]),t._v("\n  method "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%POST%'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("OR")]),t._v("\n  method "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%PUT%'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("OR")]),t._v("\n  method "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%DELETE%'")]),t._v("\n")])])]),a("h4",{attrs:{id:"_6-2-7-使用join语句时将大表放在左边"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-7-使用join语句时将大表放在左边"}},[t._v("#")]),t._v(" 6.2.7 使用Join语句时将大表放在左边")]),t._v(" "),a("p",[t._v("        Presto中 join 的默认算法是"),a("code",[t._v("broadcast join")]),t._v("，即将 join 左边的表分割到多个 worker ，然后将join 右边的表数据整个复制一份发送到每个worker进行计算。如果右边的表数据量太大，则可能会报内存溢出错误。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("GOOD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" large_table l "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" small_table s "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("BAD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" small_table s "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" large_table l "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n")])])]),a("h4",{attrs:{id:"_6-2-8-使用rank函数代替row-number函数来获取top-n"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-8-使用rank函数代替row-number函数来获取top-n"}},[t._v("#")]),t._v(" 6.2.8 使用Rank函数代替row_number函数来获取Top N")]),t._v(" "),a("p",[t._v("        在进行一些分组排序场景时，使用rank函数性能更好")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("GOOD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" checksum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rnk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" rank"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OVER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PARTITION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" l_orderkey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" l_partkey "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" l_shipdate "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DESC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" rnk\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" lineitem\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" t\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" rnk "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("BAD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" checksum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rnk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" row_number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OVER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PARTITION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" l_orderkey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" l_partkey "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" l_shipdate "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DESC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" rnk\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" lineitem\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" t\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" rnk "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("h3",{attrs:{id:"_6-3-注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-注意事项"}},[t._v("#")]),t._v(" 6.3 注意事项")]),t._v(" "),a("p",[a("code",[t._v("ORC")]),t._v("和"),a("code",[t._v("Parquet")]),t._v(" 都支持"),a("strong",[t._v("列式存储")]),t._v("，但是"),a("strong",[t._v("ORC对Presto支持更好")]),t._v("（Parquet对Impala支持更好）")]),t._v(" "),a("p",[t._v("        对于列式存储而言，存储文件为二进制的，对于经常增删字段的表，建议不要使用列式存储（修改文件元数据代价大）。对比数据仓库，"),a("strong",[t._v("dwd层建议不要使用ORC，而dm层则建议使用")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"_6-4-可能会踩的坑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-可能会踩的坑"}},[t._v("#")]),t._v(" 6.4 可能会踩的坑")]),t._v(" "),a("p",[t._v("        使用 Presto 需要注意如下几点：")]),t._v(" "),a("blockquote",[a("p",[t._v("引用：https://segmentfault.com/a/1190000013120454?utm_source=tag-newest")])]),t._v(" "),a("h4",{attrs:{id:"_6-4-1-如何加快在presto上的数据统计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-1-如何加快在presto上的数据统计"}},[t._v("#")]),t._v(" 6.4.1 如何加快在Presto上的数据统计")]),t._v(" "),a("p",[t._v("        很多的时候，在Presto上对数据库跨库查询，例如Mysql数据库。这个时候Presto的做法是从MySQL数据库端拉取最基本的数据，然后再去做进一步的处理，例如统计等聚合操作。")]),t._v(" "),a("p",[t._v("        举个例子：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("SELECT count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" FROM table_1 WHERE "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("condition")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("        上面的SQL语句会分为3个步骤进行：")]),t._v(" "),a("p",[t._v("        （1）Presto发起到Mysql数据库进行查询")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" table_1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" condition"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("        （2）对结果进行count计算")]),t._v(" "),a("p",[t._v("        （3）返回结果")]),t._v(" "),a("p",[t._v("        所以说，对于Presto来说，其跨库查询的瓶颈是在数据拉取这个步骤。若要提高数据统计的速度，可考虑"),a("strong",[t._v("把 Mysql 中相关的数据表定期转移到HDFS中，并转存为高效的列式存储格式ORC")]),t._v("。")]),t._v(" "),a("p",[t._v("        所以定时归档是一个很好的选择，这里还要注意，在归档的时候我们要选择一个归档字段，如果是按日归档，我们可以用日期作为这个字段的值，采用"),a("code",[t._v("yyyyMMdd")]),t._v("的形式，例如"),a("code",[t._v("20180123")]),t._v(".")]),t._v(" "),a("p",[t._v("        一般创建归档数据库的SQL语句如下：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" table_1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\nid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTEGER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\npartition_date "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTEGER")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WITH")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" format "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ORC'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" partitioned_by "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ARRAY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'partition_date'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("        查看创建的库结构：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("SHOW CREATE TABLE table_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" /*Only Presto*/\n")])])]),a("p",[t._v("        带有分区的表创建完成之后，每天只要更新分区字段"),a("code",[t._v("partition_date")]),t._v("就可以了，聪明的Presto 就能将数据放置到规划好的分区了。")]),t._v(" "),a("p",[t._v("        如果要查看一个数据表的分区字段是什么，可以下面的语句：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" PARTITIONS "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" table_1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*Only Presto*/")]),t._v("\n")])])]),a("h4",{attrs:{id:"_6-4-2-查询条件中尽量带上分区字段进行过滤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-2-查询条件中尽量带上分区字段进行过滤"}},[t._v("#")]),t._v(" 6.4.2 查询条件中尽量带上分区字段进行过滤")]),t._v(" "),a("p",[t._v("        如果数据被规当到 HDFS 中，并带有分区字段。在每次查询归档表的时候，要带上分区字段作为过滤条件，这样可以加快查询速度。因为"),a("strong",[t._v("有了分区字段作为查询条件，就能帮助Presto避免全区扫描，减少Presto需要扫描的HDFS的文件数")]),t._v("。")]),t._v(" "),a("h4",{attrs:{id:"_6-4-3-多多使用-with-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-3-多多使用-with-语句"}},[t._v("#")]),t._v(" 6.4.3 多多使用 WITH 语句")]),t._v(" "),a("p",[t._v("        使用 Presto 分析统计数据时，可考虑把多次查询合并为一次查询，用 Presto 提供的子查询完成。")]),t._v(" "),a("p",[t._v("        这点和我们熟知的MySQL的使用不是很一样。")]),t._v(" "),a("p",[t._v("        例如：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WITH")]),t._v(" subquery_1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" a1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a3 \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Table_1 \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" a3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("between")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20180101")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20180131")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*子查询subquery_1,注意：多个子查询需要用逗号分隔*/")]),t._v("\nsubquery_2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" b1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b3\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Table_2\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" b3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("between")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20180101")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20180131")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*最后一个子查询后不要带逗号，不然会报错。*/")]),t._v("        \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" \n    subquery_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" subquery_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    subquery_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" subquery_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b2\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" subquery_1\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" subquery_2\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" subquery_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" subquery_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"_6-4-4-利用子查询-减少读表的次数-尤其是大数据量的表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-4-利用子查询-减少读表的次数-尤其是大数据量的表"}},[t._v("#")]),t._v(" 6.4.4 利用子查询，减少读表的次数，尤其是大数据量的表")]),t._v(" "),a("p",[t._v("        具体做法是，将使用频繁的表作为一个子查询抽离出来，避免多次 read。")]),t._v(" "),a("h4",{attrs:{id:"_6-4-5-只查询需要的字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-5-只查询需要的字段"}},[t._v("#")]),t._v(" 6.4.5 只查询需要的字段")]),t._v(" "),a("p",[t._v("        一定要避免在查询中使用 SELECT * 这样的语句，就像只有告诉我们需要查询数据越具体，工作效率越高。")]),t._v(" "),a("p",[t._v("        对于我们的数据库而言也是这样，任务越明确，工作效率越高。")]),t._v(" "),a("p",[t._v("        对于要查询全部字段的需求也是这样，没有偷懒的捷径，把它们都写出来。")]),t._v(" "),a("h4",{attrs:{id:"_6-4-6-join查询优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-6-join查询优化"}},[t._v("#")]),t._v(" 6.4.6 Join查询优化")]),t._v(" "),a("p",[t._v("        Join左边尽量放小数据量的表，而且最好是重复关联键少的表。")]),t._v(" "),a("h4",{attrs:{id:"_6-4-7-字段名引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-7-字段名引用"}},[t._v("#")]),t._v(" 6.4.7 字段名引用")]),t._v(" "),a("p",[t._v("        避免字段名与关键字冲突：MySQL对于关键字冲突的字段名加"),a("strong",[t._v("反引号")]),t._v("，Presto 对与关键字冲突的字段名加"),a("strong",[t._v("双引号")]),t._v("。当然，如果字段名不与关键字冲突，则可以不加双引号。")]),t._v(" "),a("h4",{attrs:{id:"_6-4-8-时间函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-8-时间函数"}},[t._v("#")]),t._v(" 6.4.8 时间函数")]),t._v(" "),a("p",[t._v("        对于 "),a("code",[t._v("timestamp")]),t._v("，需要进行比较的时候，需要添加 "),a("code",[t._v("timestamp")]),t._v(" 关键字，而 MySQL 中对 "),a("code",[t._v("timestamp")]),t._v(" 可以直接进行比较。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*MySQL的写法*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2017-01-01 00:00:00'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*Presto中的写法*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("timestamp")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2017-01-01 00:00:00'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"_6-4-9-md5-函数的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-9-md5-函数的使用"}},[t._v("#")]),t._v(" 6.4.9 MD5 函数的使用")]),t._v(" "),a("p",[t._v("        Presto 中 MD5 函数传入的 是 "),a("code",[t._v("binary")]),t._v(" 类型，返回的也是"),a("code",[t._v("binary")]),t._v("类型，要对字符串进行 "),a("code",[t._v("MD5")]),t._v("操作时，需要转换：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" to_hex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("md5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to_utf8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1212'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"_6-4-10-不支持-insert-overwrite-语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-10-不支持-insert-overwrite-语法"}},[t._v("#")]),t._v(" 6.4.10 不支持 INSERT OVERWRITE 语法")]),t._v(" "),a("p",[t._v("        Presto中不支持 "),a("code",[t._v("insert overwrite")]),t._v("语法，只能先"),a("code",[t._v("delete")]),t._v("，然后"),a("code",[t._v("insert into")])]),t._v(" "),a("h4",{attrs:{id:"_6-4-11-orc-格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-11-orc-格式"}},[t._v("#")]),t._v(" 6.4.11 ORC 格式")]),t._v(" "),a("p",[a("strong",[t._v("Presto 中对 ORC 文件格式进行了针对性优化，但在 impala 中目前不支持ORC格式的表，hive中支持 ORC 格式的表，所以想用列式存储的时候可以优先考虑ORC格式")])]),t._v(" "),a("h4",{attrs:{id:"_6-4-12-parquet-格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-12-parquet-格式"}},[t._v("#")]),t._v(" 6.4.12 PARQUET 格式")]),t._v(" "),a("p",[t._v("         Presto 目前支持 parquet 格式，支持查询，但不支持 "),a("code",[t._v("insert")])]),t._v(" "),a("h2",{attrs:{id:"巨人的肩膀"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#巨人的肩膀"}},[t._v("#")]),t._v(" 巨人的肩膀")]),t._v(" "),a("blockquote",[a("p",[t._v("1、《大数据分析数据仓库项目实战》\n2、《大数据技术实战》\n3、《大数据私房菜_Presto的安装和使用》\n4、 《impala与Presto的性能比较》https://blog.csdn.net/u012551524/article/details/79124532\n5、《Presto踩坑指南》https://segmentfault.com/a/1190000013120454?utm_source=tag-newest")])]),t._v(" "),a("h2",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("        本篇内容为大家介绍的是关于从 0 到 1 学习 Presto 的过程，内容算是比较的完整！包括从"),a("strong",[t._v("Presto的简介")]),t._v("，"),a("strong",[t._v("安装部署")]),t._v("，"),a("strong",[t._v("命令行 Client 的安装")]),t._v("，"),a("strong",[t._v("基本使用")]),t._v("，"),a("strong",[t._v("可视化客户端的安装与基本使用")]),t._v("，以及使用任何一个组件我们都很注重的"),a("strong",[t._v("优化")]),t._v(" ...... 希望大家看完之后能够有所收获！"),a("font",{attrs:{color:"RoyalBlue"}},[a("strong",[t._v("你知道的越多，你不知道的也越多")])]),t._v("，我是大数据梦想家，我们下一期见！")],1),t._v(" "),a("h2",{attrs:{id:"彩蛋"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#彩蛋"}},[t._v("#")]),t._v(" 彩蛋")]),t._v(" "),a("p",[t._v("        我在经历了太多技术群沦落为广告群，水文群，聊天群之后，立志打造一个真正的技术交流社区，于是和我现在的管理成立了「大数据梦想家」技术交流群，希望有更多热爱并渴望学习大数据技术的小伙伴加入到我们的队伍。以下是部分群规，群里设置有"),a("strong",[t._v("严格的制度")]),t._v("以及"),a("strong",[t._v("不错的福利制度")]),t._v("。\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/2021030800371162.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}}),t._v("\n        这是我整理的福利资料，🚀"),a("a",{attrs:{href:"https://shimo.im/docs/C8Y6Jjtw9ryRpVJH",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://shimo.im/docs/C8Y6Jjtw9ryRpVJH"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("        想了解更多信息，可以加入我们的学习群，可以关注"),a("strong",[t._v("下方公众号")]),t._v("，后台回复“"),a("strong",[t._v("加群")]),t._v("”即可。\n        \n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210314112543633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDMxODgzMA==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})])])}),[],!1,null,null,null);s.default=r.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{519:function(a,e,_){"use strict";_.r(e);var t=_(30),v=Object(t.a)({},(function(){var a=this,e=a.$createElement,_=a._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[_("h1",{attrs:{id:"《大数据技术原理与应用》阅读笔记"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#《大数据技术原理与应用》阅读笔记"}},[a._v("#")]),a._v(" 《大数据技术原理与应用》阅读笔记")]),a._v(" "),_("h2",{attrs:{id:"第1章-大数据概述"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第1章-大数据概述"}},[a._v("#")]),a._v(" 第1章 大数据概述")]),a._v(" "),_("h3",{attrs:{id:"_1-2-大数据的概念"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-大数据的概念"}},[a._v("#")]),a._v(" 1.2 大数据的概念")]),a._v(" "),_("p",[a._v("大数据特点概括为4V：数据量大（Volume）、数据类型繁多（Variety）、处理速度快（Velocity）和价值密度低（Value）")]),a._v(" "),_("h3",{attrs:{id:"_1-5-大数据关键技术"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-大数据关键技术"}},[a._v("#")]),a._v(" 1.5 大数据关键技术")]),a._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211111162657.png",alt:"大数据技术的不同层面及其功能"}})]),a._v(" "),_("h3",{attrs:{id:"_1-6-大数据计算模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-大数据计算模式"}},[a._v("#")]),a._v(" 1.6 大数据计算模式")]),a._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211111162748.png",alt:"大数据计算模式及其代表产品"}})]),a._v(" "),_("h3",{attrs:{id:"_1-7-大数据产业"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-大数据产业"}},[a._v("#")]),a._v(" 1.7 大数据产业")]),a._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211111162837.png",alt:"大数据产业链的各个环节"}})]),a._v(" "),_("h3",{attrs:{id:"_1-8-大数据与云计算、物联网"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-8-大数据与云计算、物联网"}},[a._v("#")]),a._v(" 1.8 大数据与云计算、物联网")]),a._v(" "),_("h4",{attrs:{id:"_1-8-1-云计算"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-8-1-云计算"}},[a._v("#")]),a._v(" 1.8.1 云计算")]),a._v(" "),_("p",[a._v("云计算包括三种典型的服务模式，如图：")]),a._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211111162950.png",alt:""}})]),a._v(" "),_("ul",[_("li",[a._v("云计算的关键技术\n"),_("ol",[_("li",[a._v("虚拟化")]),a._v(" "),_("li",[a._v("分布式存储")]),a._v(" "),_("li",[a._v("分布式计算")]),a._v(" "),_("li",[a._v("多租户")])])])]),a._v(" "),_("h4",{attrs:{id:"_1-8-2-物联网"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-8-2-物联网"}},[a._v("#")]),a._v(" 1.8.2 物联网")]),a._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211111163237.png",alt:"物联网体系架构"}})]),a._v(" "),_("h2",{attrs:{id:"第2章-大数据处理架构hadoop"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第2章-大数据处理架构hadoop"}},[a._v("#")]),a._v(" 第2章 大数据处理架构Hadoop")]),a._v(" "),_("h3",{attrs:{id:"_2-1-概述"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-概述"}},[a._v("#")]),a._v(" 2.1 概述")]),a._v(" "),_("p",[a._v("Hadoop的核心是HDFS 和 MapReduce，分别用于存储和计算（Hadoop 2.x版本开始增加了一个叫 yarn 的资源调度器）")]),a._v(" "),_("ul",[_("li",[a._v("Hadoop特性：\n"),_("ul",[_("li",[a._v("高可靠性")]),a._v(" "),_("li",[a._v("高效性")]),a._v(" "),_("li",[a._v("高可扩展性")]),a._v(" "),_("li",[a._v("高容错性")]),a._v(" "),_("li",[a._v("成本低")]),a._v(" "),_("li",[a._v("支持多种编程语言")])])])]),a._v(" "),_("h3",{attrs:{id:"_2-2-hadoop生态系统"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-hadoop生态系统"}},[a._v("#")]),a._v(" 2.2 Hadoop生态系统")]),a._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211111163757.png",alt:"Hadoop生态系统"}})]),a._v(" "),_("h4",{attrs:{id:"_2-2-1-hdfs"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-hdfs"}},[a._v("#")]),a._v(" 2.2.1 HDFS")]),a._v(" "),_("p",[a._v("Hadoop分布式文件系统（Hadoop Distributed File System，HDFS）是Hadoop项目的两大核心之一，HDFS 在设计之初就是要运行在廉价的大型服务器集群上，因而具备高容错性（在保证在部分硬件发生故障的情况下仍然能够保证文件系统的整体可用性和可靠性）")]),a._v(" "),_("h4",{attrs:{id:"_2-2-2-hbase"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-hbase"}},[a._v("#")]),a._v(" 2.2.2 HBase")]),a._v(" "),_("p",[a._v("HBase是一个提供高可靠性、高性能、可伸缩、实时读写、分布式的列式数据库，一般采用HDFS作为其底层数据存储（ HBase 只是一个分布式高并发 k-v 存储系统，通常底层的文件系统用HDFS来支持，类似MySQL需要电脑本地磁盘对其支持）。")]),a._v(" "),_("h4",{attrs:{id:"_2-2-3-mapreduce"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-3-mapreduce"}},[a._v("#")]),a._v(" 2.2.3 MapReduce")]),a._v(" "),_("p",[a._v("MapReduce是Hadoop项目的两大核心之一，它是一种将数据“分而治之”的编程模型，通常用于大规模数据集（大于1TB）的并行运算。")]),a._v(" "),_("h4",{attrs:{id:"_2-2-4-hive"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-4-hive"}},[a._v("#")]),a._v(" 2.2.4 Hive")]),a._v(" "),_("p",[a._v("Hive是一个基于Hadoop的数据仓库工具，可以用于对Hadoop文件中的数据集进行数据查询和读写。")]),a._v(" "),_("p",[a._v("Hive提供了将类似SQL的语句——Hive SQL转换为MapReduce的接口，所以有了Hive就省得写MapReduce了。")]),a._v(" "),_("h4",{attrs:{id:"_2-2-5-pig"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-5-pig"}},[a._v("#")]),a._v(" 2.2.5 Pig")]),a._v(" "),_("p",[a._v("类似Hive，已被淘汰")]),a._v(" "),_("h4",{attrs:{id:"_2-2-6-mahout"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-6-mahout"}},[a._v("#")]),a._v(" 2.2.6 Mahout")]),a._v(" "),_("p",[a._v("已被淘汰，目前较多用Spark ML")]),a._v(" "),_("h4",{attrs:{id:"_2-2-7-zookeeper"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-7-zookeeper"}},[a._v("#")]),a._v(" 2.2.7 Zookeeper")]),a._v(" "),_("p",[a._v("Zookeeper是一个开源的分布式应用程序协调服务，提供分布式锁之类的基本服务（如统一命名服务、状态同步服务、集群管理、分布式应用配置项的管理等），用于构建分布式应用，减轻分布式应用程序所承担的协调任务。")]),a._v(" "),_("h4",{attrs:{id:"_2-2-8-flume"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-8-flume"}},[a._v("#")]),a._v(" 2.2.8 Flume")]),a._v(" "),_("p",[a._v("高可用的分布式日志采集系统")]),a._v(" "),_("h4",{attrs:{id:"_2-2-9-sqoop"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-9-sqoop"}},[a._v("#")]),a._v(" 2.2.9 Sqoop")]),a._v(" "),_("p",[a._v("Sqoop是个数据采集工具（但是跟Flume不一样），它可以将数据从MySQL、Oracle、PostgreSQL等关系型数据库中导入HDFS / HBase / Hive")]),a._v(" "),_("h2",{attrs:{id:"第3章-分布式文件系统hdfs"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第3章-分布式文件系统hdfs"}},[a._v("#")]),a._v(" 第3章 分布式文件系统HDFS")]),a._v(" "),_("h3",{attrs:{id:"_3-1-分布式文件系统"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-分布式文件系统"}},[a._v("#")]),a._v(" 3.1 分布式文件系统")]),a._v(" "),_("p",[a._v("分布式文件系统是一种通过"),_("strong",[a._v("网络")]),a._v("实现文件在多台主机上进行存储文件系统，其设计一般采用“客户端/服务器”（Client/Server）模式，客户端以特定的通信协议通过网络与服务器建立连接，提出文件访问请求，服务器可以通过设置访问权来限制请求方对底层数据存储块的访问。")]),a._v(" "),_("h4",{attrs:{id:"_3-1-1-计算机集群结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-计算机集群结构"}},[a._v("#")]),a._v(" 3.1.1 计算机集群结构")]),a._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211111165728.png",alt:"计算机集群的基本架构"}})]),a._v(" "),_("h4",{attrs:{id:"_3-1-2-分布式文件系统的结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-分布式文件系统的结构"}},[a._v("#")]),a._v(" 3.1.2 分布式文件系统的结构")]),a._v(" "),_("p",[a._v("分布式文件系统采用了块的概念，文件通常被分层若干个块进行存储（如果一个块就够了那就一个块），Hadoop 1.x版本中HDFS的块默认大小是64MB（Hadoop 2.x版本中HDFS的块默认大小是128MB）。")]),a._v(" "),_("blockquote",[_("p",[a._v("注意：如果一个文件小于一个数据块的大小，它并不占用整个数据块的存储空间。（比如一个文件52MB，那这个文件就只占用54MB，而不是占用64MB）")])]),a._v(" "),_("p",[a._v("分布式文件系统在物理结构上是由计算机集群中的多个节点构成的，这些节点分为两类：一类叫"),_("strong",[a._v("NameNode")]),a._v("（或MasterNode，写成“"),_("code",[a._v("主节点")]),a._v("”或“名称节点”）；另一类叫"),_("strong",[a._v("DataNode")]),a._v("（或SlaveNode，写成“从节点”或“"),_("code",[a._v("数据节点")]),a._v("”）。")]),a._v(" "),_("ul",[_("li",[a._v("NameNode的工作：\n"),_("ul",[_("li",[a._v("文件和目录的创建、删除和重命名")]),a._v(" "),_("li",[a._v("管理DataNode和文件块的映射关系（所以客户端拉取文件块得访问DataNode）")]),a._v(" "),_("li",[a._v("分配存储关系")]),a._v(" "),_("li",[a._v("接收并处理客户端的请求")])])])]),a._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211111170223.png",alt:"大规模文件系统的整体结构"}})]),a._v(" "),_("p",[a._v("分布式文件系统除了HDFS以外，还有其他的，上述讲的是比较经典的分布式文件系统的结构，HDFS也符合上述模式。")]),a._v(" "),_("h3",{attrs:{id:"_3-2-hdfs简介"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-hdfs简介"}},[a._v("#")]),a._v(" 3.2 HDFS简介")]),a._v(" "),_("ul",[_("li",[_("p",[a._v("HDFS优点：")]),a._v(" "),_("ul",[_("li",[a._v("兼容廉价的硬件设备")]),a._v(" "),_("li",[a._v("流数据读写（即批量数据处理）")]),a._v(" "),_("li",[a._v("大数据集")]),a._v(" "),_("li",[a._v("简单的文件模型")]),a._v(" "),_("li",[a._v("强大的跨平台兼容性")])])]),a._v(" "),_("li",[_("p",[a._v("HDFS缺点：")]),a._v(" "),_("ul",[_("li",[a._v("不适合低延迟数据访问（批处理适合处理大数据集，不适合低延迟）")]),a._v(" "),_("li",[a._v("无法高校存储大量小文件（每个小文件都会占用NameNode一定的存储空间）")]),a._v(" "),_("li",[a._v("不支持多用户写入及任意修改文件（HDFS只允许一个文件有一个写入者，而且只允许对文件执行追加操作，不能执行随机写操作。）")])])])]),a._v(" "),_("h3",{attrs:{id:"_3-3-hdfs的相关概念"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-hdfs的相关概念"}},[a._v("#")]),a._v(" 3.3 HDFS的相关概念")]),a._v(" "),_("h4",{attrs:{id:"_3-3-1-块"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-1-块"}},[a._v("#")]),a._v(" 3.3.1 块")]),a._v(" "),_("p",[a._v("传统的文件系统中，为了提高读写效率，一般以"),_("strong",[a._v("数据块")]),a._v("为单位，而不是以字节为单位。")]),a._v(" "),_("p",[a._v("比如机械硬盘包含了磁头和转动部件，数据读取时有个寻道的过程，通过转动盘片和移动磁头的位置，来找数据在机械硬盘中的存储位置，然后才能进行读写。")]),a._v(" "),_("h4",{attrs:{id:"_3-3-2-namenode和datanode"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-2-namenode和datanode"}},[a._v("#")]),a._v(" 3.3.2 NameNode和DataNode")]),a._v(" "),_("p",[a._v("HDFS负责管理分布式文件系统的命名空间（NameSpace），保留了两个核心的数据结构（FsImage和EditLog），如图：")]),a._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211111200025.png",width:"60%"}})]),a._v(" "),_("blockquote",[_("ul",[_("li",[a._v("FsImage用于维护文件系统树以及文件树中所有的文件和文件夹的元数据")]),a._v(" "),_("li",[a._v("EditLog中记录了所有针对文件的创建、删除、重命名等操作。")])])]),a._v(" "),_("p",[_("code",[a._v("第一阶段")]),a._v("：NameNode启动")]),a._v(" "),_("ol",[_("li",[a._v("第一次启动NameNode格式化后，创建FsImage和EditsLog。如果不是第一次启动，直接加载这两个文件到内存；")]),a._v(" "),_("li",[a._v("客户端对元数据进行增删改的请求；")]),a._v(" "),_("li",[a._v("NameNode记录操作日志，更新滚动日志；")]),a._v(" "),_("li",[a._v("NameNode在内存中对元数据进行增删改。")])]),a._v(" "),_("h4",{attrs:{id:"_3-3-3-secondary-namenode"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-3-secondary-namenode"}},[a._v("#")]),a._v(" 3.3.3 Secondary NameNode")]),a._v(" "),_("p",[a._v("HDFS不断发生更新操作，EditLog会越来越大，此时需有第二阶段，具体过程如下（合并逻辑不复杂，但是流程上文字看着挺多，所以建议直接看图），如图（图中EditLog写成了Edits）：")]),a._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211111210020.png",alt:"NN和2NN的工作机制"}})]),a._v(" "),_("p",[a._v("上图文字描述如下：")]),a._v(" "),_("p",[_("code",[a._v("第二阶段")]),a._v("：Secondary NameNode工作")]),a._v(" "),_("ol",[_("li",[a._v("Secondary NameNode询问NameNode是否需要CheckPoint（检查点），带回NameNode检查结果；")]),a._v(" "),_("li",[a._v("Secondary NameNode请求执行CheckPoint；")]),a._v(" "),_("li",[a._v("NameNode滚动正在写的EditLog；")]),a._v(" "),_("li",[a._v("将滚动的EditLog和FsImage拷贝到Secondary NameNode；")]),a._v(" "),_("li",[a._v("Secondary NameNode加载EditLog到内存合并；")]),a._v(" "),_("li",[a._v("生成新的镜像文件FsImage.chkpoint；")]),a._v(" "),_("li",[a._v("拷贝FsImage.chkpoint到NameNode；")]),a._v(" "),_("li",[a._v("NameNode将FsImage.chkpoint重命名为FsImage")])]),a._v(" "),_("h3",{attrs:{id:"_3-4-hdfs体系结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-hdfs体系结构"}},[a._v("#")]),a._v(" 3.4 HDFS体系结构")]),a._v(" "),_("p",[a._v("HDFS采用了主从（Master/Slave）结构模型，一个HDFS集群包括一个NameNode和若干个DataNode，如图：")]),a._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211111220051.png",alt:"HDFS的体系结构"}})]),a._v(" "),_("blockquote",[_("p",[a._v("每个DataNode会周期性地向NameNode发送“心跳”信息，报告自己的状态，没有按时发送心跳信息的数据节点会被标记为“宕机”，不会再给它分配任何I/O请求。")])]),a._v(" "),_("h3",{attrs:{id:"_3-5-hdfs的存储原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-hdfs的存储原理"}},[a._v("#")]),a._v(" 3.5 HDFS的存储原理")]),a._v(" "),_("h4",{attrs:{id:"_3-5-1-数据的冗余存储"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-1-数据的冗余存储"}},[a._v("#")]),a._v(" 3.5.1 数据的冗余存储")]),a._v(" "),_("p",[a._v("HDFS默认3个副本")]),a._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211113144146.png",alt:"HDFS数据块多副本存储"}})]),a._v(" "),_("p",[a._v("多副本存储具有以下优点：")]),a._v(" "),_("ul",[_("li",[a._v("加快数据的传输速度（客户端从不同的数据块副本中同时读取数据）")]),a._v(" "),_("li",[a._v("容易检查数据错误（多个副本容易判断数据传输是否出错）")]),a._v(" "),_("li",[a._v("保证数据的可靠性（某个节点出故障不会造成数据丢失）")])]),a._v(" "),_("h4",{attrs:{id:"_3-5-2-数据存取策略"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-2-数据存取策略"}},[a._v("#")]),a._v(" 3.5.2 数据存取策略")]),a._v(" "),_("ul",[_("li",[_("p",[a._v("数据存放")]),a._v(" "),_("p",[a._v("两份副本放在同一个机架不同机器上，第三个副本放在不同机架上")]),a._v(" "),_("p",[a._v("（两个副本很近保证了数据读写性能，另一个副本在不同机架保证了机架发生异常时的数据恢复）")])]),a._v(" "),_("li",[_("p",[a._v("数据读取")]),a._v(" "),_("p",[a._v("HDFS有个API可获得机架ID，客户端也有个自己所属的机架ID。当读取数据时，如果客户端发现有跟自己一致的机架ID，就优先读取那个机架上的副本，如果没有就随机读取一个副本。")])]),a._v(" "),_("li",[_("p",[a._v("数据复制")]),a._v(" "),_("p",[a._v("客户端只跟一个节点连接，第二个节点跟第一个节点建立连接，第三个节点跟第二个节点建立连接，完成建立连接后开始读取/写入数据")])])]),a._v(" "),_("h4",{attrs:{id:"_3-5-3-数据错误与恢复"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-3-数据错误与恢复"}},[a._v("#")]),a._v(" 3.5.3 数据错误与恢复")]),a._v(" "),_("ul",[_("li",[_("p",[a._v("NameNode出错")]),a._v(" "),_("p",[a._v("NameNode保存了所有的元数据信息，其核心数据结构是FsImage和EditLog，如果这两个文件发生损坏那么HDFS集群就会出问题。所以会有针对这两个的安全保证和补救措施。")]),a._v(" "),_("ol",[_("li",[a._v("NameNode的元数据同步存储到其他文件系统（例如远程挂载的网络文件系统NFS）")]),a._v(" "),_("li",[a._v("运行一个Secondary NameNode（但是这个仍然会丢失一部分数据，因为Secondary NameNode比 NameNode迟了一步）")])])]),a._v(" "),_("li",[_("p",[a._v("DataNode出错")]),a._v(" "),_("p",[a._v("如果NameNode收不到DataNode的“心跳”了，很可能就是DataNode挂了（当然也有DataNode没挂，是别的问题导致NameNode没收到“心跳”）")]),a._v(" "),_("p",[a._v("因为有三个副本，所以DataNode挂了一个问题不大")])]),a._v(" "),_("li",[_("p",[a._v("数据出错")]),a._v(" "),_("p",[a._v("网络传输和磁盘错误等因素都会造成数据错误，所以客户端读取数据一般要采用md5和sha1对数据块进行校验。")]),a._v(" "),_("p",[a._v("如果校验出错，客户端会请求到另外一个DataNode读取该文件块，并向NameNode报告这个文件块有误，NameNode会定期检查并复制这个文件块。")]),a._v(" "),_("blockquote",[_("p",[a._v("一个文件块一般包含多个数据块")])])])]),a._v(" "),_("h3",{attrs:{id:"_3-6-hdfs读写过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-hdfs读写过程"}},[a._v("#")]),a._v(" 3.6 HDFS读写过程")]),a._v(" "),_("ul",[_("li",[_("p",[a._v("HDFS读流程")]),a._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211113144232.png",alt:"HDFS读流程"}})])]),a._v(" "),_("li",[_("p",[a._v("HDFS写流程")]),a._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211113144105.png",alt:"HDFS写流程"}})])])]),a._v(" "),_("h2",{attrs:{id:"第4章-分布式数据库hbase"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第4章-分布式数据库hbase"}},[a._v("#")]),a._v(" 第4章 分布式数据库HBase")]),a._v(" "),_("h3",{attrs:{id:"_4-1-概述"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-概述"}},[a._v("#")]),a._v(" 4.1 概述")]),a._v(" "),_("p",[a._v("HBase是一个高可靠、高性能、面向列、可伸缩的分布式数据库")]),a._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211113144426.png",alt:"Hadoop生态系统中HBase与其他部分的关系"}})]),a._v(" "),_("h3",{attrs:{id:"_4-2-hbase访问"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-hbase访问"}},[a._v("#")]),a._v(" 4.2 HBase访问")]),a._v(" "),_("p",[a._v("HBase提高了好几种接口，一般用 Java 或 Shell 或 Hive")]),a._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211113144601.png",alt:"HBase访问接口"}})]),a._v(" "),_("h3",{attrs:{id:"_4-3-hbase数据模型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-hbase数据模型"}},[a._v("#")]),a._v(" 4.3 HBase数据模型")]),a._v(" "),_("p",[a._v("HBase是一个"),_("strong",[a._v("稀疏")]),a._v("、"),_("strong",[a._v("多维度")]),a._v("、"),_("strong",[a._v("排序")]),a._v("的映射表，这张表的索引是行键、列族、列限定符和时间戳。")]),a._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/20211113202039.png",alt:"HBase数据模型的一个实例"}})]),a._v(" "),_("h3",{attrs:{id:"_4-4-hbase的实现原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-hbase的实现原理"}},[a._v("#")]),a._v(" 4.4 HBase的实现原理")]),a._v(" "),_("h4",{attrs:{id:"_4-4-1-hbase的功能组件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-1-hbase的功能组件"}},[a._v("#")]),a._v(" 4.4.1 HBase的功能组件")]),a._v(" "),_("p",[a._v("HBase的实现包括3个主要的功能组件："),_("strong",[a._v("库函数")]),a._v("，链接到每个客户端；"),_("strong",[a._v("一个Master主服务器")]),a._v("；"),_("strong",[a._v("许多个Region服务器")]),a._v("。")]),a._v(" "),_("h4",{attrs:{id:"_4-4-2-表和region"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-2-表和region"}},[a._v("#")]),a._v(" 4.4.2 表和Region")]),a._v(" "),_("p",[a._v("一个HBase存储了很多表，其表中的行是根据"),_("strong",[a._v("行键")]),a._v("值的字典序进行维护的，表中包含的行数量可能非常庞大，无法存储在一台机器上。因此，需要根据行键的值对表进行分区，如图：")]),a._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ChoiNgai/ImageServer/img/image-20211125134609771.png",alt:"HBase中一张表被划分成多个Region"}})]),a._v(" "),_("p",[a._v("每个行区间构成一个分区，被称为“Region”，包含了位于某个值域区间内的所有数据，它是负载均衡和数据分发的基本单位，这些Region会被分发到不同的Region服务器上。")])])}),[],!1,null,null,null);e.default=v.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{442:function(t,v,e){"use strict";e.r(v);var a=e(30),_=Object(a.a)({},(function(){var t=this,v=t.$createElement,e=t._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"linux大数据框架命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux大数据框架命令"}},[t._v("#")]),t._v(" Linux大数据框架命令")]),t._v(" "),e("h2",{attrs:{id:"vi-vim"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vi-vim"}},[t._v("#")]),t._v(" vi/vim")]),t._v(" "),e("h3",{attrs:{id:"一般模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一般模式"}},[t._v("#")]),t._v(" 一般模式")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("语法")]),t._v(" "),e("th",[t._v("功能描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("yy")]),t._v(" "),e("td",[t._v("复制光标当前一行")])]),t._v(" "),e("tr",[e("td",[t._v("y数字y")]),t._v(" "),e("td",[t._v("复制一段（从第几行到第几行）")])]),t._v(" "),e("tr",[e("td",[t._v("p")]),t._v(" "),e("td",[t._v("箭头移动到目的行粘贴")])]),t._v(" "),e("tr",[e("td",[t._v("u")]),t._v(" "),e("td",[t._v("撤销上一步")])]),t._v(" "),e("tr",[e("td",[t._v("dd")]),t._v(" "),e("td",[t._v("删除光标当前行")])]),t._v(" "),e("tr",[e("td",[t._v("d数字d")]),t._v(" "),e("td",[t._v("删除光标（含）后多少行")])]),t._v(" "),e("tr",[e("td",[t._v("x")]),t._v(" "),e("td",[t._v("删除一个字母，相当于del")])]),t._v(" "),e("tr",[e("td",[t._v("X")]),t._v(" "),e("td",[t._v("删除一个字母，相当于Backspace")])]),t._v(" "),e("tr",[e("td",[t._v("yw")]),t._v(" "),e("td",[t._v("复制一个词")])]),t._v(" "),e("tr",[e("td",[t._v("dw")]),t._v(" "),e("td",[t._v("删除一个词")])]),t._v(" "),e("tr",[e("td",[t._v("shift+^")]),t._v(" "),e("td",[t._v("移动到行头")])]),t._v(" "),e("tr",[e("td",[t._v("shift+$")]),t._v(" "),e("td",[t._v("移动到行尾")])]),t._v(" "),e("tr",[e("td",[t._v("1+shift+g")]),t._v(" "),e("td",[t._v("移动到页头，数字")])]),t._v(" "),e("tr",[e("td",[t._v("shift+g")]),t._v(" "),e("td",[t._v("移动到页尾")])]),t._v(" "),e("tr",[e("td",[t._v("数字N+shift+g")]),t._v(" "),e("td",[t._v("移动到目标行")])])])]),t._v(" "),e("h3",{attrs:{id:"编辑模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编辑模式"}},[t._v("#")]),t._v(" 编辑模式")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("按键")]),t._v(" "),e("th",[t._v("功能")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("i")]),t._v(" "),e("td",[t._v("当前光标前")])]),t._v(" "),e("tr",[e("td",[t._v("a")]),t._v(" "),e("td",[t._v("当前光标后")])]),t._v(" "),e("tr",[e("td",[t._v("o")]),t._v(" "),e("td",[t._v("当前光标行的下一行")])]),t._v(" "),e("tr",[e("td",[t._v("I")]),t._v(" "),e("td",[t._v("光标所在行最前")])]),t._v(" "),e("tr",[e("td",[t._v("A")]),t._v(" "),e("td",[t._v("光标所在行最后")])]),t._v(" "),e("tr",[e("td",[t._v("O")]),t._v(" "),e("td",[t._v("当前光标行的上一行")])])])]),t._v(" "),e("h3",{attrs:{id:"指令模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#指令模式"}},[t._v("#")]),t._v(" 指令模式")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("命令")]),t._v(" "),e("th",[t._v("功能")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v(":w")]),t._v(" "),e("td",[t._v("保存")])]),t._v(" "),e("tr",[e("td",[t._v(":q")]),t._v(" "),e("td",[t._v("退出")])]),t._v(" "),e("tr",[e("td",[t._v(":!")]),t._v(" "),e("td",[t._v("强制执行")])]),t._v(" "),e("tr",[e("td",[t._v("/要查找的词")]),t._v(" "),e("td",[t._v("n 查找下一个，N 往上查找")])]),t._v(" "),e("tr",[e("td",[t._v("? 要查找的词")]),t._v(" "),e("td",[t._v("n是查找上一个，shift+n是往下查找")])]),t._v(" "),e("tr",[e("td",[t._v(":set nu")]),t._v(" "),e("td",[t._v("显示行号")])]),t._v(" "),e("tr",[e("td",[t._v(":set nonu")]),t._v(" "),e("td",[t._v("关闭行号")])])])]),t._v(" "),e("h3",{attrs:{id:"压缩和解压"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#压缩和解压"}},[t._v("#")]),t._v(" 压缩和解压")]),t._v(" "),e("h4",{attrs:{id:"gzip-gunzip-压缩"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gzip-gunzip-压缩"}},[t._v("#")]),t._v(" gzip/gunzip 压缩")]),t._v(" "),e("p",[t._v("（1）只能压缩文件不能压缩目录")]),t._v(" "),e("p",[t._v("（2）不保留原来的文件")]),t._v(" "),e("p",[t._v("gzip压缩：gzip hello.txt")]),t._v(" "),e("p",[t._v("gunzip解压缩文件：gunzip hello.txt.gz")]),t._v(" "),e("h4",{attrs:{id:"zip-unzip-压缩"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zip-unzip-压缩"}},[t._v("#")]),t._v(" zip/unzip 压缩")]),t._v(" "),e("p",[t._v("可以压缩目录且保留源文件")]),t._v(" "),e("p",[t._v("zip压缩（压缩 1.txt 和2.txt，压缩后的名称为mypackage.zip）：zip hello.zip hello.txt world.txt")]),t._v(" "),e("p",[t._v("unzip解压：unzip hello.zip")]),t._v(" "),e("p",[t._v("unzip解压到指定目录：unzip hello.zip -d /opt")]),t._v(" "),e("h4",{attrs:{id:"tar-打包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tar-打包"}},[t._v("#")]),t._v(" tar 打包")]),t._v(" "),e("p",[t._v("tar压缩多个文件：tar -zcvf hello.txt world.txt")]),t._v(" "),e("p",[t._v("tar压缩目录：tar -zcvf hello.tar.gz opt/")]),t._v(" "),e("p",[t._v("tar解压到当前目录：tar -zxvf hello.tar.gz")]),t._v(" "),e("p",[t._v("tar解压到指定目录：tar -zxvf hello.tar.gz -C /opt")]),t._v(" "),e("h3",{attrs:{id:"rpm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rpm"}},[t._v("#")]),t._v(" RPM")]),t._v(" "),e("p",[t._v("RPM查询命令：rpm -qa |grep firefox")]),t._v(" "),e("p",[t._v("RPM卸载命令：")]),t._v(" "),e("p",[t._v("rpm -e xxxxxx")]),t._v(" "),e("p",[t._v("rpm -e --nodeps xxxxxx（不检查依赖）")]),t._v(" "),e("p",[t._v("RPM安装命令：")]),t._v(" "),e("p",[t._v("rpm -ivh xxxxxx.rpm")]),t._v(" "),e("p",[t._v("rpm -ivh --nodeps fxxxxxx.rpm（--nodeps，不检测依赖进度）")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("选项")]),t._v(" "),e("th",[t._v("功能")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("-i")]),t._v(" "),e("td",[t._v("-i=install，安装")])]),t._v(" "),e("tr",[e("td",[t._v("-v")]),t._v(" "),e("td",[t._v("-v=verbose，显示详细信息")])]),t._v(" "),e("tr",[e("td",[t._v("-h")]),t._v(" "),e("td",[t._v("-h=hash，进度条")])]),t._v(" "),e("tr",[e("td",[t._v("--nodeps")]),t._v(" "),e("td",[t._v("--nodeps，不检测依赖进度")])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"shell"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#shell"}},[t._v("#")]),t._v(" Shell")]),t._v(" "),e("h3",{attrs:{id:"输入-输出重定向"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#输入-输出重定向"}},[t._v("#")]),t._v(" 输入/输出重定向")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("命令")]),t._v(" "),e("th",[t._v("功能说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("command > file")]),t._v(" "),e("td",[t._v("将输出重定向到 file")])]),t._v(" "),e("tr",[e("td",[t._v("command < file")]),t._v(" "),e("td",[t._v("将输入重定向到 file")])]),t._v(" "),e("tr",[e("td",[t._v("command >> file")]),t._v(" "),e("td",[t._v("将输出以追加的方式重定向到 file")])]),t._v(" "),e("tr",[e("td",[t._v("n > file")]),t._v(" "),e("td",[t._v("将文件描述符为 n 的文件重定向到 file")])]),t._v(" "),e("tr",[e("td",[t._v("n >> file")]),t._v(" "),e("td",[t._v("将文件描述符为 n 的文件以追加的方式重定向到 file")])]),t._v(" "),e("tr",[e("td",[t._v("n >& m")]),t._v(" "),e("td",[t._v("将输出文件 m 和 n 合并")])]),t._v(" "),e("tr",[e("td",[t._v("n <& m")]),t._v(" "),e("td",[t._v("将输入文件 m 和 n 合并")])]),t._v(" "),e("tr",[e("td",[t._v("<< tag")]),t._v(" "),e("td",[t._v("将开始标记 tag 和结束标记 tag 之间的内容作为输入")])])])]),t._v(" "),e("h3",{attrs:{id:"脚本编辑"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#脚本编辑"}},[t._v("#")]),t._v(" 脚本编辑")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("快捷方式")]),t._v(" "),e("th",[t._v("功能说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("shift")]),t._v(" "),e("td",[t._v("参数左移")])]),t._v(" "),e("tr",[e("td",[t._v("$@")]),t._v(" "),e("td",[t._v("所有的参数")])]),t._v(" "),e("tr",[e("td",[t._v("$#")]),t._v(" "),e("td",[t._v("参数的个数")])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"hadoop"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hadoop"}},[t._v("#")]),t._v(" Hadoop")]),t._v(" "),e("h3",{attrs:{id:"启动类命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动类命令"}},[t._v("#")]),t._v(" 启动类命令")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("功能说明")]),t._v(" "),e("th",[t._v("命令脚本")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("启动hdfs集群")]),t._v(" "),e("td",[t._v("sbin/start-dfs.sh")])]),t._v(" "),e("tr",[e("td",[t._v("启动yarn")]),t._v(" "),e("td",[t._v("sbin/start-yarn.sh")])])])]),t._v(" "),e("h3",{attrs:{id:"hadoop-fs-hdfs-dfs-命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hadoop-fs-hdfs-dfs-命令"}},[t._v("#")]),t._v(" hadoop fs/hdfs dfs 命令")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("功能说明")]),t._v(" "),e("th",[t._v("命令")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("创建目录")]),t._v(" "),e("td",[t._v("hdfs dfs -mkdir -p /data/flink")])]),t._v(" "),e("tr",[e("td",[t._v("显示目录")]),t._v(" "),e("td",[t._v("hdfs dfs -ls /")])]),t._v(" "),e("tr",[e("td",[t._v("从HDFS拷贝到本地")]),t._v(" "),e("td",[t._v("hdfs dfs -copyToLocal /data/data.txt ./")])]),t._v(" "),e("tr",[e("td",[t._v("文件上传到集群(从本地)")]),t._v(" "),e("td",[t._v("hhdfs dfs -copyFromLocal data.txt /")])]),t._v(" "),e("tr",[e("td",[t._v("文件下载")]),t._v(" "),e("td",[t._v("hdfs dfs -get /data/flink")])]),t._v(" "),e("tr",[e("td",[t._v("删除集群的文件")]),t._v(" "),e("td",[t._v("hdfs dfs -rm /data/flink")])]),t._v(" "),e("tr",[e("td",[t._v("删除文件夹")]),t._v(" "),e("td",[t._v("hdfs dfs -rm -r -skipTrash /data")])]),t._v(" "),e("tr",[e("td",[t._v("从本地剪切粘贴到HDFS")]),t._v(" "),e("td",[t._v("hdfs dfs  -moveFromLocal data.txt /data/")])]),t._v(" "),e("tr",[e("td",[t._v("追加一个文件到已经存在的文件末尾hdfs dfs -appendToFile data1.txt /data/data.txt")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("显示文件内容")]),t._v(" "),e("td",[t._v("hdfs dfs -cat data.txt")])]),t._v(" "),e("tr",[e("td",[t._v("修改文件所属权限")]),t._v(" "),e("td",[t._v("hdfs dfs  -chmod  777 xxx.sh")])]),t._v(" "),e("tr",[e("td",[t._v("修改文件所属用户组")]),t._v(" "),e("td",[t._v("hdfs dfs  -chown  root:root data.txt")])]),t._v(" "),e("tr",[e("td",[t._v("从HDFS的一个路径拷贝到HDFS的另一个路径")]),t._v(" "),e("td",[t._v("hdfs dfs -cp data.txt /data1.txt")])]),t._v(" "),e("tr",[e("td",[t._v("在HDFS目录中移动文件")]),t._v(" "),e("td",[t._v("hdfs dfs -mv data.txt /opt/")])]),t._v(" "),e("tr",[e("td",[t._v("合并下载多个文件")]),t._v(" "),e("td",[t._v("hdfs dfs  -getmerge /data/* ./data_merge.txt")])]),t._v(" "),e("tr",[e("td",[t._v("hadoop fs -put")]),t._v(" "),e("td",[t._v("等同于copyFromLocal")])]),t._v(" "),e("tr",[e("td",[t._v("显示一个文件的末尾")]),t._v(" "),e("td",[t._v("hdfs dfs -tail data.txt")])]),t._v(" "),e("tr",[e("td",[t._v("删除文件或文件夹")]),t._v(" "),e("td",[t._v("hdfs dfs -rm /data/data.txt")])]),t._v(" "),e("tr",[e("td",[t._v("删除空目录")]),t._v(" "),e("td",[t._v("hdfs dfs -rmdir /data")])]),t._v(" "),e("tr",[e("td",[t._v("统计文件夹的大小信息")]),t._v(" "),e("td",[t._v("hdfs dfs -s -h /data")])]),t._v(" "),e("tr",[e("td",[t._v("统计文件夹下的文件大小信息")]),t._v(" "),e("td",[t._v("hdfs dfs  -h /data")])]),t._v(" "),e("tr",[e("td",[t._v("设置HDFS中文件的副本数量")]),t._v(" "),e("td",[t._v("hdfs dfs -setrep 3 /data/data.txt")])])])]),t._v(" "),e("h3",{attrs:{id:"yarn命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yarn命令"}},[t._v("#")]),t._v(" yarn命令")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("功能说明")]),t._v(" "),e("th",[t._v("命令")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("查看正在运行的yarn任务列表")]),t._v(" "),e("td",[t._v("yarn application -list appID")])]),t._v(" "),e("tr",[e("td",[t._v("kill掉指定id的yarn任务")]),t._v(" "),e("td",[t._v("yarn application -kill appID")])]),t._v(" "),e("tr",[e("td",[t._v("查看任务日志信息")]),t._v(" "),e("td",[t._v("yarn logs -applicationId appID")])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"zookeeper"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper"}},[t._v("#")]),t._v(" Zookeeper")]),t._v(" "),e("h3",{attrs:{id:"启动命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动命令"}},[t._v("#")]),t._v(" 启动命令")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("功能说明")]),t._v(" "),e("th",[t._v("命令脚本")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("启动zookeeper服务")]),t._v(" "),e("td",[t._v("zkServer.sh start")])]),t._v(" "),e("tr",[e("td",[t._v("查看zookeeper状态")]),t._v(" "),e("td",[t._v("zkServer.sh status")])]),t._v(" "),e("tr",[e("td",[t._v("停止zookeeper服务")]),t._v(" "),e("td",[t._v("zkServer.sh stop")])]),t._v(" "),e("tr",[e("td",[t._v("启动zookeeper客户端")]),t._v(" "),e("td",[t._v("zkCli.sh -server 127.0.0.1:2181")])]),t._v(" "),e("tr",[e("td",[t._v("退出zookeeper客户端")]),t._v(" "),e("td",[t._v("quit")])])])]),t._v(" "),e("h3",{attrs:{id:"基本操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本操作"}},[t._v("#")]),t._v(" 基本操作")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("功能说明")]),t._v(" "),e("th",[t._v("命令脚本")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("当前znode中所包含的内容")]),t._v(" "),e("td",[t._v("ls /")])]),t._v(" "),e("tr",[e("td",[t._v("创建普通节点(前面是节点的路径，后面是值）")]),t._v(" "),e("td",[t._v('create /bigdata/flink "flink"')])]),t._v(" "),e("tr",[e("td",[t._v("获取节点的值")]),t._v(" "),e("td",[t._v("get /bigdata")])]),t._v(" "),e("tr",[e("td",[t._v("修改节点的值")]),t._v(" "),e("td",[t._v('set /bigdata/flink "flinksql"')])]),t._v(" "),e("tr",[e("td",[t._v("删除节点")]),t._v(" "),e("td",[t._v("delete /bigdata/flink")])]),t._v(" "),e("tr",[e("td",[t._v("递归删除节点")]),t._v(" "),e("td",[t._v("rmr /bigdata")])])])]),t._v(" "),e("h3",{attrs:{id:"四字母命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四字母命令"}},[t._v("#")]),t._v(" 四字母命令")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("命令")]),t._v(" "),e("th",[t._v("功能说明")]),t._v(" "),e("th",[t._v("例子")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("conf")]),t._v(" "),e("td",[t._v("zk服务配置的详细信息")]),t._v(" "),e("td",[t._v("echo conf | nc 127.0.0.1 2181")])]),t._v(" "),e("tr",[e("td",[t._v("stat")]),t._v(" "),e("td",[t._v("客户端与zk连接的简要信息")]),t._v(" "),e("td",[t._v("参考上面")])]),t._v(" "),e("tr",[e("td",[t._v("srvr")]),t._v(" "),e("td",[t._v("zk服务的详细信息")]),t._v(" "),e("td",[t._v("参考上面")])]),t._v(" "),e("tr",[e("td",[t._v("cons")]),t._v(" "),e("td",[t._v("客户端与zk连接的详细信息")]),t._v(" "),e("td",[t._v("参考上面")])]),t._v(" "),e("tr",[e("td",[t._v("mntr")]),t._v(" "),e("td",[t._v("zk服务目前的性能状况")]),t._v(" "),e("td",[t._v("参考上面")])]),t._v(" "),e("tr",[e("td",[t._v("crst")]),t._v(" "),e("td",[t._v("重置当前的所有连接、会话")]),t._v(" "),e("td",[t._v("参考上面")])]),t._v(" "),e("tr",[e("td",[t._v("dump")]),t._v(" "),e("td",[t._v("列出未经处理的会话和连接信息")]),t._v(" "),e("td",[t._v("参考上面")])]),t._v(" "),e("tr",[e("td",[t._v("envi")]),t._v(" "),e("td",[t._v("列出zk的版本信息、主机名称、Java版本、服务器名称等等")]),t._v(" "),e("td",[t._v("参考上面")])]),t._v(" "),e("tr",[e("td",[t._v("ruok")]),t._v(" "),e("td",[t._v("测试服务器是否正在运行，如果在运行返回imok，否则返回空")]),t._v(" "),e("td",[t._v("参考上面")])]),t._v(" "),e("tr",[e("td",[t._v("srst")]),t._v(" "),e("td",[t._v("重置Zookeeper的所有统计信息")]),t._v(" "),e("td",[t._v("参考上面")])]),t._v(" "),e("tr",[e("td",[t._v("wchs")]),t._v(" "),e("td",[t._v("列出watch的总数，连接数")]),t._v(" "),e("td",[t._v("参考上面")])]),t._v(" "),e("tr",[e("td",[t._v("wchp")]),t._v(" "),e("td",[t._v("列出所有watch的路径及sessionID")]),t._v(" "),e("td",[t._v("参考上面")])]),t._v(" "),e("tr",[e("td",[t._v("mntr")]),t._v(" "),e("td",[t._v("列出集群的关键性能数据，包括zk的版本、node数量、临时节点数等等")]),t._v(" "),e("td",[t._v("参考上面")])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"kafka"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kafka"}},[t._v("#")]),t._v(" Kafka")]),t._v(" "),e("p",[e("strong",[t._v("注:")]),t._v(" 这里机器我只写一个。命令你们也可使用 ./bin/xx.sh (如：./bin/kafka-topics.sh)")]),t._v(" "),e("h3",{attrs:{id:"查看当前服务器中的所有topic"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看当前服务器中的所有topic"}},[t._v("#")]),t._v(" 查看当前服务器中的所有topic")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kafka-topics --zookeeper xxxxxx:2181 --list --exclude-internal \n\n说明：\n\nexclude-internal：排除kafka内部topic\n\n比如： --exclude-internal  --topic "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test_.*"')]),t._v("\n")])])]),e("h3",{attrs:{id:"创建topic"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建topic"}},[t._v("#")]),t._v(" 创建topic")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kafka-topics --zookeeper xxxxxx:2181  --create \n--replication-factor \n--partitions "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" \n--topic topic_name\n\n说明：\n\n--topic 定义topic名\n\n--replication-factor  定义副本数\n\n--partitions  定义分区数\n")])])]),e("h3",{attrs:{id:"删除topic"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除topic"}},[t._v("#")]),t._v(" 删除topic")]),t._v(" "),e("p",[e("strong",[t._v("注意:")]),t._v(" 需要server.properties中设置delete.topic.enable=true否则只是标记删除")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kafka-topics --zookeeper xxxxxx:2181 --delete --topic topic_name\n")])])]),e("h3",{attrs:{id:"生产者"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生产者"}},[t._v("#")]),t._v(" 生产者")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kafka-console-producer --broker-list xxxxxx:9092 --topic topic_name\n\n可加：--property parse.key"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true（有key消息）\n")])])]),e("h3",{attrs:{id:"消费者"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#消费者"}},[t._v("#")]),t._v(" 消费者")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kafka-console-consumer --bootstrap-server xxxxxx:9092 --topic topic_name\n\n注：可选\n\n--from-beginning：会把主题中以往所有的数据都读取出来\n\n--whitelist "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.*'")]),t._v(" ：消费所有的topic\n\n--property print.key"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true：显示key进行消费\n\n--partition "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("：指定分区消费\n\n--offset：指定起始偏移量消费\n")])])]),e("h3",{attrs:{id:"查看某个topic的详情"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看某个topic的详情"}},[t._v("#")]),t._v(" 查看某个Topic的详情")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kafka-topics --zookeeper xxxxxx:2181 --describe --topic topic_name\n")])])]),e("h3",{attrs:{id:"修改分区数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改分区数"}},[t._v("#")]),t._v(" 修改分区数")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kafka-topics --zookeeper xxxxxx:2181 --alter --topic topic_name --partitions "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n")])])]),e("h3",{attrs:{id:"查看某个消费者组信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看某个消费者组信息"}},[t._v("#")]),t._v(" 查看某个消费者组信息")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kafka-consumer-groups --bootstrap-server  xxxxxx:9092  --describe --group group_name \n")])])]),e("h3",{attrs:{id:"删除消费者组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除消费者组"}},[t._v("#")]),t._v(" 删除消费者组")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kafka-consumer-groups --bootstrap-server  xxxxxx:9092  ---delete --group group_name \n")])])]),e("h3",{attrs:{id:"重置offset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重置offset"}},[t._v("#")]),t._v(" 重置offset")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kafka-consumer-groups --bootstrap-server  xxxxxx:9092  --group group_name\n\n--reset-offsets --all-topics --to-latest --execute \n")])])]),e("h3",{attrs:{id:"leader重新选举"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leader重新选举"}},[t._v("#")]),t._v(" leader重新选举")]),t._v(" "),e("p",[t._v("指定Topic指定分区用重新PREFERRED：优先副本策略 进行Leader重选举")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kafka-leader-election --bootstrap-server xxxxxx:9092 \n--topic topic_name --election-type PREFERRED --partition "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),e("p",[t._v("所有Topic所有分区用重新PREFERRED：优先副本策略 进行Leader重选举")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kafka-leader-election --bootstrap-server xxxxxx:9092 \n--election-type preferred  --all-topic-partitions\n")])])]),e("h3",{attrs:{id:"查询kafka版本信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查询kafka版本信息"}},[t._v("#")]),t._v(" 查询kafka版本信息")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kafka-configs --bootstrap-server xxxxxx:9092\n--describe --version\n")])])]),e("h3",{attrs:{id:"增删改配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#增删改配置"}},[t._v("#")]),t._v(" 增删改配置")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("功能说明")]),t._v(" "),e("th",[t._v("参数")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("选择类型")]),t._v(" "),e("td",[t._v("--entity-type (topics/clients/users/brokers/broker- loggers)")])]),t._v(" "),e("tr",[e("td",[t._v("类型名称")]),t._v(" "),e("td",[t._v("--entity-name")])]),t._v(" "),e("tr",[e("td",[t._v("删除配置")]),t._v(" "),e("td",[t._v("--delete-config k1=v1,k2=v2")])]),t._v(" "),e("tr",[e("td",[t._v("添加/修改配置")]),t._v(" "),e("td",[t._v("--add-config k1,k2")])])])]),t._v(" "),e("p",[t._v("topic添加/修改动态配置")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kafka-configs --bootstrap-server xxxxxx:9092\n--alter --entity-type topics --entity-name topic_name \n--add-config file.delete.delay.ms"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("222222")]),t._v(",retention.ms"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("999999")]),t._v("\n")])])]),e("p",[t._v("topic删除动态配置")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kafka-configs --bootstrap-server xxxxxx:9092 \n--alter --entity-type topics --entity-name topic_name \n--delete-config file.delete.delay.ms,retention.ms\n")])])]),e("h3",{attrs:{id:"持续批量拉取消息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#持续批量拉取消息"}},[t._v("#")]),t._v(" 持续批量拉取消息")]),t._v(" "),e("p",[t._v("单次最大消费10条消息(不加参数意为持续消费)")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kafka-verifiable-consumer --bootstrap-server xxxxxx:9092 \n--group group_name\n--topic topic_name --max-messages "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n")])])]),e("h3",{attrs:{id:"删除指定分区的消息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除指定分区的消息"}},[t._v("#")]),t._v(" 删除指定分区的消息")]),t._v(" "),e("p",[t._v("删除指定topic的某个分区的消息删除至offset为1024")]),t._v(" "),e("p",[t._v("json文件offset-json-file.json")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('{\n    "partitions": [\n        {\n            "topic": "topic_name",\n            "partition": 0,\n            "offset": 1024\n        }\n    ],\n    "version": 1\n}\n')])])]),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kafka-delete-records --bootstrap-server xxxxxx:9092 \n--offset-json-file offset-json-file.json\n")])])]),e("h3",{attrs:{id:"查看broker磁盘信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看broker磁盘信息"}},[t._v("#")]),t._v(" 查看Broker磁盘信息")]),t._v(" "),e("p",[t._v("查询指定topic磁盘信息")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kafka-log-dirs --bootstrap-server xxxxxx:9090 \n--describe --topic-list topic1,topic2\n")])])]),e("p",[t._v("查询指定Broker磁盘信息")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kafka-log-dirs --bootstrap-server xxxxxx:9090 \n--describe --topic-list topic1 --broker-list "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),e("h2",{attrs:{id:"hive"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hive"}},[t._v("#")]),t._v(" Hive")]),t._v(" "),e("h3",{attrs:{id:"启动类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动类"}},[t._v("#")]),t._v(" 启动类")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("功能说明")]),t._v(" "),e("th",[t._v("命令")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("启动hiveserver2服务")]),t._v(" "),e("td",[t._v("bin/hiveserver2")])]),t._v(" "),e("tr",[e("td",[t._v("启动beeline")]),t._v(" "),e("td",[t._v("bin/beeline")])]),t._v(" "),e("tr",[e("td",[t._v("连接hiveserver2")]),t._v(" "),e("td",[t._v("beeline> !connect jdbc:hive2://hadoop102:10000")])]),t._v(" "),e("tr",[e("td",[t._v("metastroe服务")]),t._v(" "),e("td",[t._v("bin/hive --service metastore")])])])]),t._v(" "),e("p",[t._v("hive 启动元数据服务（metastore和hiveserver2）和优雅关闭脚本")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("启动： hive.sh start\n关闭： hive.sh stop\n重启： hive.sh restart\n状态： hive.sh status\n")])])]),e("p",[t._v("脚本如下")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('#!/bin/bash\nHIVE_LOG_DIR=$HIVE_HOME/logs\n\nmkdir -p $HIVE_LOG_DIR\n\n#检查进程是否运行正常，参数1为进程名，参数2为进程端口\nfunction check_process()\n{\n    pid=$(ps -ef 2>/dev/null | grep -v grep | grep -i $1 | awk \'{print $2}\')\n    ppid=$(netstat -nltp 2>/dev/null | grep $2 | awk \'{print $7}\' | cut -d \'/\' -f 1)\n    echo $pid\n    [[ "$pid" =~ "$ppid" ]] && [ "$ppid" ] && return 0 || return 1\n}\n\nfunction hive_start()\n{\n    metapid=$(check_process HiveMetastore 9083)\n    cmd="nohup hive --service metastore >$HIVE_LOG_DIR/metastore.log 2>&1 &"\n    cmd=$cmd" sleep4; hdfs dfsadmin -safemode wait >/dev/null 2>&1"\n    [ -z "$metapid" ] && eval $cmd || echo "Metastroe服务已启动"\n    server2pid=$(check_process HiveServer2 10000)\n    cmd="nohup hive --service hiveserver2 >$HIVE_LOG_DIR/hiveServer2.log 2>&1 &"\n    [ -z "$server2pid" ] && eval $cmd || echo "HiveServer2服务已启动"\n}\n\nfunction hive_stop()\n{\n    metapid=$(check_process HiveMetastore 9083)\n    [ "$metapid" ] && kill $metapid || echo "Metastore服务未启动"\n    server2pid=$(check_process HiveServer2 10000)\n    [ "$server2pid" ] && kill $server2pid || echo "HiveServer2服务未启动"\n}\n\ncase $1 in\n"start")\n    hive_start\n    ;;\n"stop")\n    hive_stop\n    ;;\n"restart")\n    hive_stop\n    sleep 2\n    hive_start\n    ;;\n"status")\n    check_process HiveMetastore 9083 >/dev/null && echo "Metastore服务运行正常" || echo "Metastore服务运行异常"\n    check_process HiveServer2 10000 >/dev/null && echo "HiveServer2服务运行正常" || echo "HiveServer2服务运行异常"\n    ;;\n*)\n    echo Invalid Args!\n    echo \'Usage: \'$(basename $0)\' start|stop|restart|status\'\n    ;;\nesac\n')])])]),e("h3",{attrs:{id:"常用交互命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用交互命令"}},[t._v("#")]),t._v(" 常用交互命令")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("功能说明")]),t._v(" "),e("th",[t._v("命令")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("不进入hive的交互窗口执行sql")]),t._v(" "),e("td",[t._v('bin/hive -e "sql语句"')])]),t._v(" "),e("tr",[e("td",[t._v("执行脚本中sql语句")]),t._v(" "),e("td",[t._v("bin/hive -f hive.sql")])]),t._v(" "),e("tr",[e("td",[t._v("退出hive窗口")]),t._v(" "),e("td",[t._v("exit 或 quit")])]),t._v(" "),e("tr",[e("td",[t._v("命令窗口中查看hdfs文件系统")]),t._v(" "),e("td",[t._v("dfs -ls /")])]),t._v(" "),e("tr",[e("td",[t._v("命令窗口中查看hdfs文件系统")]),t._v(" "),e("td",[t._v("! ls /data/h")])])])]),t._v(" "),e("h3",{attrs:{id:"sql类-特殊的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sql类-特殊的"}},[t._v("#")]),t._v(" SQL类(特殊的)")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("语句")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("查看hive中的所有数据库")]),t._v(" "),e("td",[t._v("show databases")])]),t._v(" "),e("tr",[e("td",[t._v("用default数据库")]),t._v(" "),e("td",[t._v("use default")])]),t._v(" "),e("tr",[e("td",[t._v("查询表结构")]),t._v(" "),e("td",[t._v("desc table_name")])]),t._v(" "),e("tr",[e("td",[t._v("查看数据库")]),t._v(" "),e("td",[t._v("show databases")])]),t._v(" "),e("tr",[e("td",[t._v("重命名表名")]),t._v(" "),e("td",[t._v("alter table table1 rename to table2")])]),t._v(" "),e("tr",[e("td",[t._v("修改表中字段")]),t._v(" "),e("td",[t._v("alter table table_name change name user_name String")])]),t._v(" "),e("tr",[e("td",[t._v("修改字段类型")]),t._v(" "),e("td",[t._v("alter table table_name change salary salary Double")])]),t._v(" "),e("tr",[e("td",[t._v("创建外部表")]),t._v(" "),e("td",[t._v("create external table ....")])]),t._v(" "),e("tr",[e("td",[t._v("查询外部表信息")]),t._v(" "),e("td",[t._v("desc formatted outsidetable")])]),t._v(" "),e("tr",[e("td",[t._v("创建视图")]),t._v(" "),e("td",[t._v("create view view_name as select * from table_name .....")])]),t._v(" "),e("tr",[e("td",[t._v("添加数据")]),t._v(" "),e("td",[t._v("load data local inpath 'xxx'  overwrite into table table_name partition(day='2021-12-01')")])])])]),t._v(" "),e("h3",{attrs:{id:"内置函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内置函数"}},[t._v("#")]),t._v(" 内置函数")]),t._v(" "),e("p",[t._v("（1） NVL")]),t._v(" "),e("p",[t._v("给值为NULL的数据赋值，它的格式是NVL( value，default_value)。它的功能是如果value为NULL，则NVL函数返回default_value的值，否则返回value的值，如果两个参数都为NULL ，则返回NULL")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select nvl(column, 0) from xxx；\n")])])]),e("p",[t._v("（2）行转列")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("函数")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("CONCAT(string A/col, string B/col…)")]),t._v(" "),e("td",[t._v("返回输入字符串连接后的结果，支持任意个输入字符串")])]),t._v(" "),e("tr",[e("td",[t._v("CONCAT_WS(separator, str1, str2,...)")]),t._v(" "),e("td",[t._v("第一个参数参数间的分隔符，如果分隔符是 NULL，返回值也将为 NULL。这个函数会跳过分隔符参数后的任何 NULL 和空字符串。分隔符将被加到被连接的字符串之间。")])]),t._v(" "),e("tr",[e("td",[t._v("COLLECT_SET(col)")]),t._v(" "),e("td",[t._v("将某字段的值进行去重汇总，产生array类型字段")])]),t._v(" "),e("tr",[e("td",[t._v("COLLECT_LIST(col)")]),t._v(" "),e("td",[t._v("函数只接受基本数据类型，它的主要作用是将某字段的值进行不去重汇总，产生array类型字段。")])])])]),t._v(" "),e("p",[t._v("（3）列转行(一列转多行)")]),t._v(" "),e("p",[e("strong",[t._v("Split(str, separator)：")]),t._v(" 将字符串按照后面的分隔符切割，转换成字符array。")]),t._v(" "),e("p",[e("strong",[t._v("EXPLODE(col)：")]),t._v("\n将hive一列中复杂的array或者map结构拆分成多行。")]),t._v(" "),e("p",[e("strong",[t._v("LATERAL VIEW")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("用法：\n\nLATERAL VIEW udtf(expression) tableAlias AS columnAlias\n")])])]),e("p",[t._v("解释：lateral view用于和split, explode等UDTF一起使用，它能够将一行数据拆成多行数据，在此基础上可以对拆分后的数据进行聚合。")]),t._v(" "),e("p",[t._v("lateral view首先为原始表的每行调用UDTF，UDTF会把一行拆分成一或者多行，lateral view再把结果组合，产生一个支持别名表的虚拟表。")]),t._v(" "),e("p",[e("strong",[t._v("准备数据源测试")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("movie")]),t._v(" "),e("th",[t._v("category")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("《功勋》")]),t._v(" "),e("td",[t._v("记录,剧情")])]),t._v(" "),e("tr",[e("td",[t._v("《战狼2》")]),t._v(" "),e("td",[t._v("战争,动作,灾难")])])])]),t._v(" "),e("p",[e("strong",[t._v("SQL")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('SELECT movie,category_name \nFROM movie_info \nlateral VIEW\nexplode(split(category,",")) movie_info_tmp  AS category_name ;\n\n')])])]),e("p",[e("strong",[t._v("测试结果")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("《功勋》      记录\n《功勋》      剧情\n《战狼2》     战争\n《战狼2》     动作\n《战狼2》     灾难\n\n")])])]),e("h3",{attrs:{id:"窗口函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#窗口函数"}},[t._v("#")]),t._v(" 窗口函数")]),t._v(" "),e("p",[t._v("（1）OVER()")]),t._v(" "),e("p",[t._v("定分析函数工作的数据窗口大小，这个数据窗口大小可能会随着行的变而变化。")]),t._v(" "),e("p",[t._v("（2）CURRENT ROW（当前行）")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("n PRECEDING：往前n行数据\n\nn FOLLOWING：往后n行数据\n")])])]),e("p",[t._v("（3）UNBOUNDED（无边界）")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("UNBOUNDED PRECEDING 前无边界，表示从前面的起点\n\nUNBOUNDED FOLLOWING后无边界，表示到后面的终点\n")])])]),e("p",[e("strong",[t._v("SQL案例：由起点到当前行的聚合")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select \n    sum(money) over(partition by user_id order by pay_time rows between UNBOUNDED PRECEDING and current row) \nfrom or_order;\n")])])]),e("p",[e("strong",[t._v("SQL案例：当前行和前面一行做聚合")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select \n    sum(money) over(partition by user_id order by pay_time rows between 1 PRECEDING and current row) \nfrom or_order;\n")])])]),e("p",[e("strong",[t._v("SQL案例：当前行和前面一行和后一行做聚合")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select \n    sum(money) over(partition by user_id order by pay_time rows between 1 PRECEDING AND 1 FOLLOWING )\nfrom or_order;\n")])])]),e("p",[e("strong",[t._v("SQL案例：当前行及后面所有行")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select \n    sum(money) over(partition by user_id order by pay_time rows between current row and UNBOUNDED FOLLOWING  )\nfrom or_order;\n")])])]),e("p",[t._v("（4）LAG(col,n,default_val)")]),t._v(" "),e("p",[t._v("往前第n行数据，没有的话default_val")]),t._v(" "),e("p",[t._v("（5）LEAD(col,n, default_val)")]),t._v(" "),e("p",[t._v("往后第n行数据，没有的话default_val")]),t._v(" "),e("p",[e("strong",[t._v("SQL案例：查询用户购买明细以及上次的购买时间和下次购买时间")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select \n\tuser_id,,pay_time,money,\n\t\n\tlag(pay_time,1,'1970-01-01') over(PARTITION by name order by pay_time) prev_time,\n\t\n\tlead(pay_time,1,'1970-01-01') over(PARTITION by name order by pay_time) next_time\nfrom or_order;\n\n")])])]),e("p",[t._v("（6）FIRST_VALUE(col,true/false)")]),t._v(" "),e("p",[t._v("当前窗口下的第一个值，第二个参数为true，跳过空值。")]),t._v(" "),e("p",[t._v("（7）LAST_VALUE (col,true/false)")]),t._v(" "),e("p",[t._v("当前窗口下的最后一个值，第二个参数为true，跳过空值。")]),t._v(" "),e("p",[e("strong",[t._v("SQL案例：查询用户每个月第一次的购买时间 和 每个月的最后一次购买时间")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select\n\tFIRST_VALUE(pay_time) \n\t    over(\n\t        partition by user_id,month(pay_time) order by pay_time \n\t        rows between UNBOUNDED PRECEDING and UNBOUNDED FOLLOWING\n\t        ) first_time,\n\t\n\tLAST_VALUE(pay_time) \n\t    over(partition by user_id,month(pay_time) order by pay_time rows between UNBOUNDED PRECEDING and UNBOUNDED FOLLOWING\n\t    ) last_time\nfrom or_order;\n\n")])])]),e("p",[t._v("（8）NTILE(n)")]),t._v(" "),e("p",[t._v("把有序窗口的行分发到指定数据的组中，各个组有编号，编号从1开始，对于每一行，NTILE返回此行所属的组的编号。（用于将分组数据按照顺序切分成n片，返回当前切片值）")]),t._v(" "),e("p",[e("strong",[t._v("SQL案例：查询前25%时间的订单信息")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select * from (\n    select User_id,pay_time,money,\n    \n    ntile(4) over(order by pay_time) sorted\n    \n    from or_order\n) t\nwhere sorted = 1;\n\n")])])]),e("h3",{attrs:{id:"_4个by"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4个by"}},[t._v("#")]),t._v(" 4个By")]),t._v(" "),e("p",[t._v("（1）Order By")]),t._v(" "),e("p",[t._v("全局排序，只有一个Reducer。")]),t._v(" "),e("p",[t._v("（2）Sort By")]),t._v(" "),e("p",[t._v("分区内有序。")]),t._v(" "),e("p",[t._v("（3）Distrbute By")]),t._v(" "),e("p",[t._v("类似MR中Partition，进行分区，结合sort by使用。")]),t._v(" "),e("p",[t._v("（4） Cluster By")]),t._v(" "),e("p",[t._v("当Distribute by和Sorts by字段相同时，可以使用Cluster by方式。Cluster by除了具有Distribute by的功能外还兼具Sort by的功能。但是排序只能是升序排序，不能指定排序规则为ASC或者DESC。")]),t._v(" "),e("p",[t._v("在生产环境中Order By用的比较少，容易导致OOM。")]),t._v(" "),e("p",[t._v("在生产环境中Sort By+ Distrbute By用的多。")]),t._v(" "),e("h3",{attrs:{id:"排序函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#排序函数"}},[t._v("#")]),t._v(" 排序函数")]),t._v(" "),e("p",[t._v("（1）RANK()")]),t._v(" "),e("p",[t._v("排序相同时会重复，总数不会变")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("1\n1\n3\n3\n5\n")])])]),e("p",[t._v("（2）DENSE_RANK()")]),t._v(" "),e("p",[t._v("排序相同时会重复，总数会减少")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("1\n1\n2\n2\n3\n")])])]),e("p",[t._v("（3）ROW_NUMBER()")]),t._v(" "),e("p",[t._v("会根据顺序计算")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("1\n2\n3\n4\n5\n")])])]),e("h3",{attrs:{id:"日期函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日期函数"}},[t._v("#")]),t._v(" 日期函数")]),t._v(" "),e("p",[t._v("datediff：返回结束日期减去开始日期的天数")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("datediff(string enddate, string startdate) \n\nselect datediff('2021-11-20','2021-11-22') \n")])])]),e("p",[t._v("date_add：返回开始日期startdate增加days天后的日期")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("date_add(string startdate, int days) \n\nselect date_add('2021-11-20',3) \n")])])]),e("p",[t._v("date_sub：返回开始日期startdate减少days天后的日期")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("date_sub (string startdate, int days) \n\nselect date_sub('2021-11-22',3)\n")])])]),e("hr"),t._v(" "),e("h2",{attrs:{id:"redis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[t._v("#")]),t._v(" Redis")]),t._v(" "),e("h3",{attrs:{id:"启动类-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动类-2"}},[t._v("#")]),t._v(" 启动类")]),t._v(" "),e("h3",{attrs:{id:"key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#key"}},[t._v("#")]),t._v(" key")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("命令")]),t._v(" "),e("th",[t._v("功能说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("keys  *")]),t._v(" "),e("td",[t._v("查看当前库的所有键")])]),t._v(" "),e("tr",[e("td",[t._v("exists "),e("key")],1),t._v(" "),e("td",[t._v("判断某个键是否存在")])]),t._v(" "),e("tr",[e("td",[t._v("type "),e("key")],1),t._v(" "),e("td",[t._v("查看键的类型")])]),t._v(" "),e("tr",[e("td",[t._v("del "),e("key")],1),t._v(" "),e("td",[t._v("删除某个键")])]),t._v(" "),e("tr",[e("td",[t._v("expire "),e("key",[e("seconds")],1)],1),t._v(" "),e("td",[t._v("为键值设置过期时间，单位秒")])]),t._v(" "),e("tr",[e("td",[t._v("ttl "),e("key")],1),t._v(" "),e("td",[t._v("查看还有多久过期,-1表示永不过期,-2表示已过期")])]),t._v(" "),e("tr",[e("td",[t._v("dbsize")]),t._v(" "),e("td",[t._v("查看当前数据库中key的数量")])]),t._v(" "),e("tr",[e("td",[t._v("flushdb")]),t._v(" "),e("td",[t._v("清空当前库")])]),t._v(" "),e("tr",[e("td",[t._v("Flushall")]),t._v(" "),e("td",[t._v("通杀全部库")])])])]),t._v(" "),e("h3",{attrs:{id:"string"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" String")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("命令")]),t._v(" "),e("th",[t._v("功能说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("get "),e("key")],1),t._v(" "),e("td",[t._v("查询对应键值")])]),t._v(" "),e("tr",[e("td",[t._v("set "),e("key",[e("value")],1)],1),t._v(" "),e("td",[t._v("添加键值对")])]),t._v(" "),e("tr",[e("td",[t._v("append "),e("key",[e("value")],1)],1),t._v(" "),e("td",[t._v("将给定的"),e("value",[t._v("追加到原值的末尾")])],1)]),t._v(" "),e("tr",[e("td",[t._v("strlen "),e("key")],1),t._v(" "),e("td",[t._v("获取值的长度")])]),t._v(" "),e("tr",[e("td",[t._v("setnx "),e("key",[e("value")],1)],1),t._v(" "),e("td",[t._v("只有在key 不存在时设置key的值")])]),t._v(" "),e("tr",[e("td",[t._v("incr "),e("key")],1),t._v(" "),e("td",[t._v("将key中存储的数字值增1只能对数字值操作，如果为空，新增值为1")])]),t._v(" "),e("tr",[e("td",[t._v("decr "),e("key")],1),t._v(" "),e("td",[t._v("将key中存储的数字值减1只能对数字之操作，如果为空,新增值为-1")])]),t._v(" "),e("tr",[e("td",[t._v("incrby /decrby "),e("key",[t._v(" 步长")])],1),t._v(" "),e("td",[t._v("将key中存储的数字值增减，自定义步长")])]),t._v(" "),e("tr",[e("td",[t._v("mset "),e("key1",[e("value1",[e("key2",[e("value2")],1)],1)],1)],1),t._v(" "),e("td",[t._v("同时设置一个或多个key-value对")])]),t._v(" "),e("tr",[e("td",[t._v("mget "),e("key1",[e("key2",[e("key3")],1)],1)],1),t._v(" "),e("td",[t._v("同时获取一个或多个value")])]),t._v(" "),e("tr",[e("td",[t._v("msetnx "),e("key1",[e("value1",[e("key2",[e("value2")],1)],1)],1)],1),t._v(" "),e("td",[t._v("同时设置一个或多个key-value对，当且仅当所有给定的key都不存在")])]),t._v(" "),e("tr",[e("td",[t._v("getrange "),e("key",[t._v(" <起始位置> <结束位置>")])],1),t._v(" "),e("td",[t._v("获得值的范围,类似java中的substring")])]),t._v(" "),e("tr",[e("td",[t._v("setrange "),e("key",[t._v(" <起始位置> "),e("value")],1)],1),t._v(" "),e("td",[t._v("用"),e("value",[t._v("覆盖"),e("key",[t._v("所存储的字符串值，从<起始位置>开始")])],1)],1)]),t._v(" "),e("tr",[e("td",[t._v("setex "),e("key",[t._v(" <过期时间> "),e("value")],1)],1),t._v(" "),e("td",[t._v("设置键值的同时，设置过去时间，单位秒")])]),t._v(" "),e("tr",[e("td",[t._v("getset "),e("key",[e("value")],1)],1),t._v(" "),e("td",[t._v("以新换旧,设置了新值的同时获取旧值")])])])]),t._v(" "),e("h3",{attrs:{id:"list"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[t._v("#")]),t._v(" List")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("命令")]),t._v(" "),e("th",[t._v("功能说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("lpush/rpush  "),e("key",[e("value1",[e("value2")],1)],1)],1),t._v(" "),e("td",[t._v("从左边/右边插入一个或多个值。")])]),t._v(" "),e("tr",[e("td",[t._v("lpop/rpop  "),e("key")],1),t._v(" "),e("td",[t._v("从左边/右边吐出一个值。值在键在，值光键亡。")])]),t._v(" "),e("tr",[e("td",[t._v("rpoplpush  "),e("key1",[e("key2")],1)],1),t._v(" "),e("td",[t._v("从"),e("key1",[t._v("列表右边吐出一个值，插到"),e("key2",[t._v("列表左边")])],1)],1)]),t._v(" "),e("tr",[e("td",[t._v("lrange "),e("key",[e("start",[e("stop")],1)],1)],1),t._v(" "),e("td",[t._v("按照索引下标获得元素(从左到右)")])]),t._v(" "),e("tr",[e("td",[t._v("lindex "),e("key",[e("index")],1)],1),t._v(" "),e("td",[t._v("按照索引下标获得元素(从左到右)")])]),t._v(" "),e("tr",[e("td",[t._v("llen "),e("key")],1),t._v(" "),e("td",[t._v("获得列表长度")])]),t._v(" "),e("tr",[e("td",[t._v("linsert "),e("key",[t._v("  before "),e("value",[e("newvalue")],1)],1)],1),t._v(" "),e("td",[t._v("在"),e("value",[t._v("的后面插入"),e("newvalue",[t._v(" 插入值")])],1)],1)]),t._v(" "),e("tr",[e("td",[t._v("lrem "),e("key",[e("n",[e("value")],1)],1)],1),t._v(" "),e("td",[t._v("从左边删除n个value(从左到右)")])])])]),t._v(" "),e("h3",{attrs:{id:"set"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[t._v("#")]),t._v(" Set")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("命令")]),t._v(" "),e("th",[t._v("功能说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("sadd "),e("key",[e("value1",[e("value2",[t._v(" ....")])],1)],1)],1),t._v(" "),e("td",[t._v("将一个或多个 member 元素加入到集合 key 当中，已经存在于集合的 member 元素将被忽略。")])]),t._v(" "),e("tr",[e("td",[t._v("smembers "),e("key")],1),t._v(" "),e("td",[t._v("取出该集合的所有值。")])]),t._v(" "),e("tr",[e("td",[t._v("sismember "),e("key",[e("value")],1)],1),t._v(" "),e("td",[t._v("判断集合"),e("key",[t._v("是否为含有该"),e("value",[t._v("值，有返回1，没有返回0")])],1)],1)]),t._v(" "),e("tr",[e("td",[t._v("scard  "),e("key")],1),t._v(" "),e("td",[t._v("返回该集合的元素个数。")])]),t._v(" "),e("tr",[e("td",[t._v("srem "),e("key",[e("value1",[e("value2",[t._v(" ....")])],1)],1)],1),t._v(" "),e("td",[t._v("删除集合中的某个元素。")])]),t._v(" "),e("tr",[e("td",[t._v("spop "),e("key")],1),t._v(" "),e("td",[t._v("随机从该集合中吐出一个值。")])]),t._v(" "),e("tr",[e("td",[t._v("srandmember "),e("key",[e("n")],1)],1),t._v(" "),e("td",[t._v("随机从该集合中取出n个值。不会从集合中删除")])]),t._v(" "),e("tr",[e("td",[t._v("sinter "),e("key1",[e("key2")],1)],1),t._v(" "),e("td",[t._v("返回两个集合的交集元素。")])]),t._v(" "),e("tr",[e("td",[t._v("sunion "),e("key1",[e("key2")],1)],1),t._v(" "),e("td",[t._v("返回两个集合的并集元素。")])]),t._v(" "),e("tr",[e("td",[t._v("sdiff "),e("key1",[e("key2")],1)],1),t._v(" "),e("td",[t._v("返回两个集合的差集元素。")])])])]),t._v(" "),e("h3",{attrs:{id:"hash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hash"}},[t._v("#")]),t._v(" Hash")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("命令")]),t._v(" "),e("th",[t._v("功能说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("hset "),e("key",[e("field",[e("value")],1)],1)],1),t._v(" "),e("td",[t._v("给"),e("key",[t._v("集合中的  "),e("field",[t._v("键赋值"),e("value")],1)],1)],1)]),t._v(" "),e("tr",[e("td",[t._v("hget "),e("key1",[e("field")],1)],1),t._v(" "),e("td",[t._v("从"),e("key1",[t._v("集合"),e("field",[t._v(" 取出 value")])],1)],1)]),t._v(" "),e("tr",[e("td",[t._v("hmset "),e("key1",[e("field1",[e("value1",[e("field2",[e("value2",[t._v("...")])],1)],1)],1)],1)],1),t._v(" "),e("td",[t._v("批量设置hash的值")])]),t._v(" "),e("tr",[e("td",[t._v("hexists key  "),e("field")],1),t._v(" "),e("td",[t._v("查看哈希表 key 中，给定域 field 是否存在。")])]),t._v(" "),e("tr",[e("td",[t._v("hkeys "),e("key")],1),t._v(" "),e("td",[t._v("列出该hash集合的所有field")])]),t._v(" "),e("tr",[e("td",[t._v("hvals "),e("key")],1),t._v(" "),e("td",[t._v("列出该hash集合的所有value")])]),t._v(" "),e("tr",[e("td",[t._v("hincrby "),e("key",[e("field",[e("increment")],1)],1)],1),t._v(" "),e("td",[t._v("为哈希表 key 中的域 field 的值加上增量 increment")])]),t._v(" "),e("tr",[e("td",[t._v("hsetnx "),e("key",[e("field",[e("value")],1)],1)],1),t._v(" "),e("td",[t._v("将哈希表 key 中的域 field 的值设置为 value ，当且仅当域 field 不存在")])])])]),t._v(" "),e("h3",{attrs:{id:"zset-sorted-set"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zset-sorted-set"}},[t._v("#")]),t._v(" zset(Sorted set)")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("命令")]),t._v(" "),e("th",[t._v("功能说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("zadd  "),e("key",[e("score1",[e("value1",[e("score2",[e("value2",[t._v("...")])],1)],1)],1)],1)],1),t._v(" "),e("td",[t._v("将一个或多个 member 元素及其 score 值加入到有序集 key 当中")])]),t._v(" "),e("tr",[e("td",[t._v("zrange "),e("key",[e("start",[e("stop",[t._v("  [WITHSCORES]")])],1)],1)],1),t._v(" "),e("td",[t._v("返回有序集 key 中，下标在"),e("start",[e("stop",[t._v("之间的元素带WITHSCORES，可以让分数一起和值返回到结果集。")])],1)],1)]),t._v(" "),e("tr",[e("td",[t._v("zrangebyscore key min max [withscores] [limit offset count]")]),t._v(" "),e("td",[t._v("返回有序集 key 中，所有 score 值介于 min 和 max 之间(包括等于 min 或 max )的成员。有序集成员按 score 值递增(从小到大)次序排列。")])]),t._v(" "),e("tr",[e("td",[t._v("zrevrangebyscore key max min [withscores] [limit offset count]")]),t._v(" "),e("td",[t._v("同上，改为从大到小排列。")])]),t._v(" "),e("tr",[e("td",[t._v("zincrby "),e("key",[e("increment",[e("value")],1)],1)],1),t._v(" "),e("td",[t._v("为元素的score加上增量")])]),t._v(" "),e("tr",[e("td",[t._v("zrem  "),e("key",[e("value")],1)],1),t._v(" "),e("td",[t._v("删除该集合下，指定值的元素")])]),t._v(" "),e("tr",[e("td",[t._v("zcount "),e("key",[e("min",[e("max")],1)],1)],1),t._v(" "),e("td",[t._v("统计该集合，分数区间内的元素个数")])]),t._v(" "),e("tr",[e("td",[t._v("zrank "),e("key",[e("value")],1)],1),t._v(" "),e("td",[t._v("返回该值在集合中的排名，从0开始。")])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"flink"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flink"}},[t._v("#")]),t._v(" Flink")]),t._v(" "),e("h3",{attrs:{id:"启动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动"}},[t._v("#")]),t._v(" 启动")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("./start-cluster.sh \n")])])]),e("h3",{attrs:{id:"run"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#run"}},[t._v("#")]),t._v(" run")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("./bin/flink run [OPTIONS]\n\n./bin/flink run -m yarn-cluster -c com.wang.flink.WordCount /opt/app/WordCount.jar\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("OPTIONS")]),t._v(" "),e("th",[t._v("功能说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("-d")]),t._v(" "),e("td",[t._v("detached 是否使用分离模式")])]),t._v(" "),e("tr",[e("td",[t._v("-m")]),t._v(" "),e("td",[t._v("jobmanager 指定提交的jobmanager")])]),t._v(" "),e("tr",[e("td",[t._v("-yat")]),t._v(" "),e("td",[t._v("–yarnapplicationType 设置yarn应用的类型")])]),t._v(" "),e("tr",[e("td",[t._v("-yD")]),t._v(" "),e("td",[t._v("使用给定属性的值")])]),t._v(" "),e("tr",[e("td",[t._v("-yd")]),t._v(" "),e("td",[t._v("–yarndetached 使用yarn分离模式")])]),t._v(" "),e("tr",[e("td",[t._v("-yh")]),t._v(" "),e("td",[t._v("–yarnhelp yarn session的帮助")])]),t._v(" "),e("tr",[e("td",[t._v("-yid")]),t._v(" "),e("td",[t._v("–yarnapplicationId 挂到正在运行的yarnsession上")])]),t._v(" "),e("tr",[e("td",[t._v("-yj")]),t._v(" "),e("td",[t._v("–yarnjar Flink jar文件的路径")])]),t._v(" "),e("tr",[e("td",[t._v("-yjm")]),t._v(" "),e("td",[t._v("–yarnjobManagerMemory jobmanager的内存(单位M)")])]),t._v(" "),e("tr",[e("td",[t._v("-ynl")]),t._v(" "),e("td",[t._v("–yarnnodeLabel 指定 YARN 应用程序 YARN 节点标签")])]),t._v(" "),e("tr",[e("td",[t._v("-ynm")]),t._v(" "),e("td",[t._v("–yarnname 自定义yarn应用名称")])]),t._v(" "),e("tr",[e("td",[t._v("-yq")]),t._v(" "),e("td",[t._v("–yarnquery 显示yarn的可用资源")])]),t._v(" "),e("tr",[e("td",[t._v("-yqu")]),t._v(" "),e("td",[t._v("–yarnqueue 指定yarn队列")])]),t._v(" "),e("tr",[e("td",[t._v("-ys")]),t._v(" "),e("td",[t._v("–yarnslots 指定每个taskmanager的slots数")])]),t._v(" "),e("tr",[e("td",[t._v("-yt")]),t._v(" "),e("td",[t._v("yarnship 在指定目录中传输文件")])]),t._v(" "),e("tr",[e("td",[t._v("-ytm")]),t._v(" "),e("td",[t._v("–yarntaskManagerMemory 每个taskmanager的内存")])]),t._v(" "),e("tr",[e("td",[t._v("-yz")]),t._v(" "),e("td",[t._v("–yarnzookeeperNamespace 用来创建ha的zk子路径的命名空间")])]),t._v(" "),e("tr",[e("td",[t._v("-z")]),t._v(" "),e("td",[t._v("–zookeeperNamespace 用来创建ha的zk子路径的命名空间")])]),t._v(" "),e("tr",[e("td",[t._v("-p")]),t._v(" "),e("td",[t._v("并行度")])]),t._v(" "),e("tr",[e("td",[t._v("-yn")]),t._v(" "),e("td",[t._v("需要分配的YARN容器个数(=任务管理器的数量)")])])])]),t._v(" "),e("h3",{attrs:{id:"info"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#info"}},[t._v("#")]),t._v(" info")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("./bin/flink info [OPTIONS]\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("OPTIONS")]),t._v(" "),e("th",[t._v("功能说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("-c")]),t._v(" "),e("td",[t._v("程序进入点，主类")])]),t._v(" "),e("tr",[e("td",[t._v("-p")]),t._v(" "),e("td",[t._v("并行度")])])])]),t._v(" "),e("h3",{attrs:{id:"list-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list-2"}},[t._v("#")]),t._v(" list")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("./bin/flink list [OPTIONS]\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("OPTIONS")]),t._v(" "),e("th",[t._v("功能说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("-a")]),t._v(" "),e("td",[t._v("–all 显示所有应用和对应的job id")])]),t._v(" "),e("tr",[e("td",[t._v("-r")]),t._v(" "),e("td",[t._v("–running 显示正在运行的应用和job id")])]),t._v(" "),e("tr",[e("td",[t._v("-s")]),t._v(" "),e("td",[t._v("–scheduled 显示调度的应用和job id")])]),t._v(" "),e("tr",[e("td",[t._v("-m")]),t._v(" "),e("td",[t._v("–jobmanager 指定连接的jobmanager")])]),t._v(" "),e("tr",[e("td",[t._v("-yid")]),t._v(" "),e("td",[t._v("–yarnapplicationId 挂到指定的yarn id对应的yarn session上")])]),t._v(" "),e("tr",[e("td",[t._v("-z")]),t._v(" "),e("td",[t._v("–zookeeperNamespace 用来创建ha的zk子路径的命名空间")])])])]),t._v(" "),e("h3",{attrs:{id:"stop"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#stop"}},[t._v("#")]),t._v(" stop")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("./bin/flink stop  [OPTIONS] <Job ID>\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("OPTIONS")]),t._v(" "),e("th",[t._v("功能说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("-d")]),t._v(" "),e("td",[t._v("在采取保存点和停止管道之前，发送MAX_WATERMARK")])]),t._v(" "),e("tr",[e("td",[t._v("-p")]),t._v(" "),e("td",[t._v("savepointPath 保存点的路径 'xxxxx'")])]),t._v(" "),e("tr",[e("td",[t._v("-m")]),t._v(" "),e("td",[t._v("–jobmanager 指定连接的jobmanager")])]),t._v(" "),e("tr",[e("td",[t._v("-yid")]),t._v(" "),e("td",[t._v("–yarnapplicationId 挂到指定的yarn id对应的yarn session上")])]),t._v(" "),e("tr",[e("td",[t._v("-z")]),t._v(" "),e("td",[t._v("–zookeeperNamespace 用来创建ha的zk子路径的命名空间")])])])]),t._v(" "),e("h3",{attrs:{id:"cancel-弱化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cancel-弱化"}},[t._v("#")]),t._v(" cancel(弱化)")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("./bin/flink cancel  [OPTIONS] <Job ID>\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("OPTIONS")]),t._v(" "),e("th",[t._v("功能说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("-s")]),t._v(" "),e("td",[t._v('使用 "stop "代替')])]),t._v(" "),e("tr",[e("td",[t._v("-D")]),t._v(" "),e("td",[t._v("允许指定多个通用配置选项")])]),t._v(" "),e("tr",[e("td",[t._v("-m")]),t._v(" "),e("td",[t._v("要连接的JobManager的地址")])]),t._v(" "),e("tr",[e("td",[t._v("-yid")]),t._v(" "),e("td",[t._v("–yarnapplicationId 挂到指定的yarn id对应的yarn session上")])]),t._v(" "),e("tr",[e("td",[t._v("-z")]),t._v(" "),e("td",[t._v("–zookeeperNamespace 用来创建ha的zk子路径的命名空间")])])])]),t._v(" "),e("h3",{attrs:{id:"savepoint"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#savepoint"}},[t._v("#")]),t._v(" savepoint")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("./bin/flink savepoint  [OPTIONS] <Job ID>\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("OPTIONS")]),t._v(" "),e("th",[t._v("功能说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("-d")]),t._v(" "),e("td",[t._v("要处理的保存点的路径")])]),t._v(" "),e("tr",[e("td",[t._v("-j")]),t._v(" "),e("td",[t._v("Flink程序的JAR文件")])]),t._v(" "),e("tr",[e("td",[t._v("-m")]),t._v(" "),e("td",[t._v("要连接的JobManager的地址")])]),t._v(" "),e("tr",[e("td",[t._v("-yid")]),t._v(" "),e("td",[t._v("–yarnapplicationId 挂到指定的yarn id对应的yarn session上")])]),t._v(" "),e("tr",[e("td",[t._v("-z")]),t._v(" "),e("td",[t._v("–zookeeperNamespace 用来创建ha的zk子路径的命名空间")])])])])])}),[],!1,null,null,null);v.default=_.exports}}]);